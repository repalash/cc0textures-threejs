"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var e={exports:{}},t=e.exports=function(e){var t,n,i=document,r=i.createElement("div"),a=r.style,o=navigator.userAgent,s=-1!==o.indexOf("Firefox")&&-1!==o.indexOf("Mobile"),l=e.debounceWaitMs||0,c=e.preventSubmit||!1,h=e.disableAutoSelect||!1,u=s?"input":"keyup",d=[],p="",f=2,m=e.showOnFocus,g=0;if(void 0!==e.minLength&&(f=e.minLength),!e.input)throw new Error("input undefined");var P=e.input;function G(){n&&window.clearTimeout(n)}function v(){return!!r.parentNode}function K(){var e;g++,d=[],p="",t=void 0,(e=r.parentNode)&&e.removeChild(r)}function x(){for(;r.firstChild;)r.removeChild(r.firstChild);var n=function(e,t){var n=i.createElement("div");return n.textContent=e.label||"",n};e.render&&(n=e.render);var o=function(e,t){var n=i.createElement("div");return n.textContent=e,n};e.renderGroup&&(o=e.renderGroup);var s=i.createDocumentFragment(),l="#9?$";if(d.forEach((function(i){if(i.group&&i.group!==l){l=i.group;var r=o(i.group,p);r&&(r.className+=" group",s.appendChild(r))}var a=n(i,p);a&&(a.addEventListener("click",(function(t){e.onSelect(i,P),K(),t.preventDefault(),t.stopPropagation()})),i===t&&(a.className+=" selected"),s.appendChild(a))})),r.appendChild(s),d.length<1){if(!e.emptyMsg)return void K();var c=i.createElement("div");c.className="empty",c.textContent=e.emptyMsg,r.appendChild(c)}r.parentNode||i.body.appendChild(r),function(){if(v()){a.height="auto",a.width=P.offsetWidth+"px";var t,n=0;o(),o(),e.customize&&t&&e.customize(P,t,r,n)}function o(){var e=i.documentElement,r=e.clientTop||i.body.clientTop||0,o=e.clientLeft||i.body.clientLeft||0,s=window.pageYOffset||e.scrollTop,l=window.pageXOffset||e.scrollLeft,c=(t=P.getBoundingClientRect()).top+P.offsetHeight+s-r,h=t.left+l-o;a.top=c+"px",a.left=h+"px",(n=window.innerHeight-(t.top+P.offsetHeight))<0&&(n=0),a.top=c+"px",a.bottom="",a.left=h+"px",a.maxHeight=n+"px"}}(),function(){var e=r.getElementsByClassName("selected");if(e.length>0){var t=e[0],n=t.previousElementSibling;if(n&&-1!==n.className.indexOf("group")&&!n.previousElementSibling&&(t=n),t.offsetTop<r.scrollTop)r.scrollTop=t.offsetTop;else{var i=t.offsetTop+t.offsetHeight,a=r.scrollTop+r.offsetHeight;i>a&&(r.scrollTop+=i-a)}}}()}function y(){v()&&x()}function _(){y()}function b(e){e.target!==r?y():e.preventDefault()}function w(e){for(var t=e.which||e.keyCode||0,n=0,i=[38,13,27,39,37,16,17,18,20,91,9];n<i.length;n++)if(t===i[n])return;t>=112&&t<=123||40===t&&v()||S(0)}function N(n){var i=n.which||n.keyCode||0;if(38===i||40===i||27===i){var r=v();if(27===i)K();else{if(!r||d.length<1)return;38===i?function(){if(d.length<1)t=void 0;else if(t===d[0])t=d[d.length-1];else for(var e=d.length-1;e>0;e--)if(t===d[e]||1===e){t=d[e-1];break}}():function(){if(d.length<1&&(t=void 0),t&&t!==d[d.length-1]){for(var e=0;e<d.length-1;e++)if(t===d[e]){t=d[e+1];break}}else t=d[0]}(),x()}return n.preventDefault(),void(r&&n.stopPropagation())}13===i&&(t&&(e.onSelect(t,P),K()),c&&n.preventDefault())}function M(){m&&S(1)}function S(i){var r=++g,a=P.value;a.length>=f||1===i?(G(),n=window.setTimeout((function(){e.fetch(a,(function(e){g===r&&e&&(p=a,t=(d=e).length<1||h?void 0:d[0],x())}),i)}),0===i?l:0)):K()}function T(){setTimeout((function(){i.activeElement!==P&&K()}),200)}return r.className="autocomplete "+(e.className||""),a.position="absolute",r.addEventListener("mousedown",(function(e){e.stopPropagation(),e.preventDefault()})),r.addEventListener("focus",(function(){return P.focus()})),P.addEventListener("keydown",N),P.addEventListener(u,w),P.addEventListener("blur",T),P.addEventListener("focus",M),window.addEventListener("resize",_),i.addEventListener("scroll",b,!0),{destroy:function(){P.removeEventListener("focus",M),P.removeEventListener("keydown",N),P.removeEventListener(u,w),P.removeEventListener("blur",T),window.removeEventListener("resize",_),i.removeEventListener("scroll",b,!0),G(),K()}}};
/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const n=0,i=1,r=2,a=0,o=1,s=2,l=3;class c{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,i=n.length;t<i;t++)n[t].call(this,e);e.target=null}}}const h=[];for(let e=0;e<256;e++)h[e]=(e<16?"0":"")+e.toString(16);const u=Math.PI/180,d=180/Math.PI;function p(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(h[255&e]+h[e>>8&255]+h[e>>16&255]+h[e>>24&255]+"-"+h[255&t]+h[t>>8&255]+"-"+h[t>>16&15|64]+h[t>>24&255]+"-"+h[63&n|128]+h[n>>8&255]+"-"+h[n>>16&255]+h[n>>24&255]+h[255&i]+h[i>>8&255]+h[i>>16&255]+h[i>>24&255]).toUpperCase()}function f(e,t,n){return Math.max(t,Math.min(n,e))}function m(e,t,n){return(1-n)*e+n*t}function g(e){return 0==(e&e-1)&&0!==e}function P(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}class G{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}G.prototype.isVector2=!0;class v{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,a,o,s,l){const c=this.elements;return c[0]=e,c[1]=i,c[2]=o,c[3]=t,c[4]=r,c[5]=s,c[6]=n,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[3],s=n[6],l=n[1],c=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],P=i[1],G=i[4],v=i[7],K=i[2],x=i[5],y=i[8];return r[0]=a*f+o*P+s*K,r[3]=a*m+o*G+s*x,r[6]=a*g+o*v+s*y,r[1]=l*f+c*P+h*K,r[4]=l*m+c*G+h*x,r[7]=l*g+c*v+h*y,r[2]=u*f+d*P+p*K,r[5]=u*m+d*G+p*x,r[8]=u*g+d*v+p*y,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8];return t*a*c-t*o*l-n*r*c+n*o*s+i*r*l-i*a*s}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8],h=c*a-o*l,u=o*s-c*r,d=l*r-a*s,p=t*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return e[0]=h*f,e[1]=(i*l-c*n)*f,e[2]=(o*n-i*a)*f,e[3]=u*f,e[4]=(c*t-i*s)*f,e[5]=(i*r-o*t)*f,e[6]=d*f,e[7]=(n*s-l*t)*f,e[8]=(a*t-n*r)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,o){const s=Math.cos(r),l=Math.sin(r);return this.set(n*s,n*l,-n*(s*a+l*o)+a+e,-i*l,i*s,-i*(-l*a+s*o)+o+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],a=i[3],o=i[6],s=i[1],l=i[4],c=i[7];return i[0]=t*r+n*s,i[3]=t*a+n*l,i[6]=t*o+n*c,i[1]=-n*r+t*s,i[4]=-n*a+t*l,i[7]=-n*o+t*c,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}let K;v.prototype.isMatrix3=!0;class x{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===K&&(K=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),K.width=e.width,K.height=e.height;const n=K.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=K}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let y=0;class _ extends c{constructor(e=_.DEFAULT_IMAGE,t=_.DEFAULT_MAPPING,n=1001,i=1001,r=1006,a=1008,o=1023,s=1009,l=1,c=3e3){super(),Object.defineProperty(this,"id",{value:y++}),this.uuid=p(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=s,this.offset=new G(0,0),this.repeat=new G(1,1),this.center=new G(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new v,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=p()),!t&&void 0===e.images[i.uuid]){let t;if(Array.isArray(i)){t=[];for(let e=0,n=i.length;e<n;e++)i[e].isDataTexture?t.push(b(i[e].image)):t.push(b(i[e]))}else t=b(i);e.images[i.uuid]={uuid:i.uuid,url:t}}n.image=i.uuid}return t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function b(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?x.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}_.DEFAULT_IMAGE=void 0,_.DEFAULT_MAPPING=300,_.prototype.isTexture=!0;class w{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const a=e.elements,o=a[0],s=a[4],l=a[8],c=a[1],h=a[5],u=a[9],d=a[2],p=a[6],f=a[10];if(Math.abs(s-c)<.01&&Math.abs(l-d)<.01&&Math.abs(u-p)<.01){if(Math.abs(s+c)<.1&&Math.abs(l+d)<.1&&Math.abs(u+p)<.1&&Math.abs(o+h+f-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const e=(o+1)/2,a=(h+1)/2,m=(f+1)/2,g=(s+c)/4,P=(l+d)/4,G=(u+p)/4;return e>a&&e>m?e<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(e),i=g/n,r=P/n):a>m?a<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(a),n=g/i,r=G/i):m<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(m),n=P/r,i=G/r),this.set(n,i,r,t),this}let m=Math.sqrt((p-u)*(p-u)+(l-d)*(l-d)+(c-s)*(c-s));return Math.abs(m)<.001&&(m=1),this.x=(p-u)/m,this.y=(l-d)/m,this.z=(c-s)/m,this.w=Math.acos((o+h+f-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}w.prototype.isVector4=!0;class N extends c{constructor(e,t,n){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new w(0,0,e,t),this.scissorTest=!1,this.viewport=new w(0,0,e,t),n=n||{},this.texture=new _(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:1006,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}N.prototype.isWebGLRenderTarget=!0;class M{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,r,a,o){let s=n[i+0],l=n[i+1],c=n[i+2],h=n[i+3];const u=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(0===o)return e[t+0]=s,e[t+1]=l,e[t+2]=c,void(e[t+3]=h);if(1===o)return e[t+0]=u,e[t+1]=d,e[t+2]=p,void(e[t+3]=f);if(h!==f||s!==u||l!==d||c!==p){let e=1-o;const t=s*u+l*d+c*p+h*f,n=t>=0?1:-1,i=1-t*t;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,t*n);e=Math.sin(e*a)/r,o=Math.sin(o*a)/r}const r=o*n;if(s=s*e+u*r,l=l*e+d*r,c=c*e+p*r,h=h*e+f*r,e===1-o){const e=1/Math.sqrt(s*s+l*l+c*c+h*h);s*=e,l*=e,c*=e,h*=e}}e[t]=s,e[t+1]=l,e[t+2]=c,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,r,a){const o=n[i],s=n[i+1],l=n[i+2],c=n[i+3],h=r[a],u=r[a+1],d=r[a+2],p=r[a+3];return e[t]=o*p+c*h+s*d-l*u,e[t+1]=s*p+c*u+l*h-o*d,e[t+2]=l*p+c*d+o*u-s*h,e[t+3]=c*p-o*h-s*u-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,r=e._z,a=e._order,o=Math.cos,s=Math.sin,l=o(n/2),c=o(i/2),h=o(r/2),u=s(n/2),d=s(i/2),p=s(r/2);switch(a){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],o=t[5],s=t[9],l=t[2],c=t[6],h=t[10],u=n+o+h;if(u>0){const e=.5/Math.sqrt(u+1);this._w=.25/e,this._x=(c-s)*e,this._y=(r-l)*e,this._z=(a-i)*e}else if(n>o&&n>h){const e=2*Math.sqrt(1+n-o-h);this._w=(c-s)/e,this._x=.25*e,this._y=(i+a)/e,this._z=(r+l)/e}else if(o>h){const e=2*Math.sqrt(1+o-n-h);this._w=(r-l)/e,this._x=(i+a)/e,this._y=.25*e,this._z=(s+c)/e}else{const e=2*Math.sqrt(1+h-n-o);this._w=(a-i)/e,this._x=(r+l)/e,this._y=(s+c)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(f(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,s=t._y,l=t._z,c=t._w;return this._x=n*c+a*o+i*l-r*s,this._y=i*c+a*s+r*o-n*l,this._z=r*c+a*l+n*s-i*o,this._w=a*c-n*o-i*s-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const s=1-o*o;if(s<=Number.EPSILON){const e=1-t;return this._w=e*a+t*this._w,this._x=e*n+t*this._x,this._y=e*i+t*this._y,this._z=e*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(s),c=Math.atan2(l,o),h=Math.sin((1-t)*c)/l,u=Math.sin(t*c)/l;return this._w=a*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}M.prototype.isQuaternion=!0;class S{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(E.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(E.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,o=e.z,s=e.w,l=s*t+a*i-o*n,c=s*n+o*t-r*i,h=s*i+r*n-a*t,u=-r*t-a*n-o*i;return this.x=l*s+u*-r+c*-o-h*-a,this.y=c*s+u*-a+h*-r-l*-o,this.z=h*s+u*-o+l*-a-c*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,s=t.z;return this.x=i*s-r*o,this.y=r*a-n*s,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return T.copy(this).projectOnVector(e),this.sub(T)}reflect(e){return this.sub(T.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(f(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}S.prototype.isVector3=!0;const T=new S,E=new M;class J{constructor(e=new S(1/0,1/0,1/0),t=new S(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0;for(let s=0,l=e.length;s<l;s+=3){const l=e[s],c=e[s+1],h=e[s+2];l<t&&(t=l),c<n&&(n=c),h<i&&(i=h),l>r&&(r=l),c>a&&(a=c),h>o&&(o=h)}return this.min.set(t,n,i),this.max.set(r,a,o),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0;for(let s=0,l=e.count;s<l;s++){const l=e.getX(s),c=e.getY(s),h=e.getZ(s);l<t&&(t=l),c<n&&(n=c),h<i&&(i=h),l>r&&(r=l),c>a&&(a=c),h>o&&(o=h)}return this.min.set(t,n,i),this.max.set(r,a,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=R.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new S),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new S),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),A.copy(t.boundingBox),A.applyMatrix4(e.matrixWorld),this.union(A));const n=e.children;for(let e=0,t=n.length;e<t;e++)this.expandByObject(n[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new S),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,R),R.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(O),H.subVectors(this.max,O),C.subVectors(e.a,O),D.subVectors(e.b,O),z.subVectors(e.c,O),k.subVectors(D,C),F.subVectors(z,D),I.subVectors(C,z);let t=[0,-k.z,k.y,0,-F.z,F.y,0,-I.z,I.y,k.z,0,-k.x,F.z,0,-F.x,I.z,0,-I.x,-k.y,k.x,0,-F.y,F.x,0,-I.y,I.x,0];return!!W(t,C,D,z,H)&&(t=[1,0,0,0,1,0,0,0,1],!!W(t,C,D,z,H)&&(U.crossVectors(k,F),t=[U.x,U.y,U.z],W(t,C,D,z,H)))}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new S),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return R.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(R).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(L[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),L[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),L[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),L[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),L[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),L[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),L[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),L[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(L)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}J.prototype.isBox3=!0;const L=[new S,new S,new S,new S,new S,new S,new S,new S],R=new S,A=new J,C=new S,D=new S,z=new S,k=new S,F=new S,I=new S,O=new S,H=new S,U=new S,B=new S;function W(e,t,n,i,r){for(let a=0,o=e.length-3;a<=o;a+=3){B.fromArray(e,a);const o=r.x*Math.abs(B.x)+r.y*Math.abs(B.y)+r.z*Math.abs(B.z),s=t.dot(B),l=n.dot(B),c=i.dot(B);if(Math.max(-Math.max(s,l,c),Math.min(s,l,c))>o)return!1}return!0}const V=new J,j=new S,q=new S,X=new S;class Y{constructor(e=new S,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):V.setFromPoints(e).getCenter(n);let i=0;for(let t=0,r=e.length;t<r;t++)i=Math.max(i,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new S),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new J),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){X.subVectors(e,this.center);const t=X.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.add(X.multiplyScalar(n/e)),this.radius+=n}return this}union(e){return q.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(j.copy(e.center).add(q)),this.expandByPoint(j.copy(e.center).sub(q)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Z=new S,Q=new S,$=new S,ee=new S,te=new S,ne=new S,ie=new S;class re{constructor(e=new S,t=new S(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new S),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Z)),this}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new S),t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Z.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Z.copy(this.direction).multiplyScalar(t).add(this.origin),Z.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Q.copy(e).add(t).multiplyScalar(.5),$.copy(t).sub(e).normalize(),ee.copy(this.origin).sub(Q);const r=.5*e.distanceTo(t),a=-this.direction.dot($),o=ee.dot(this.direction),s=-ee.dot($),l=ee.lengthSq(),c=Math.abs(1-a*a);let h,u,d,p;if(c>0)if(h=a*s-o,u=a*o-s,p=r*c,h>=0)if(u>=-p)if(u<=p){const e=1/c;h*=e,u*=e,d=h*(h+a*u+2*o)+u*(a*h+u+2*s)+l}else u=r,h=Math.max(0,-(a*u+o)),d=-h*h+u*(u+2*s)+l;else u=-r,h=Math.max(0,-(a*u+o)),d=-h*h+u*(u+2*s)+l;else u<=-p?(h=Math.max(0,-(-a*r+o)),u=h>0?-r:Math.min(Math.max(-r,-s),r),d=-h*h+u*(u+2*s)+l):u<=p?(h=0,u=Math.min(Math.max(-r,-s),r),d=u*(u+2*s)+l):(h=Math.max(0,-(a*r+o)),u=h>0?r:Math.min(Math.max(-r,-s),r),d=-h*h+u*(u+2*s)+l);else u=a>0?-r:r,h=Math.max(0,-(a*u+o)),d=-h*h+u*(u+2*s)+l;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy($).multiplyScalar(u).add(Q),d}intersectSphere(e,t){Z.subVectors(e.center,this.origin);const n=Z.dot(this.direction),i=Z.dot(Z)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),o=n-a,s=n+a;return o<0&&s<0?null:o<0?this.at(s,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;return e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,o,s;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(n=(e.min.x-u.x)*l,i=(e.max.x-u.x)*l):(n=(e.max.x-u.x)*l,i=(e.min.x-u.x)*l),c>=0?(r=(e.min.y-u.y)*c,a=(e.max.y-u.y)*c):(r=(e.max.y-u.y)*c,a=(e.min.y-u.y)*c),n>a||r>i?null:((r>n||n!=n)&&(n=r),(a<i||i!=i)&&(i=a),h>=0?(o=(e.min.z-u.z)*h,s=(e.max.z-u.z)*h):(o=(e.max.z-u.z)*h,s=(e.min.z-u.z)*h),n>s||o>i?null:((o>n||n!=n)&&(n=o),(s<i||i!=i)&&(i=s),i<0?null:this.at(n>=0?n:i,t)))}intersectsBox(e){return null!==this.intersectBox(e,Z)}intersectTriangle(e,t,n,i,r){te.subVectors(t,e),ne.subVectors(n,e),ie.crossVectors(te,ne);let a,o=this.direction.dot(ie);if(o>0){if(i)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}ee.subVectors(this.origin,e);const s=a*this.direction.dot(ne.crossVectors(ee,ne));if(s<0)return null;const l=a*this.direction.dot(te.cross(ee));if(l<0)return null;if(s+l>o)return null;const c=-a*ee.dot(ie);return c<0?null:this.at(c/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class ae{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,a,o,s,l,c,h,u,d,p,f,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=o,g[13]=s,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new ae).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/oe.setFromMatrixColumn(e,0).length(),r=1/oe.setFromMatrixColumn(e,1).length(),a=1/oe.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(i),l=Math.sin(i),c=Math.cos(r),h=Math.sin(r);if("XYZ"===e.order){const e=a*c,n=a*h,i=o*c,r=o*h;t[0]=s*c,t[4]=-s*h,t[8]=l,t[1]=n+i*l,t[5]=e-r*l,t[9]=-o*s,t[2]=r-e*l,t[6]=i+n*l,t[10]=a*s}else if("YXZ"===e.order){const e=s*c,n=s*h,i=l*c,r=l*h;t[0]=e+r*o,t[4]=i*o-n,t[8]=a*l,t[1]=a*h,t[5]=a*c,t[9]=-o,t[2]=n*o-i,t[6]=r+e*o,t[10]=a*s}else if("ZXY"===e.order){const e=s*c,n=s*h,i=l*c,r=l*h;t[0]=e-r*o,t[4]=-a*h,t[8]=i+n*o,t[1]=n+i*o,t[5]=a*c,t[9]=r-e*o,t[2]=-a*l,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){const e=a*c,n=a*h,i=o*c,r=o*h;t[0]=s*c,t[4]=i*l-n,t[8]=e*l+r,t[1]=s*h,t[5]=r*l+e,t[9]=n*l-i,t[2]=-l,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){const e=a*s,n=a*l,i=o*s,r=o*l;t[0]=s*c,t[4]=r-e*h,t[8]=i*h+n,t[1]=h,t[5]=a*c,t[9]=-o*c,t[2]=-l*c,t[6]=n*h+i,t[10]=e-r*h}else if("XZY"===e.order){const e=a*s,n=a*l,i=o*s,r=o*l;t[0]=s*c,t[4]=-h,t[8]=l*c,t[1]=e*h+r,t[5]=a*c,t[9]=n*h-i,t[2]=i*h-n,t[6]=o*c,t[10]=r*h+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(le,e,ce)}lookAt(e,t,n){const i=this.elements;return de.subVectors(e,t),0===de.lengthSq()&&(de.z=1),de.normalize(),he.crossVectors(n,de),0===he.lengthSq()&&(1===Math.abs(n.z)?de.x+=1e-4:de.z+=1e-4,de.normalize(),he.crossVectors(n,de)),he.normalize(),ue.crossVectors(de,he),i[0]=he.x,i[4]=ue.x,i[8]=de.x,i[1]=he.y,i[5]=ue.y,i[9]=de.y,i[2]=he.z,i[6]=ue.z,i[10]=de.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],s=n[8],l=n[12],c=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],P=n[3],G=n[7],v=n[11],K=n[15],x=i[0],y=i[4],_=i[8],b=i[12],w=i[1],N=i[5],M=i[9],S=i[13],T=i[2],E=i[6],J=i[10],L=i[14],R=i[3],A=i[7],C=i[11],D=i[15];return r[0]=a*x+o*w+s*T+l*R,r[4]=a*y+o*N+s*E+l*A,r[8]=a*_+o*M+s*J+l*C,r[12]=a*b+o*S+s*L+l*D,r[1]=c*x+h*w+u*T+d*R,r[5]=c*y+h*N+u*E+d*A,r[9]=c*_+h*M+u*J+d*C,r[13]=c*b+h*S+u*L+d*D,r[2]=p*x+f*w+m*T+g*R,r[6]=p*y+f*N+m*E+g*A,r[10]=p*_+f*M+m*J+g*C,r[14]=p*b+f*S+m*L+g*D,r[3]=P*x+G*w+v*T+K*R,r[7]=P*y+G*N+v*E+K*A,r[11]=P*_+G*M+v*J+K*C,r[15]=P*b+G*S+v*L+K*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],s=e[9],l=e[13],c=e[2],h=e[6],u=e[10],d=e[14];return e[3]*(+r*s*h-i*l*h-r*o*u+n*l*u+i*o*d-n*s*d)+e[7]*(+t*s*d-t*l*u+r*a*u-i*a*d+i*l*c-r*s*c)+e[11]*(+t*l*h-t*o*d-r*a*h+n*a*d+r*o*c-n*l*c)+e[15]*(-i*o*c-t*s*h+t*o*u+i*a*h-n*a*u+n*s*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8],h=e[9],u=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],P=h*m*l-f*u*l+f*s*d-o*m*d-h*s*g+o*u*g,G=p*u*l-c*m*l-p*s*d+a*m*d+c*s*g-a*u*g,v=c*f*l-p*h*l+p*o*d-a*f*d-c*o*g+a*h*g,K=p*h*s-c*f*s-p*o*u+a*f*u+c*o*m-a*h*m,x=t*P+n*G+i*v+r*K;if(0===x)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const y=1/x;return e[0]=P*y,e[1]=(f*u*r-h*m*r-f*i*d+n*m*d+h*i*g-n*u*g)*y,e[2]=(o*m*r-f*s*r+f*i*l-n*m*l-o*i*g+n*s*g)*y,e[3]=(h*s*r-o*u*r-h*i*l+n*u*l+o*i*d-n*s*d)*y,e[4]=G*y,e[5]=(c*m*r-p*u*r+p*i*d-t*m*d-c*i*g+t*u*g)*y,e[6]=(p*s*r-a*m*r-p*i*l+t*m*l+a*i*g-t*s*g)*y,e[7]=(a*u*r-c*s*r+c*i*l-t*u*l-a*i*d+t*s*d)*y,e[8]=v*y,e[9]=(p*h*r-c*f*r-p*n*d+t*f*d+c*n*g-t*h*g)*y,e[10]=(a*f*r-p*o*r+p*n*l-t*f*l-a*n*g+t*o*g)*y,e[11]=(c*o*r-a*h*r-c*n*l+t*h*l+a*n*d-t*o*d)*y,e[12]=K*y,e[13]=(c*f*i-p*h*i+p*n*u-t*f*u-c*n*m+t*h*m)*y,e[14]=(p*o*i-a*f*i-p*n*s+t*f*s+a*n*m-t*o*m)*y,e[15]=(a*h*i-c*o*i+c*n*s-t*h*s-a*n*u+t*o*u)*y,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,o=e.y,s=e.z,l=r*a,c=r*o;return this.set(l*a+n,l*o-i*s,l*s+i*o,0,l*o+i*s,c*o+n,c*s-i*a,0,l*s-i*o,c*s+i*a,r*s*s+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,o=t._z,s=t._w,l=r+r,c=a+a,h=o+o,u=r*l,d=r*c,p=r*h,f=a*c,m=a*h,g=o*h,P=s*l,G=s*c,v=s*h,K=n.x,x=n.y,y=n.z;return i[0]=(1-(f+g))*K,i[1]=(d+v)*K,i[2]=(p-G)*K,i[3]=0,i[4]=(d-v)*x,i[5]=(1-(u+g))*x,i[6]=(m+P)*x,i[7]=0,i[8]=(p+G)*y,i[9]=(m-P)*y,i[10]=(1-(u+f))*y,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=oe.set(i[0],i[1],i[2]).length();const a=oe.set(i[4],i[5],i[6]).length(),o=oe.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],se.copy(this);const s=1/r,l=1/a,c=1/o;return se.elements[0]*=s,se.elements[1]*=s,se.elements[2]*=s,se.elements[4]*=l,se.elements[5]*=l,se.elements[6]*=l,se.elements[8]*=c,se.elements[9]*=c,se.elements[10]*=c,t.setFromRotationMatrix(se),n.x=r,n.y=a,n.z=o,this}makePerspective(e,t,n,i,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,s=2*r/(t-e),l=2*r/(n-i),c=(t+e)/(t-e),h=(n+i)/(n-i),u=-(a+r)/(a-r),d=-2*a*r/(a-r);return o[0]=s,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=l,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,n,i,r,a){const o=this.elements,s=1/(t-e),l=1/(n-i),c=1/(a-r),h=(t+e)*s,u=(n+i)*l,d=(a+r)*c;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}ae.prototype.isMatrix4=!0;const oe=new S,se=new ae,le=new S(0,0,0),ce=new S(1,1,1),he=new S,ue=new S,de=new S,pe=new ae,fe=new M;class me{constructor(e=0,t=0,n=0,i=me.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,n){const i=e.elements,r=i[0],a=i[4],o=i[8],s=i[1],l=i[5],c=i[9],h=i[2],u=i[6],d=i[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(f(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-f(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(s,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(f(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(s,r));break;case"ZYX":this._y=Math.asin(-f(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(s,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(f(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-f(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return pe.makeRotationFromQuaternion(e),this.setFromRotationMatrix(pe,t,n)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return fe.setFromEuler(this),this.setFromQuaternion(fe,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new S(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}me.prototype.isEuler=!0,me.DefaultOrder="XYZ",me.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ge{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let Pe=0;const Ge=new S,ve=new M,Ke=new ae,xe=new S,ye=new S,_e=new S,be=new M,we=new S(1,0,0),Ne=new S(0,1,0),Me=new S(0,0,1),Se={type:"added"},Te={type:"removed"};class Ee extends c{constructor(){super(),Object.defineProperty(this,"id",{value:Pe++}),this.uuid=p(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ee.DefaultUp.clone();const e=new S,t=new me,n=new M,i=new S(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ae},normalMatrix:{value:new v}}),this.matrix=new ae,this.matrixWorld=new ae,this.matrixAutoUpdate=Ee.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ge,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ve.setFromAxisAngle(e,t),this.quaternion.multiply(ve),this}rotateOnWorldAxis(e,t){return ve.setFromAxisAngle(e,t),this.quaternion.premultiply(ve),this}rotateX(e){return this.rotateOnAxis(we,e)}rotateY(e){return this.rotateOnAxis(Ne,e)}rotateZ(e){return this.rotateOnAxis(Me,e)}translateOnAxis(e,t){return Ge.copy(e).applyQuaternion(this.quaternion),this.position.add(Ge.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(we,e)}translateY(e){return this.translateOnAxis(Ne,e)}translateZ(e){return this.translateOnAxis(Me,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Ke.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?xe.copy(e):xe.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ye.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ke.lookAt(ye,xe,this.up):Ke.lookAt(xe,ye,this.up),this.quaternion.setFromRotationMatrix(Ke),i&&(Ke.extractRotation(i.matrixWorld),ve.setFromRotationMatrix(Ke),this.quaternion.premultiply(ve.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Se)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Te)),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Te)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Ke.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Ke.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ke),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(e,t);if(void 0!==i)return i}}getWorldPosition(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new S),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new M),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ye,e,_e),e}getWorldScale(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new S),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ye,be,e),e}getWorldDirection(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new S),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++)e[t].updateWorldMatrix(!1,!0)}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const i=n[t];r(e.shapes,i)}else r(e.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,i=this.material.length;n<i;n++)t.push(r(e.materials,this.material[n]));i.material=t}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let t=0;t<this.children.length;t++)i.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];i.animations.push(r(e.animations,n))}}if(t){const t=a(e.geometries),i=a(e.materials),r=a(e.textures),o=a(e.images),s=a(e.shapes),l=a(e.skeletons),c=a(e.animations);t.length>0&&(n.geometries=t),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),o.length>0&&(n.images=o),s.length>0&&(n.shapes=s),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c)}return n.object=i,n;function a(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}}Ee.DefaultUp=new S(0,1,0),Ee.DefaultMatrixAutoUpdate=!0,Ee.prototype.isObject3D=!0;const Je=new S,Le=new S,Re=new v;class Ae{constructor(e=new S(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Je.subVectors(n,t).cross(Le.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new S),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new S);const n=e.delta(Je),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new S),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Re.getNormalMatrix(e),i=this.coplanarPoint(Je).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Ae.prototype.isPlane=!0;const Ce=new S,De=new S,ze=new S,ke=new S,Fe=new S,Ie=new S,Oe=new S,He=new S,Ue=new S,Be=new S;class We{constructor(e=new S,t=new S,n=new S){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new S),i.subVectors(n,t),Ce.subVectors(e,t),i.cross(Ce);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Ce.subVectors(i,t),De.subVectors(n,t),ze.subVectors(e,t);const a=Ce.dot(Ce),o=Ce.dot(De),s=Ce.dot(ze),l=De.dot(De),c=De.dot(ze),h=a*l-o*o;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new S),0===h)return r.set(-2,-1,-1);const u=1/h,d=(l*s-o*c)*u,p=(a*c-o*s)*u;return r.set(1-d-p,p,d)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,ke),ke.x>=0&&ke.y>=0&&ke.x+ke.y<=1}static getUV(e,t,n,i,r,a,o,s){return this.getBarycoord(e,t,n,i,ke),s.set(0,0),s.addScaledVector(r,ke.x),s.addScaledVector(a,ke.y),s.addScaledVector(o,ke.z),s}static isFrontFacing(e,t,n,i){return Ce.subVectors(n,t),De.subVectors(e,t),Ce.cross(De).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ce.subVectors(this.c,this.b),De.subVectors(this.a,this.b),.5*Ce.cross(De).length()}getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new S),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return We.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new Ae),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return We.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return We.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return We.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return We.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new S);const n=this.a,i=this.b,r=this.c;let a,o;Fe.subVectors(i,n),Ie.subVectors(r,n),He.subVectors(e,n);const s=Fe.dot(He),l=Ie.dot(He);if(s<=0&&l<=0)return t.copy(n);Ue.subVectors(e,i);const c=Fe.dot(Ue),h=Ie.dot(Ue);if(c>=0&&h<=c)return t.copy(i);const u=s*h-c*l;if(u<=0&&s>=0&&c<=0)return a=s/(s-c),t.copy(n).addScaledVector(Fe,a);Be.subVectors(e,r);const d=Fe.dot(Be),p=Ie.dot(Be);if(p>=0&&d<=p)return t.copy(r);const f=d*l-s*p;if(f<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(n).addScaledVector(Ie,o);const m=c*p-d*h;if(m<=0&&h-c>=0&&d-p>=0)return Oe.subVectors(r,i),o=(h-c)/(h-c+(d-p)),t.copy(i).addScaledVector(Oe,o);const g=1/(m+f+u);return a=f*g,o=u*g,t.copy(n).addScaledVector(Fe,a).addScaledVector(Ie,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Ve=0;function je(){Object.defineProperty(this,"id",{value:Ve++}),this.uuid=p(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}je.prototype=Object.assign(Object.create(c.prototype),{constructor:je,isMaterial:!0,onBuild:function(){},onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}},toJSON:function(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){const t=i(e.textures),r=i(e.images);t.length>0&&(n.textures=t),r.length>0&&(n.images=r)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let i=0;i!==e;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(je.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}});const qe={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Xe={h:0,s:0,l:0},Ye={h:0,s:0,l:0};function Ze(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function Qe(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function $e(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class et{constructor(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){var i;if(e=(e%(i=1)+i)%i,t=f(t,0,1),n=f(n,0,1),0===t)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=Ze(r,i,e+1/3),this.g=Ze(r,i,e),this.b=Ze(r,i,e-1/3)}return this}setStyle(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let e;const i=n[1],r=n[2];switch(i){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,t(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,t(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const n=parseFloat(e[1])/360,i=parseInt(e[2],10)/100,r=parseInt(e[3],10)/100;return t(e[4]),this.setHSL(n,i,r)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=n[1],t=e.length;if(3===t)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===t)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=qe[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){const n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=Qe(e.r),this.g=Qe(e.g),this.b=Qe(e.b),this}copyLinearToSRGB(e){return this.r=$e(e.r),this.g=$e(e.g),this.b=$e(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,n=this.g,i=this.b,r=Math.max(t,n,i),a=Math.min(t,n,i);let o,s;const l=(a+r)/2;if(a===r)o=0,s=0;else{const e=r-a;switch(s=l<=.5?e/(r+a):e/(2-r-a),r){case t:o=(n-i)/e+(n<i?6:0);break;case n:o=(i-t)/e+2;break;case i:o=(t-n)/e+4}o/=6}return e.h=o,e.s=s,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(Xe),Xe.h+=e,Xe.s+=t,Xe.l+=n,this.setHSL(Xe.h,Xe.s,Xe.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Xe),e.getHSL(Ye);const n=m(Xe.h,Ye.h,t),i=m(Xe.s,Ye.s,t),r=m(Xe.l,Ye.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}et.NAMES=qe,et.prototype.isColor=!0,et.prototype.r=1,et.prototype.g=1,et.prototype.b=1;class tt extends je{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new et(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this}}tt.prototype.isMeshBasicMaterial=!0;const nt=new S,it=new G;class rt{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.onUploadCallback=function(){}}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new et),t[n++]=r.r,t[n++]=r.g,t[n++]=r.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new G),t[n++]=r.x,t[n++]=r.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new S),t[n++]=r.x,t[n++]=r.y,t[n++]=r.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new w),t[n++]=r.x,t[n++]=r.y,t[n++]=r.z,t[n++]=r.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)it.fromBufferAttribute(this,t),it.applyMatrix3(e),this.setXY(t,it.x,it.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)nt.fromBufferAttribute(this,t),nt.applyMatrix3(e),this.setXYZ(t,nt.x,nt.y,nt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)nt.x=this.getX(t),nt.y=this.getY(t),nt.z=this.getZ(t),nt.applyMatrix4(e),this.setXYZ(t,nt.x,nt.y,nt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)nt.x=this.getX(t),nt.y=this.getY(t),nt.z=this.getZ(t),nt.applyNormalMatrix(e),this.setXYZ(t,nt.x,nt.y,nt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)nt.x=this.getX(t),nt.y=this.getY(t),nt.z=this.getZ(t),nt.transformDirection(e),this.setXYZ(t,nt.x,nt.y,nt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}rt.prototype.isBufferAttribute=!0;class at extends rt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class ot extends rt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class st extends rt{constructor(e,t,n){super(new Float32Array(e),t,n)}}function lt(e){if(0===e.length)return-1/0;let t=e[0];for(let n=1,i=e.length;n<i;++n)e[n]>t&&(t=e[n]);return t}let ct=0;const ht=new ae,ut=new Ee,dt=new S,pt=new J,ft=new J,mt=new S;class gt extends c{constructor(){super(),Object.defineProperty(this,"id",{value:ct++}),this.uuid=p(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(lt(e)>65535?ot:at)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new v).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}rotateX(e){return ht.makeRotationX(e),this.applyMatrix4(ht),this}rotateY(e){return ht.makeRotationY(e),this.applyMatrix4(ht),this}rotateZ(e){return ht.makeRotationZ(e),this.applyMatrix4(ht),this}translate(e,t,n){return ht.makeTranslation(e,t,n),this.applyMatrix4(ht),this}scale(e,t,n){return ht.makeScale(e,t,n),this.applyMatrix4(ht),this}lookAt(e){return ut.lookAt(e),ut.updateMatrix(),this.applyMatrix4(ut.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(dt).negate(),this.translate(dt.x,dt.y,dt.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new st(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new J);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new S(-1/0,-1/0,-1/0),new S(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];pt.setFromBufferAttribute(n),this.morphTargetsRelative?(mt.addVectors(this.boundingBox.min,pt.min),this.boundingBox.expandByPoint(mt),mt.addVectors(this.boundingBox.max,pt.max),this.boundingBox.expandByPoint(mt)):(this.boundingBox.expandByPoint(pt.min),this.boundingBox.expandByPoint(pt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Y);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new S,1/0);if(e){const n=this.boundingSphere.center;if(pt.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];ft.setFromBufferAttribute(n),this.morphTargetsRelative?(mt.addVectors(pt.min,ft.min),pt.expandByPoint(mt),mt.addVectors(pt.max,ft.max),pt.expandByPoint(mt)):(pt.expandByPoint(ft.min),pt.expandByPoint(ft.max))}pt.getCenter(n);let i=0;for(let t=0,r=e.count;t<r;t++)mt.fromBufferAttribute(e,t),i=Math.max(i,n.distanceToSquared(mt));if(t)for(let r=0,a=t.length;r<a;r++){const a=t[r],o=this.morphTargetsRelative;for(let t=0,r=a.count;t<r;t++)mt.fromBufferAttribute(a,t),o&&(dt.fromBufferAttribute(e,t),mt.add(dt)),i=Math.max(i,n.distanceToSquared(mt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeFaceNormals(){}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,o=i.length/3;void 0===t.tangent&&this.setAttribute("tangent",new rt(new Float32Array(4*o),4));const s=t.tangent.array,l=[],c=[];for(let e=0;e<o;e++)l[e]=new S,c[e]=new S;const h=new S,u=new S,d=new S,p=new G,f=new G,m=new G,g=new S,P=new S;function v(e,t,n){h.fromArray(i,3*e),u.fromArray(i,3*t),d.fromArray(i,3*n),p.fromArray(a,2*e),f.fromArray(a,2*t),m.fromArray(a,2*n),u.sub(h),d.sub(h),f.sub(p),m.sub(p);const r=1/(f.x*m.y-m.x*f.y);isFinite(r)&&(g.copy(u).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(r),P.copy(d).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(r),l[e].add(g),l[t].add(g),l[n].add(g),c[e].add(P),c[t].add(P),c[n].add(P))}let K=this.groups;0===K.length&&(K=[{start:0,count:n.length}]);for(let e=0,t=K.length;e<t;++e){const t=K[e],i=t.start;for(let e=i,r=i+t.count;e<r;e+=3)v(n[e+0],n[e+1],n[e+2])}const x=new S,y=new S,_=new S,b=new S;function w(e){_.fromArray(r,3*e),b.copy(_);const t=l[e];x.copy(t),x.sub(_.multiplyScalar(_.dot(t))).normalize(),y.crossVectors(b,t);const n=y.dot(c[e])<0?-1:1;s[4*e]=x.x,s[4*e+1]=x.y,s[4*e+2]=x.z,s[4*e+3]=n}for(let e=0,t=K.length;e<t;++e){const t=K[e],i=t.start;for(let e=i,r=i+t.count;e<r;e+=3)w(n[e+0]),w(n[e+1]),w(n[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new rt(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const i=new S,r=new S,a=new S,o=new S,s=new S,l=new S,c=new S,h=new S;if(e)for(let u=0,d=e.count;u<d;u+=3){const d=e.getX(u+0),p=e.getX(u+1),f=e.getX(u+2);i.fromBufferAttribute(t,d),r.fromBufferAttribute(t,p),a.fromBufferAttribute(t,f),c.subVectors(a,r),h.subVectors(i,r),c.cross(h),o.fromBufferAttribute(n,d),s.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),o.add(c),s.add(c),l.add(c),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(p,s.x,s.y,s.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,o=t.count;e<o;e+=3)i.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),c.subVectors(a,r),h.subVectors(i,r),c.cross(h),n.setXYZ(e+0,c.x,c.y,c.z),n.setXYZ(e+1,c.x,c.y,c.z),n.setXYZ(e+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===e.attributes[i])continue;const r=n[i].array,a=e.attributes[i],o=a.array,s=a.itemSize*t,l=Math.min(o.length,r.length-s);for(let e=0,t=s;e<l;e++,t++)r[t]=o[e]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)mt.fromBufferAttribute(e,t),mt.normalize(),e.setXYZ(t,mt.x,mt.y,mt.z)}toNonIndexed(){function e(e,t){const n=e.array,i=e.itemSize,r=e.normalized,a=new n.constructor(t.length*i);let o=0,s=0;for(let e=0,r=t.length;e<r;e++){o=t[e]*i;for(let e=0;e<i;e++)a[s++]=n[o++]}return new rt(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new gt,n=this.index.array,i=this.attributes;for(const r in i){const a=e(i[r],n);t.setAttribute(r,a)}const r=this.morphAttributes;for(const i in r){const a=[],o=r[i];for(let t=0,i=o.length;t<i;t++){const i=e(o[t],n);a.push(i)}t.morphAttributes[i]=a}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let e=0,n=a.length;e<n;e++){const n=a[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const i=n[t];e.data.attributes[t]=i.toJSON(e.data)}const i={};let r=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],a=[];for(let t=0,i=n.length;t<i;t++){const i=n[t];a.push(i.toJSON(e.data))}a.length>0&&(i[t]=a,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return(new gt).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const i=e.attributes;for(const e in i){const n=i[e];this.setAttribute(e,n.clone(t))}const r=e.morphAttributes;for(const e in r){const n=[],i=r[e];for(let e=0,r=i.length;e<r;e++)n.push(i[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let e=0,t=a.length;e<t;e++){const t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}gt.prototype.isBufferGeometry=!0;const Pt=new ae,Gt=new re,vt=new Y,Kt=new S,xt=new S,yt=new S,_t=new S,bt=new S,wt=new S,Nt=new S,Mt=new S,St=new S,Tt=new G,Et=new G,Jt=new G,Lt=new S,Rt=new S;class At extends Ee{constructor(e=new gt,t=new tt){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),vt.copy(n.boundingSphere),vt.applyMatrix4(r),!1===e.ray.intersectsSphere(vt))return;if(Pt.copy(r).invert(),Gt.copy(e.ray).applyMatrix4(Pt),null!==n.boundingBox&&!1===Gt.intersectsBox(n.boundingBox))return;let a;if(n.isBufferGeometry){const r=n.index,o=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative,c=n.attributes.uv,h=n.attributes.uv2,u=n.groups,d=n.drawRange;if(null!==r)if(Array.isArray(i))for(let n=0,p=u.length;n<p;n++){const p=u[n],f=i[p.materialIndex];for(let n=Math.max(p.start,d.start),i=Math.min(p.start+p.count,d.start+d.count);n<i;n+=3){const i=r.getX(n),u=r.getX(n+1),d=r.getX(n+2);a=Ct(this,f,e,Gt,o,s,l,c,h,i,u,d),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=p.materialIndex,t.push(a))}}else{for(let n=Math.max(0,d.start),u=Math.min(r.count,d.start+d.count);n<u;n+=3){const u=r.getX(n),d=r.getX(n+1),p=r.getX(n+2);a=Ct(this,i,e,Gt,o,s,l,c,h,u,d,p),a&&(a.faceIndex=Math.floor(n/3),t.push(a))}}else if(void 0!==o)if(Array.isArray(i))for(let n=0,r=u.length;n<r;n++){const r=u[n],p=i[r.materialIndex];for(let n=Math.max(r.start,d.start),i=Math.min(r.start+r.count,d.start+d.count);n<i;n+=3){a=Ct(this,p,e,Gt,o,s,l,c,h,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=r.materialIndex,t.push(a))}}else{for(let n=Math.max(0,d.start),r=Math.min(o.count,d.start+d.count);n<r;n+=3){a=Ct(this,i,e,Gt,o,s,l,c,h,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),t.push(a))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function Ct(e,t,n,i,r,a,o,s,l,c,h,u){Kt.fromBufferAttribute(r,c),xt.fromBufferAttribute(r,h),yt.fromBufferAttribute(r,u);const d=e.morphTargetInfluences;if(t.morphTargets&&a&&d){Nt.set(0,0,0),Mt.set(0,0,0),St.set(0,0,0);for(let e=0,t=a.length;e<t;e++){const t=d[e],n=a[e];0!==t&&(_t.fromBufferAttribute(n,c),bt.fromBufferAttribute(n,h),wt.fromBufferAttribute(n,u),o?(Nt.addScaledVector(_t,t),Mt.addScaledVector(bt,t),St.addScaledVector(wt,t)):(Nt.addScaledVector(_t.sub(Kt),t),Mt.addScaledVector(bt.sub(xt),t),St.addScaledVector(wt.sub(yt),t)))}Kt.add(Nt),xt.add(Mt),yt.add(St)}e.isSkinnedMesh&&t.skinning&&(e.boneTransform(c,Kt),e.boneTransform(h,xt),e.boneTransform(u,yt));const p=function(e,t,n,i,r,a,o,s){let l;if(l=1===t.side?i.intersectTriangle(o,a,r,!0,s):i.intersectTriangle(r,a,o,2!==t.side,s),null===l)return null;Rt.copy(s),Rt.applyMatrix4(e.matrixWorld);const c=n.ray.origin.distanceTo(Rt);return c<n.near||c>n.far?null:{distance:c,point:Rt.clone(),object:e}}(e,t,n,i,Kt,xt,yt,Lt);if(p){s&&(Tt.fromBufferAttribute(s,c),Et.fromBufferAttribute(s,h),Jt.fromBufferAttribute(s,u),p.uv=We.getUV(Lt,Kt,xt,yt,Tt,Et,Jt,new G)),l&&(Tt.fromBufferAttribute(l,c),Et.fromBufferAttribute(l,h),Jt.fromBufferAttribute(l,u),p.uv2=We.getUV(Lt,Kt,xt,yt,Tt,Et,Jt,new G));const e={a:c,b:h,c:u,normal:new S,materialIndex:0};We.getNormal(Kt,xt,yt,e.normal),p.face=e}return p}At.prototype.isMesh=!0;class Dt extends gt{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const o=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const s=[],l=[],c=[],h=[];let u=0,d=0;function p(e,t,n,i,r,a,p,f,m,g,P){const G=a/m,v=p/g,K=a/2,x=p/2,y=f/2,_=m+1,b=g+1;let w=0,N=0;const M=new S;for(let a=0;a<b;a++){const o=a*v-x;for(let s=0;s<_;s++){const u=s*G-K;M[e]=u*i,M[t]=o*r,M[n]=y,l.push(M.x,M.y,M.z),M[e]=0,M[t]=0,M[n]=f>0?1:-1,c.push(M.x,M.y,M.z),h.push(s/m),h.push(1-a/g),w+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){const n=u+t+_*e,i=u+t+_*(e+1),r=u+(t+1)+_*(e+1),a=u+(t+1)+_*e;s.push(n,i,a),s.push(i,r,a),N+=6}o.addGroup(d,N,P),d+=N,u+=w}p("z","y","x",-1,-1,n,t,e,a,r,0),p("z","y","x",1,-1,n,t,-e,a,r,1),p("x","z","y",1,1,e,n,t,i,a,2),p("x","z","y",1,-1,e,n,-t,i,a,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(s),this.setAttribute("position",new st(l,3)),this.setAttribute("normal",new st(c,3)),this.setAttribute("uv",new st(h,2))}}function zt(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function kt(e){const t={};for(let n=0;n<e.length;n++){const i=zt(e[n]);for(const e in i)t[e]=i[e]}return t}const Ft={clone:zt,merge:kt};class It extends je{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=zt(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}It.prototype.isShaderMaterial=!0;class Ot extends Ee{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new ae,this.projectionMatrix=new ae,this.projectionMatrixInverse=new ae}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new S),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Ot.prototype.isCamera=!0;class Ht extends Ot{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*d*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*u*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*d*Math.atan(Math.tan(.5*u*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*u*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const e=a.fullWidth,o=a.fullHeight;r+=a.offsetX*i/e,t-=a.offsetY*n/o,i*=a.width/e,n*=a.height/o}const o=this.filmOffset;0!==o&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}Ht.prototype.isPerspectiveCamera=!0;class Ut extends Ee{constructor(e,t,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new Ht(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new S(1,0,0)),this.add(i);const r=new Ht(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new S(-1,0,0)),this.add(r);const a=new Ht(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new S(0,1,0)),this.add(a);const o=new Ht(90,1,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new S(0,-1,0)),this.add(o);const s=new Ht(90,1,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new S(0,0,1)),this.add(s);const l=new Ht(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new S(0,0,-1)),this.add(l)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,o,s,l]=this.children,c=e.xr.enabled,h=e.getRenderTarget();e.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,s),n.texture.generateMipmaps=u,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(h),e.xr.enabled=c}}class Bt extends _{constructor(e,t,n,i,r,a,o,s,l,c){super(e=void 0!==e?e:[],t=void 0!==t?t:301,n,i,r,a,o=void 0!==o?o:1022,s,l,c),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Bt.prototype.isCubeTexture=!0;class Wt extends N{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),t=t||{},this.texture=new Bt(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:1006,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=1023,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new Dt(5,5,5),r=new It({name:"CubemapFromEquirect",uniforms:zt(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=t;const a=new At(i,r),o=t.minFilter;1008===t.minFilter&&(t.minFilter=1006);return new Ut(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,i);e.setRenderTarget(r)}}Wt.prototype.isWebGLCubeRenderTarget=!0;class Vt extends _{constructor(e,t,n,i,r,a,o,s,l,c,h,u){super(null,a,o,s,l,c,i,r,h,u),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=void 0!==l?l:1003,this.minFilter=void 0!==c?c:1003,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Vt.prototype.isDataTexture=!0;const jt=new Y,qt=new S;class Xt{constructor(e=new Ae,t=new Ae,n=new Ae,i=new Ae,r=new Ae,a=new Ae){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],o=n[3],s=n[4],l=n[5],c=n[6],h=n[7],u=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],P=n[14],G=n[15];return t[0].setComponents(o-i,h-s,f-u,G-m).normalize(),t[1].setComponents(o+i,h+s,f+u,G+m).normalize(),t[2].setComponents(o+r,h+l,f+d,G+g).normalize(),t[3].setComponents(o-r,h-l,f-d,G-g).normalize(),t[4].setComponents(o-a,h-c,f-p,G-P).normalize(),t[5].setComponents(o+a,h+c,f+p,G+P).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),jt.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(jt)}intersectsSprite(e){return jt.center.set(0,0,0),jt.radius=.7071067811865476,jt.applyMatrix4(e.matrixWorld),this.intersectsSphere(jt)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let e=0;e<6;e++){if(t[e].distanceToPoint(n)<i)return!1}return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(qt.x=i.normal.x>0?e.max.x:e.min.x,qt.y=i.normal.y>0?e.max.y:e.min.y,qt.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(qt)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Yt(){let e=null,t=!1,n=null,i=null;function r(t,a){n(t,a),i=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==n&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function Zt(e,t){const n=t.isWebGL2,i=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),i.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=i.get(t);n&&(e.deleteBuffer(n.buffer),i.delete(t))},update:function(t,r){if(t.isGLBufferAttribute){const e=i.get(t);return void((!e||e.version<t.version)&&i.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const a=i.get(t);void 0===a?i.set(t,function(t,i){const r=t.array,a=t.usage,o=e.createBuffer();e.bindBuffer(i,o),e.bufferData(i,r,a),t.onUploadCallback();let s=5126;return r instanceof Float32Array?s=5126:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?t.isFloat16BufferAttribute?n?s=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):s=5123:r instanceof Int16Array?s=5122:r instanceof Uint32Array?s=5125:r instanceof Int32Array?s=5124:r instanceof Int8Array?s=5120:r instanceof Uint8Array&&(s=5121),{buffer:o,type:s,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}(t,r)):a.version<t.version&&(!function(t,i,r){const a=i.array,o=i.updateRange;e.bindBuffer(r,t),-1===o.count?e.bufferSubData(r,0,a):(n?e.bufferSubData(r,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count):e.bufferSubData(r,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count)),o.count=-1)}(a.buffer,t,r),a.version=t.version)}}}class Qt extends gt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,o=Math.floor(n),s=Math.floor(i),l=o+1,c=s+1,h=e/o,u=t/s,d=[],p=[],f=[],m=[];for(let e=0;e<c;e++){const t=e*u-a;for(let n=0;n<l;n++){const i=n*h-r;p.push(i,-t,0),f.push(0,0,1),m.push(n/o),m.push(1-e/s)}}for(let e=0;e<s;e++)for(let t=0;t<o;t++){const n=t+l*e,i=t+l*(e+1),r=t+1+l*(e+1),a=t+1+l*e;d.push(n,i,a),d.push(i,r,a)}this.setIndex(d),this.setAttribute("position",new st(p,3)),this.setAttribute("normal",new st(f,3)),this.setAttribute("uv",new st(m,2))}}const $t={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},en={common:{diffuse:{value:new et(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new v},uv2Transform:{value:new v},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new G(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new et(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new et(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new v}},sprite:{diffuse:{value:new et(15658734)},opacity:{value:1},center:{value:new G(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new v}}},tn={basic:{uniforms:kt([en.common,en.specularmap,en.envmap,en.aomap,en.lightmap,en.fog]),vertexShader:$t.meshbasic_vert,fragmentShader:$t.meshbasic_frag},lambert:{uniforms:kt([en.common,en.specularmap,en.envmap,en.aomap,en.lightmap,en.emissivemap,en.fog,en.lights,{emissive:{value:new et(0)}}]),vertexShader:$t.meshlambert_vert,fragmentShader:$t.meshlambert_frag},phong:{uniforms:kt([en.common,en.specularmap,en.envmap,en.aomap,en.lightmap,en.emissivemap,en.bumpmap,en.normalmap,en.displacementmap,en.fog,en.lights,{emissive:{value:new et(0)},specular:{value:new et(1118481)},shininess:{value:30}}]),vertexShader:$t.meshphong_vert,fragmentShader:$t.meshphong_frag},standard:{uniforms:kt([en.common,en.envmap,en.aomap,en.lightmap,en.emissivemap,en.bumpmap,en.normalmap,en.displacementmap,en.roughnessmap,en.metalnessmap,en.fog,en.lights,{emissive:{value:new et(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:$t.meshphysical_vert,fragmentShader:$t.meshphysical_frag},toon:{uniforms:kt([en.common,en.aomap,en.lightmap,en.emissivemap,en.bumpmap,en.normalmap,en.displacementmap,en.gradientmap,en.fog,en.lights,{emissive:{value:new et(0)}}]),vertexShader:$t.meshtoon_vert,fragmentShader:$t.meshtoon_frag},matcap:{uniforms:kt([en.common,en.bumpmap,en.normalmap,en.displacementmap,en.fog,{matcap:{value:null}}]),vertexShader:$t.meshmatcap_vert,fragmentShader:$t.meshmatcap_frag},points:{uniforms:kt([en.points,en.fog]),vertexShader:$t.points_vert,fragmentShader:$t.points_frag},dashed:{uniforms:kt([en.common,en.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:$t.linedashed_vert,fragmentShader:$t.linedashed_frag},depth:{uniforms:kt([en.common,en.displacementmap]),vertexShader:$t.depth_vert,fragmentShader:$t.depth_frag},normal:{uniforms:kt([en.common,en.bumpmap,en.normalmap,en.displacementmap,{opacity:{value:1}}]),vertexShader:$t.normal_vert,fragmentShader:$t.normal_frag},sprite:{uniforms:kt([en.sprite,en.fog]),vertexShader:$t.sprite_vert,fragmentShader:$t.sprite_frag},background:{uniforms:{uvTransform:{value:new v},t2D:{value:null}},vertexShader:$t.background_vert,fragmentShader:$t.background_frag},cube:{uniforms:kt([en.envmap,{opacity:{value:1}}]),vertexShader:$t.cube_vert,fragmentShader:$t.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:$t.equirect_vert,fragmentShader:$t.equirect_frag},distanceRGBA:{uniforms:kt([en.common,en.displacementmap,{referencePosition:{value:new S},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:$t.distanceRGBA_vert,fragmentShader:$t.distanceRGBA_frag},shadow:{uniforms:kt([en.lights,en.fog,{color:{value:new et(0)},opacity:{value:1}}]),vertexShader:$t.shadow_vert,fragmentShader:$t.shadow_frag}};function nn(e,t,n,i,r){const a=new et(0);let o,s,l=0,c=null,h=0,u=null;function d(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,r)}return{getClearColor:function(){return a},setClearColor:function(e,t=1){a.set(e),l=t,d(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(e){l=e,d(a,l)},render:function(n,r,p,f){let m=!0===r.isScene?r.background:null;m&&m.isTexture&&(m=t.get(m));const g=e.xr,P=g.getSession&&g.getSession();P&&"additive"===P.environmentBlendMode&&(m=null),null===m?d(a,l):m&&m.isColor&&(d(m,1),f=!0),(e.autoClear||f)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||306===m.mapping)?(void 0===s&&(s=new At(new Dt(1,1,1),new It({name:"BackgroundCubeMaterial",uniforms:zt(tn.cube.uniforms),vertexShader:tn.cube.vertexShader,fragmentShader:tn.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),s.geometry.deleteAttribute("uv"),s.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(s.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(s)),s.material.uniforms.envMap.value=m,s.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,c===m&&h===m.version&&u===e.toneMapping||(s.material.needsUpdate=!0,c=m,h=m.version,u=e.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null)):m&&m.isTexture&&(void 0===o&&(o=new At(new Qt(2,2),new It({name:"BackgroundMaterial",uniforms:zt(tn.background.uniforms),vertexShader:tn.background.vertexShader,fragmentShader:tn.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(o)),o.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),c===m&&h===m.version&&u===e.toneMapping||(o.material.needsUpdate=!0,c=m,h=m.version,u=e.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null))}}}function rn(e,t,n,i){const r=e.getParameter(34921),a=i.isWebGL2?null:t.get("OES_vertex_array_object"),o=i.isWebGL2||null!==a,s={},l=d(null);let c=l;function h(t){return i.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function u(t){return i.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function d(e){const t=[],n=[],i=[];for(let e=0;e<r;e++)t[e]=0,n[e]=0,i[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}}function p(){const e=c.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function f(e){m(e,0)}function m(n,r){const a=c.newAttributes,o=c.enabledAttributes,s=c.attributeDivisors;if(a[n]=1,0===o[n]&&(e.enableVertexAttribArray(n),o[n]=1),s[n]!==r){(i.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),s[n]=r}}function g(){const t=c.newAttributes,n=c.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==t[i]&&(e.disableVertexAttribArray(i),n[i]=0)}function P(t,n,r,a,o,s){!0!==i.isWebGL2||5124!==r&&5125!==r?e.vertexAttribPointer(t,n,r,a,o,s):e.vertexAttribIPointer(t,n,r,o,s)}function G(){v(),c!==l&&(c=l,h(c.object))}function v(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,u,G,v){let K=!1;if(o){const t=function(t,n,r){const o=!0===r.wireframe;let l=s[t.id];void 0===l&&(l={},s[t.id]=l);let c=l[n.id];void 0===c&&(c={},l[n.id]=c);let h=c[o];void 0===h&&(h=d(i.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),c[o]=h);return h}(G,u,l);c!==t&&(c=t,h(c.object)),K=function(e,t){const n=c.attributes,i=e.attributes;let r=0;for(const e in i){const t=n[e],a=i[e];if(void 0===t)return!0;if(t.attribute!==a)return!0;if(t.data!==a.data)return!0;r++}return c.attributesNum!==r||c.index!==t}(G,v),K&&function(e,t){const n={},i=e.attributes;let r=0;for(const e in i){const t=i[e],a={};a.attribute=t,t.data&&(a.data=t.data),n[e]=a,r++}c.attributes=n,c.attributesNum=r,c.index=t}(G,v)}else{const e=!0===l.wireframe;c.geometry===G.id&&c.program===u.id&&c.wireframe===e||(c.geometry=G.id,c.program=u.id,c.wireframe=e,K=!0)}!0===r.isInstancedMesh&&(K=!0),null!==v&&n.update(v,34963),K&&(!function(r,a,o,s){if(!1===i.isWebGL2&&(r.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();const l=s.attributes,c=o.getAttributes(),h=a.defaultAttributeValues;for(const t in c){const i=c[t];if(i>=0){const a=l[t];if(void 0!==a){const t=a.normalized,r=a.itemSize,o=n.get(a);if(void 0===o)continue;const l=o.buffer,c=o.type,h=o.bytesPerElement;if(a.isInterleavedBufferAttribute){const n=a.data,o=n.stride,u=a.offset;n&&n.isInstancedInterleavedBuffer?(m(i,n.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=n.meshPerAttribute*n.count)):f(i),e.bindBuffer(34962,l),P(i,r,c,t,o*h,u*h)}else a.isInstancedBufferAttribute?(m(i,a.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=a.meshPerAttribute*a.count)):f(i),e.bindBuffer(34962,l),P(i,r,c,t,0,0)}else if("instanceMatrix"===t){const t=n.get(r.instanceMatrix);if(void 0===t)continue;const a=t.buffer,o=t.type;m(i+0,1),m(i+1,1),m(i+2,1),m(i+3,1),e.bindBuffer(34962,a),e.vertexAttribPointer(i+0,4,o,!1,64,0),e.vertexAttribPointer(i+1,4,o,!1,64,16),e.vertexAttribPointer(i+2,4,o,!1,64,32),e.vertexAttribPointer(i+3,4,o,!1,64,48)}else if("instanceColor"===t){const t=n.get(r.instanceColor);if(void 0===t)continue;const a=t.buffer,o=t.type;m(i,1),e.bindBuffer(34962,a),e.vertexAttribPointer(i,3,o,!1,12,0)}else if(void 0!==h){const n=h[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(i,n);break;case 3:e.vertexAttrib3fv(i,n);break;case 4:e.vertexAttrib4fv(i,n);break;default:e.vertexAttrib1fv(i,n)}}}}g()}(r,l,u,G),null!==v&&e.bindBuffer(34963,n.get(v).buffer))},reset:G,resetDefaultState:v,dispose:function(){G();for(const e in s){const t=s[e];for(const e in t){const n=t[e];for(const e in n)u(n[e].object),delete n[e];delete t[e]}delete s[e]}},releaseStatesOfGeometry:function(e){if(void 0===s[e.id])return;const t=s[e.id];for(const e in t){const n=t[e];for(const e in n)u(n[e].object),delete n[e];delete t[e]}delete s[e.id]},releaseStatesOfProgram:function(e){for(const t in s){const n=s[t];if(void 0===n[e.id])continue;const i=n[e.id];for(const e in i)u(i[e].object),delete i[e];delete n[e.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function an(e,t,n,i){const r=i.isWebGL2;let a;this.setMode=function(e){a=e},this.render=function(t,i){e.drawArrays(a,t,i),n.update(i,a,1)},this.renderInstances=function(i,o,s){if(0===s)return;let l,c;if(r)l=e,c="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](a,i,o,s),n.update(o,a,s)}}function on(e,t,n){let i;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let o=void 0!==n.precision?n.precision:"highp";const s=r(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);const l=!0===n.logarithmicDepthBuffer,c=e.getParameter(34930),h=e.getParameter(35660),u=e.getParameter(3379),d=e.getParameter(34076),p=e.getParameter(34921),f=e.getParameter(36347),m=e.getParameter(36348),g=e.getParameter(36349),P=h>0,G=a||t.has("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");i=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:o,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:P,floatFragmentTextures:G,floatVertexTextures:P&&G,maxSamples:a?e.getParameter(36183):0}}function sn(e){const t=this;let n=null,i=0,r=!1,a=!1;const o=new Ae,s=new v,l={value:null,needsUpdate:!1};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function h(e,n,i,r){const a=null!==e?e.length:0;let c=null;if(0!==a){if(c=l.value,!0!==r||null===c){const t=i+4*a,r=n.matrixWorldInverse;s.getNormalMatrix(r),(null===c||c.length<t)&&(c=new Float32Array(t));for(let t=0,n=i;t!==a;++t,n+=4)o.copy(e[t]).applyMatrix4(r,s),o.normal.toArray(c,n),c[n+3]=o.constant}l.value=c,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){const o=0!==e.length||t||0!==i||r;return r=t,n=h(e,a,0),i=e.length,o},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1,c()},this.setState=function(t,o,s){const u=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,f=e.get(t);if(!r||null===u||0===u.length||a&&!p)a?h(null):c();else{const e=a?0:i,t=4*e;let r=f.clippingState||null;l.value=r,r=h(u,o,t,s);for(let e=0;e!==t;++e)r[e]=n[e];f.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}}}function ln(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=301:304===t&&(e.mapping=302),e}function i(e){const n=e.target;n.removeEventListener("dispose",i);const r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping;if(303===a||304===a){if(t.has(r)){return n(t.get(r).texture,r.mapping)}{const a=r.image;if(a&&a.height>0){const o=e.getRenderTarget(),s=new Wt(a.height/2);return s.fromEquirectangularTexture(e,r),t.set(r,s),e.setRenderTarget(o),r.addEventListener("dispose",i),n(s.texture,r.mapping)}return null}}}return r},dispose:function(){t=new WeakMap}}}function cn(e){const t={};function n(n){if(void 0!==t[n])return t[n];let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function hn(e,t,n,i){const r={},a=new WeakMap;function o(e){const s=e.target;null!==s.index&&t.remove(s.index);for(const e in s.attributes)t.remove(s.attributes[e]);s.removeEventListener("dispose",o),delete r[s.id];const l=a.get(s);l&&(t.remove(l),a.delete(s)),i.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,n.memory.geometries--}function s(e){const n=[],i=e.index,r=e.attributes.position;let o=0;if(null!==i){const e=i.array;o=i.version;for(let t=0,i=e.length;t<i;t+=3){const i=e[t+0],r=e[t+1],a=e[t+2];n.push(i,r,r,a,a,i)}}else{const e=r.array;o=r.version;for(let t=0,i=e.length/3-1;t<i;t+=3){const e=t+0,i=t+1,r=t+2;n.push(e,i,i,r,r,e)}}const s=new(lt(n)>65535?ot:at)(n,1);s.version=o;const l=a.get(e);l&&t.remove(l),a.set(e,s)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",o),r[t.id]=!0,n.memory.geometries++),t},update:function(e){const n=e.attributes;for(const e in n)t.update(n[e],34962);const i=e.morphAttributes;for(const e in i){const n=i[e];for(let e=0,i=n.length;e<i;e++)t.update(n[e],34962)}},getWireframeAttribute:function(e){const t=a.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&s(e)}else s(e);return a.get(e)}}}function un(e,t,n,i){const r=i.isWebGL2;let a,o,s;this.setMode=function(e){a=e},this.setIndex=function(e){o=e.type,s=e.bytesPerElement},this.render=function(t,i){e.drawElements(a,i,o,t*s),n.update(i,a,1)},this.renderInstances=function(i,l,c){if(0===c)return;let h,u;if(r)h=e,u="drawElementsInstanced";else if(h=t.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](a,l,o,i*s,c),n.update(l,a,c)}}function dn(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,i){switch(t.calls++,n){case 4:t.triangles+=i*(e/3);break;case 1:t.lines+=i*(e/2);break;case 3:t.lines+=i*(e-1);break;case 2:t.lines+=i*e;break;case 0:t.points+=i*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function pn(e,t){return e[0]-t[0]}function fn(e,t){return Math.abs(t[1])-Math.abs(e[1])}function mn(e){const t={},n=new Float32Array(8),i=[];for(let e=0;e<8;e++)i[e]=[e,0];return{update:function(r,a,o,s){const l=r.morphTargetInfluences,c=void 0===l?0:l.length;let h=t[a.id];if(void 0===h){h=[];for(let e=0;e<c;e++)h[e]=[e,0];t[a.id]=h}for(let e=0;e<c;e++){const t=h[e];t[0]=e,t[1]=l[e]}h.sort(fn);for(let e=0;e<8;e++)e<c&&h[e][1]?(i[e][0]=h[e][0],i[e][1]=h[e][1]):(i[e][0]=Number.MAX_SAFE_INTEGER,i[e][1]=0);i.sort(pn);const u=o.morphTargets&&a.morphAttributes.position,d=o.morphNormals&&a.morphAttributes.normal;let p=0;for(let e=0;e<8;e++){const t=i[e],r=t[0],o=t[1];r!==Number.MAX_SAFE_INTEGER&&o?(u&&a.getAttribute("morphTarget"+e)!==u[r]&&a.setAttribute("morphTarget"+e,u[r]),d&&a.getAttribute("morphNormal"+e)!==d[r]&&a.setAttribute("morphNormal"+e,d[r]),n[e]=o,p+=o):(u&&!0===a.hasAttribute("morphTarget"+e)&&a.deleteAttribute("morphTarget"+e),d&&!0===a.hasAttribute("morphNormal"+e)&&a.deleteAttribute("morphNormal"+e),n[e]=0)}const f=a.morphTargetsRelative?1:1-p;s.getUniforms().setValue(e,"morphTargetBaseInfluence",f),s.getUniforms().setValue(e,"morphTargetInfluences",n)}}}function gn(e,t,n,i){let r=new WeakMap;function a(e){const t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){const o=i.render.frame,s=e.geometry,l=t.get(e,s);return r.get(l)!==o&&(t.update(l),r.set(l,o)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),l},dispose:function(){r=new WeakMap}}}tn.physical={uniforms:kt([tn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new G(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new et(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:$t.meshphysical_vert,fragmentShader:$t.meshphysical_frag};class Pn extends _{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Pn.prototype.isDataTexture2DArray=!0;class Gn extends _{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Gn.prototype.isDataTexture3D=!0;const vn=new _,Kn=new Pn,xn=new Gn,yn=new Bt,_n=[],bn=[],wn=new Float32Array(16),Nn=new Float32Array(9),Mn=new Float32Array(4);function Sn(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let a=_n[r];if(void 0===a&&(a=new Float32Array(r),_n[r]=a),0!==t){i.toArray(a,0);for(let i=1,r=0;i!==t;++i)r+=n,e[i].toArray(a,r)}return a}function Tn(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function En(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function Jn(e,t){let n=bn[t];void 0===n&&(n=new Int32Array(t),bn[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function Ln(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function Rn(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Tn(n,t))return;e.uniform2fv(this.addr,t),En(n,t)}}function An(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Tn(n,t))return;e.uniform3fv(this.addr,t),En(n,t)}}function Cn(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Tn(n,t))return;e.uniform4fv(this.addr,t),En(n,t)}}function Dn(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Tn(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),En(n,t)}else{if(Tn(n,i))return;Mn.set(i),e.uniformMatrix2fv(this.addr,!1,Mn),En(n,i)}}function zn(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Tn(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),En(n,t)}else{if(Tn(n,i))return;Nn.set(i),e.uniformMatrix3fv(this.addr,!1,Nn),En(n,i)}}function kn(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Tn(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),En(n,t)}else{if(Tn(n,i))return;wn.set(i),e.uniformMatrix4fv(this.addr,!1,wn),En(n,i)}}function Fn(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function In(e,t){const n=this.cache;Tn(n,t)||(e.uniform2iv(this.addr,t),En(n,t))}function On(e,t){const n=this.cache;Tn(n,t)||(e.uniform3iv(this.addr,t),En(n,t))}function Hn(e,t){const n=this.cache;Tn(n,t)||(e.uniform4iv(this.addr,t),En(n,t))}function Un(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Bn(e,t){const n=this.cache;Tn(n,t)||(e.uniform2uiv(this.addr,t),En(n,t))}function Wn(e,t){const n=this.cache;Tn(n,t)||(e.uniform3uiv(this.addr,t),En(n,t))}function Vn(e,t){const n=this.cache;Tn(n,t)||(e.uniform4uiv(this.addr,t),En(n,t))}function jn(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(t||vn,r)}function qn(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||xn,r)}function Xn(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(t||yn,r)}function Yn(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||Kn,r)}function Zn(e,t){e.uniform1fv(this.addr,t)}function Qn(e,t){const n=Sn(t,this.size,2);e.uniform2fv(this.addr,n)}function $n(e,t){const n=Sn(t,this.size,3);e.uniform3fv(this.addr,n)}function ei(e,t){const n=Sn(t,this.size,4);e.uniform4fv(this.addr,n)}function ti(e,t){const n=Sn(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function ni(e,t){const n=Sn(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function ii(e,t){const n=Sn(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function ri(e,t){e.uniform1iv(this.addr,t)}function ai(e,t){e.uniform2iv(this.addr,t)}function oi(e,t){e.uniform3iv(this.addr,t)}function si(e,t){e.uniform4iv(this.addr,t)}function li(e,t){e.uniform1uiv(this.addr,t)}function ci(e,t){e.uniform2uiv(this.addr,t)}function hi(e,t){e.uniform3uiv(this.addr,t)}function ui(e,t){e.uniform4uiv(this.addr,t)}function di(e,t,n){const i=t.length,r=Jn(n,i);e.uniform1iv(this.addr,r);for(let e=0;e!==i;++e)n.safeSetTexture2D(t[e]||vn,r[e])}function pi(e,t,n){const i=t.length,r=Jn(n,i);e.uniform1iv(this.addr,r);for(let e=0;e!==i;++e)n.safeSetTextureCube(t[e]||yn,r[e])}function fi(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Ln;case 35664:return Rn;case 35665:return An;case 35666:return Cn;case 35674:return Dn;case 35675:return zn;case 35676:return kn;case 5124:case 35670:return Fn;case 35667:case 35671:return In;case 35668:case 35672:return On;case 35669:case 35673:return Hn;case 5125:return Un;case 36294:return Bn;case 36295:return Wn;case 36296:return Vn;case 35678:case 36198:case 36298:case 36306:case 35682:return jn;case 35679:case 36299:case 36307:return qn;case 35680:case 36300:case 36308:case 36293:return Xn;case 36289:case 36303:case 36311:case 36292:return Yn}}(t.type)}function mi(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Zn;case 35664:return Qn;case 35665:return $n;case 35666:return ei;case 35674:return ti;case 35675:return ni;case 35676:return ii;case 5124:case 35670:return ri;case 35667:case 35671:return ai;case 35668:case 35672:return oi;case 35669:case 35673:return si;case 5125:return li;case 36294:return ci;case 36295:return hi;case 36296:return ui;case 35678:case 36198:case 36298:case 36306:case 35682:return di;case 35680:case 36300:case 36308:case 36293:return pi}}(t.type)}function gi(e){this.id=e,this.seq=[],this.map={}}mi.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),En(t,e)},gi.prototype.setValue=function(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(e,t[a.id],n)}};const Pi=/(\w+)(\])?(\[|\.)?/g;function Gi(e,t){e.seq.push(t),e.map[t.id]=t}function vi(e,t,n){const i=e.name,r=i.length;for(Pi.lastIndex=0;;){const a=Pi.exec(i),o=Pi.lastIndex;let s=a[1];const l="]"===a[2],c=a[3];if(l&&(s|=0),void 0===c||"["===c&&o+2===r){Gi(n,void 0===c?new fi(s,e,t):new mi(s,e,t));break}{let e=n.map[s];void 0===e&&(e=new gi(s),Gi(n,e)),n=e}}}function Ki(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const n=e.getActiveUniform(t,i);vi(n,e.getUniformLocation(t,n.name),this)}}function xi(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}Ki.prototype.setValue=function(e,t,n,i){const r=this.map[t];void 0!==r&&r.setValue(e,n,i)},Ki.prototype.setOptional=function(e,t,n){const i=t[n];void 0!==i&&this.setValue(e,n,i)},Ki.upload=function(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const a=t[r],o=n[a.id];!1!==o.needsUpdate&&a.setValue(e,o.value,i)}},Ki.seqWithValue=function(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const r=e[i];r.id in t&&n.push(r)}return n};let yi=0;function _i(e){switch(e){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function bi(e,t,n){const i=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(i&&""===r)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+r+function(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function wi(e,t){const n=_i(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Ni(e,t){const n=_i(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Mi(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Si(e){return""!==e}function Ti(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Ei(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Ji=/^[ \t]*#include +<([\w\d./]+)>/gm;function Li(e){return e.replace(Ji,Ri)}function Ri(e,t){const n=$t[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return Li(n)}const Ai=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Ci=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Di(e){return e.replace(Ci,ki).replace(Ai,zi)}function zi(e,t,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),ki(e,t,n,i)}function ki(e,t,n,i){let r="";for(let e=parseInt(t);e<parseInt(n);e++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return r}function Fi(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Ii(e,t,n,i){const r=e.getContext(),a=n.defines;let o=n.vertexShader,s=n.fragmentShader;const l=function(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),c=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case 306:case 307:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),h=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case 302:case 307:t="ENVMAP_MODE_REFRACTION"}return t}(n),u=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),d=e.gammaFactor>0?e.gammaFactor:1,p=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Si).join("\n")}(n),f=function(e){const t=[];for(const n in e){const i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(a),m=r.createProgram();let g,P,G=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[f].filter(Si).join("\n"),g.length>0&&(g+="\n"),P=[p,f].filter(Si).join("\n"),P.length>0&&(P+="\n")):(g=[Fi(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Si).join("\n"),P=[p,Fi(n),"#define SHADER_NAME "+n.shaderName,f,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?$t.tonemapping_pars_fragment:"",0!==n.toneMapping?Mi("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",$t.encodings_pars_fragment,n.map?wi("mapTexelToLinear",n.mapEncoding):"",n.matcap?wi("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?wi("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?wi("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?wi("lightMapTexelToLinear",n.lightMapEncoding):"",Ni("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Si).join("\n")),o=Li(o),o=Ti(o,n),o=Ei(o,n),s=Li(s),s=Ti(s,n),s=Ei(s,n),o=Di(o),s=Di(s),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(G="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,P=["#define varying in","300 es"===n.glslVersion?"":"out highp vec4 pc_fragColor;","300 es"===n.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+P);const v=G+P+s,K=xi(r,35633,G+g+o),x=xi(r,35632,v);if(r.attachShader(m,K),r.attachShader(m,x),void 0!==n.index0AttributeName?r.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(m,0,"position"),r.linkProgram(m),e.debug.checkShaderErrors){const e=r.getProgramInfoLog(m).trim(),t=r.getShaderInfoLog(K).trim(),n=r.getShaderInfoLog(x).trim();let i=!0,a=!0;if(!1===r.getProgramParameter(m,35714)){i=!1;const t=bi(r,K,"vertex"),n=bi(r,x,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(m,35715),"gl.getProgramInfoLog",e,t,n)}else""!==e?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",e):""!==t&&""!==n||(a=!1);a&&(this.diagnostics={runnable:i,programLog:e,vertexShader:{log:t,prefix:g},fragmentShader:{log:n,prefix:P}})}let y,_;return r.deleteShader(K),r.deleteShader(x),this.getUniforms=function(){return void 0===y&&(y=new Ki(r,m)),y},this.getAttributes=function(){return void 0===_&&(_=function(e,t){const n={},i=e.getProgramParameter(t,35721);for(let r=0;r<i;r++){const i=e.getActiveAttrib(t,r).name;n[i]=e.getAttribLocation(t,i)}return n}(r,m)),_},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=yi++,this.cacheKey=t,this.usedTimes=1,this.program=m,this.vertexShader=K,this.fragmentShader=x,this}function Oi(e,t,n,i,r,a){const o=[],s=i.isWebGL2,l=i.logarithmicDepthBuffer,c=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function m(e){let t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=3e3,t}return{getParameters:function(r,o,f,g,P){const G=g.fog,v=r.isMeshStandardMaterial?g.environment:null,K=t.get(r.envMap||v),x=p[r.type],y=P.isSkinnedMesh?function(e){const t=e.skeleton.bones;if(c)return 1024;{const e=h,n=Math.floor((e-20)/4),i=Math.min(n,t.length);return i<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+i+"."),0):i}}(P):0;let _,b;if(null!==r.precision&&(d=i.getMaxPrecision(r.precision),d!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",d,"instead.")),x){const e=tn[x];_=e.vertexShader,b=e.fragmentShader}else _=r.vertexShader,b=r.fragmentShader;const w=e.getRenderTarget();return{isWebGL2:s,shaderID:x,shaderName:r.type,vertexShader:_,fragmentShader:b,defines:r.defines,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:d,instancing:!0===P.isInstancedMesh,instancingColor:!0===P.isInstancedMesh&&null!==P.instanceColor,supportsVertexTextures:u,outputEncoding:null!==w?m(w.texture):e.outputEncoding,map:!!r.map,mapEncoding:m(r.map),matcap:!!r.matcap,matcapEncoding:m(r.matcap),envMap:!!K,envMapMode:K&&K.mapping,envMapEncoding:m(K),envMapCubeUV:!!K&&(306===K.mapping||307===K.mapping),lightMap:!!r.lightMap,lightMapEncoding:m(r.lightMap),aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:m(r.emissiveMap),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:1===r.normalMapType,tangentSpaceNormalMap:0===r.normalMapType,clearcoatMap:!!r.clearcoatMap,clearcoatRoughnessMap:!!r.clearcoatRoughnessMap,clearcoatNormalMap:!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,gradientMap:!!r.gradientMap,sheen:!!r.sheen,transmissionMap:!!r.transmissionMap,combine:r.combine,vertexTangents:r.normalMap&&r.vertexTangents,vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&P.geometry&&P.geometry.attributes.color&&4===P.geometry.attributes.color.itemSize,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.displacementMap||r.transmissionMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmissionMap||!r.displacementMap),fog:!!G,useFog:r.fog,fogExp2:G&&G.isFogExp2,flatShading:!!r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:l,skinning:r.skinning&&y>0,maxBones:y,useVertexTexture:c,morphTargets:r.morphTargets,morphNormals:r.morphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:r.dithering,shadowMapEnabled:e.shadowMap.enabled&&f.length>0,shadowMapType:e.shadowMap.type,toneMapping:r.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:2===r.side,flipSided:1===r.side,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:s||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:s||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:s||n.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.fragmentShader),n.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<f.length;e++)n.push(t[f[e]]);n.push(e.outputEncoding),n.push(e.gammaFactor)}return n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=p[e.type];let n;if(t){const e=tn[t];n=Ft.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let i;for(let e=0,t=o.length;e<t;e++){const t=o[e];if(t.cacheKey===n){i=t,++i.usedTimes;break}}return void 0===i&&(i=new Ii(e,n,t,r),o.push(i)),i},releaseProgram:function(e){if(0==--e.usedTimes){const t=o.indexOf(e);o[t]=o[o.length-1],o.pop(),e.destroy()}},programs:o}}function Hi(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,i){e.get(t)[n]=i},dispose:function(){e=new WeakMap}}}function Ui(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Bi(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Wi(e){const t=[];let n=0;const i=[],r=[],a={id:-1};function o(i,r,o,s,l,c){let h=t[n];const u=e.get(o);return void 0===h?(h={id:i.id,object:i,geometry:r,material:o,program:u.program||a,groupOrder:s,renderOrder:i.renderOrder,z:l,group:c},t[n]=h):(h.id=i.id,h.object=i,h.geometry=r,h.material=o,h.program=u.program||a,h.groupOrder=s,h.renderOrder=i.renderOrder,h.z=l,h.group=c),n++,h}return{opaque:i,transparent:r,init:function(){n=0,i.length=0,r.length=0},push:function(e,t,n,a,s,l){const c=o(e,t,n,a,s,l);(!0===n.transparent?r:i).push(c)},unshift:function(e,t,n,a,s,l){const c=o(e,t,n,a,s,l);(!0===n.transparent?r:i).unshift(c)},finish:function(){for(let e=n,i=t.length;e<i;e++){const n=t[e];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(e,t){i.length>1&&i.sort(e||Ui),r.length>1&&r.sort(t||Bi)}}}function Vi(e){let t=new WeakMap;return{get:function(n,i){let r;return!1===t.has(n)?(r=new Wi(e),t.set(n,[r])):i>=t.get(n).length?(r=new Wi(e),t.get(n).push(r)):r=t.get(n)[i],r},dispose:function(){t=new WeakMap}}}function ji(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new S,color:new et};break;case"SpotLight":n={position:new S,direction:new S,color:new et,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new S,color:new et,distance:0,decay:0};break;case"HemisphereLight":n={direction:new S,skyColor:new et,groundColor:new et};break;case"RectAreaLight":n={color:new et,position:new S,halfWidth:new S,halfHeight:new S}}return e[t.id]=n,n}}}let qi=0;function Xi(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Yi(e,t){const n=new ji,i=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)r.probe.push(new S);const a=new S,o=new ae,s=new ae;return{setup:function(a){let o=0,s=0,l=0;for(let e=0;e<9;e++)r.probe[e].set(0,0,0);let c=0,h=0,u=0,d=0,p=0,f=0,m=0,g=0;a.sort(Xi);for(let e=0,t=a.length;e<t;e++){const t=a[e],P=t.color,G=t.intensity,v=t.distance,K=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)o+=P.r*G,s+=P.g*G,l+=P.b*G;else if(t.isLightProbe)for(let e=0;e<9;e++)r.probe[e].addScaledVector(t.sh.coefficients[e],G);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,r.directionalShadow[c]=n,r.directionalShadowMap[c]=K,r.directionalShadowMatrix[c]=t.shadow.matrix,f++}r.directional[c]=e,c++}else if(t.isSpotLight){const e=n.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(P).multiplyScalar(G),e.distance=v,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,r.spotShadow[u]=n,r.spotShadowMap[u]=K,r.spotShadowMatrix[u]=t.shadow.matrix,g++}r.spot[u]=e,u++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(P).multiplyScalar(G),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),r.rectArea[d]=e,d++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,r.pointShadow[h]=n,r.pointShadowMap[h]=K,r.pointShadowMatrix[h]=t.shadow.matrix,m++}r.point[h]=e,h++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(G),e.groundColor.copy(t.groundColor).multiplyScalar(G),r.hemi[p]=e,p++}}d>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(r.rectAreaLTC1=en.LTC_FLOAT_1,r.rectAreaLTC2=en.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=en.LTC_HALF_1,r.rectAreaLTC2=en.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=o,r.ambient[1]=s,r.ambient[2]=l;const P=r.hash;P.directionalLength===c&&P.pointLength===h&&P.spotLength===u&&P.rectAreaLength===d&&P.hemiLength===p&&P.numDirectionalShadows===f&&P.numPointShadows===m&&P.numSpotShadows===g||(r.directional.length=c,r.spot.length=u,r.rectArea.length=d,r.point.length=h,r.hemi.length=p,r.directionalShadow.length=f,r.directionalShadowMap.length=f,r.pointShadow.length=m,r.pointShadowMap.length=m,r.spotShadow.length=g,r.spotShadowMap.length=g,r.directionalShadowMatrix.length=f,r.pointShadowMatrix.length=m,r.spotShadowMatrix.length=g,P.directionalLength=c,P.pointLength=h,P.spotLength=u,P.rectAreaLength=d,P.hemiLength=p,P.numDirectionalShadows=f,P.numPointShadows=m,P.numSpotShadows=g,r.version=qi++)},setupView:function(e,t){let n=0,i=0,l=0,c=0,h=0;const u=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){const d=e[t];if(d.isDirectionalLight){const e=r.directional[n];e.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(u),n++}else if(d.isSpotLight){const e=r.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),e.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(u),l++}else if(d.isRectAreaLight){const e=r.rectArea[c];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),s.identity(),o.copy(d.matrixWorld),o.premultiply(u),s.extractRotation(o),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(s),e.halfHeight.applyMatrix4(s),c++}else if(d.isPointLight){const e=r.point[i];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),i++}else if(d.isHemisphereLight){const e=r.hemi[h];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(u),e.direction.normalize(),h++}}},state:r}}function Zi(e,t){const n=new Yi(e,t),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(){n.setup(i)},setupLightsView:function(e){n.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){r.push(e)}}}function Qi(e,t){let n=new WeakMap;return{get:function(i,r=0){let a;return!1===n.has(i)?(a=new Zi(e,t),n.set(i,[a])):r>=n.get(i).length?(a=new Zi(e,t),n.get(i).push(a)):a=n.get(i)[r],a},dispose:function(){n=new WeakMap}}}class $i extends je{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}$i.prototype.isMeshDepthMaterial=!0;class er extends je{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new S,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}er.prototype.isMeshDistanceMaterial=!0;function tr(e,t,n){let i=new Xt;const r=new G,a=new G,o=new w,s=[],l=[],c={},h=n.maxTextureSize,u={0:1,1:0,2:2},d=new It({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new G},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const f=new gt;f.setAttribute("position",new rt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new At(f,d),g=this;function P(n,i){const r=t.update(m);d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(i,null,r,d,m,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(i,null,r,p,m,null)}function v(e,t,n){const i=e<<0|t<<1|n<<2;let r=s[i];return void 0===r&&(r=new $i({depthPacking:3201,morphTargets:e,skinning:t}),s[i]=r),r}function K(e,t,n){const i=e<<0|t<<1|n<<2;let r=l[i];return void 0===r&&(r=new er({morphTargets:e,skinning:t}),l[i]=r),r}function x(t,n,i,r,a,o,s){let l=null,h=v,d=t.customDepthMaterial;if(!0===r.isPointLight&&(h=K,d=t.customDistanceMaterial),void 0===d){let e=!1;!0===i.morphTargets&&(e=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let r=!1;!0===t.isSkinnedMesh&&(!0===i.skinning?r=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t));l=h(e,r,!0===t.isInstancedMesh)}else l=d;if(e.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){const e=l.uuid,t=i.uuid;let n=c[e];void 0===n&&(n={},c[e]=n);let r=n[t];void 0===r&&(r=l.clone(),n[t]=r),l=r}return l.visible=i.visible,l.wireframe=i.wireframe,l.side=3===s?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:u[i.side],l.clipShadows=i.clipShadows,l.clippingPlanes=i.clippingPlanes,l.clipIntersection=i.clipIntersection,l.wireframeLinewidth=i.wireframeLinewidth,l.linewidth=i.linewidth,!0===r.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(r.matrixWorld),l.nearDistance=a,l.farDistance=o),l}function y(n,r,a,o,s){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===s)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=t.update(n),r=n.material;if(Array.isArray(r)){const t=i.groups;for(let l=0,c=t.length;l<c;l++){const c=t[l],h=r[c.materialIndex];if(h&&h.visible){const t=x(n,i,h,o,a.near,a.far,s);e.renderBufferDirect(a,null,i,t,n,c)}}}else if(r.visible){const t=x(n,i,r,o,a.near,a.far,s);e.renderBufferDirect(a,null,i,t,n,null)}}const l=n.children;for(let e=0,t=l.length;e<t;e++)y(l[e],r,a,o,s)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,n,s){if(!1===g.enabled)return;if(!1===g.autoUpdate&&!1===g.needsUpdate)return;if(0===t.length)return;const l=e.getRenderTarget(),c=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),d=e.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,c=t.length;l<c;l++){const c=t[l],u=c.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const p=u.getFrameExtents();if(r.multiply(p),a.copy(u.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(a.x=Math.floor(h/p.x),r.x=a.x*p.x,u.mapSize.x=a.x),r.y>h&&(a.y=Math.floor(h/p.y),r.y=a.y*p.y,u.mapSize.y=a.y)),null===u.map&&!u.isPointLightShadow&&3===this.type){const e={minFilter:1006,magFilter:1006,format:1023};u.map=new N(r.x,r.y,e),u.map.texture.name=c.name+".shadowMap",u.mapPass=new N(r.x,r.y,e),u.camera.updateProjectionMatrix()}if(null===u.map){const e={minFilter:1003,magFilter:1003,format:1023};u.map=new N(r.x,r.y,e),u.map.texture.name=c.name+".shadowMap",u.camera.updateProjectionMatrix()}e.setRenderTarget(u.map),e.clear();const f=u.getViewportCount();for(let e=0;e<f;e++){const t=u.getViewport(e);o.set(a.x*t.x,a.y*t.y,a.x*t.z,a.y*t.w),d.viewport(o),u.updateMatrices(c,e),i=u.getFrustum(),y(n,s,u.camera,c,this.type)}u.isPointLightShadow||3!==this.type||P(u,s),u.needsUpdate=!1}g.needsUpdate=!1,e.setRenderTarget(l,c,u)}}function nr(e,t,n){const i=n.isWebGL2;const r=new function(){let t=!1;const n=new w;let i=null;const r=new w(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,a,o,s){!0===s&&(t*=o,i*=o,a*=o),n.set(t,i,a,o),!1===r.equals(n)&&(e.clearColor(t,i,a,o),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},a=new function(){let t=!1,n=null,i=null,r=null;return{setTest:function(e){e?D(2929):z(2929)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);i=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,n=null,i=null,r=null}}},o=new function(){let t=!1,n=null,i=null,r=null,a=null,o=null,s=null,l=null,c=null;return{setTest:function(e){t||(e?D(2960):z(2960))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,o){i===t&&r===n&&a===o||(e.stencilFunc(t,n,o),i=t,r=n,a=o)},setOp:function(t,n,i){o===t&&s===n&&l===i||(e.stencilOp(t,n,i),o=t,s=n,l=i)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,n=null,i=null,r=null,a=null,o=null,s=null,l=null,c=null}}};let s={},l=null,c={},h=null,u=!1,d=null,p=null,f=null,m=null,g=null,P=null,G=null,v=!1,K=null,x=null,y=null,_=null,b=null;const N=e.getParameter(35661);let M=!1,S=0;const T=e.getParameter(7938);-1!==T.indexOf("WebGL")?(S=parseFloat(/^WebGL (\d)/.exec(T)[1]),M=S>=1):-1!==T.indexOf("OpenGL ES")&&(S=parseFloat(/^OpenGL ES (\d)/.exec(T)[1]),M=S>=2);let E=null,J={};const L=new w(0,0,e.canvas.width,e.canvas.height),R=new w(0,0,e.canvas.width,e.canvas.height);function A(t,n,i){const r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<i;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,r);return a}const C={};function D(t){!0!==s[t]&&(e.enable(t),s[t]=!0)}function z(t){!1!==s[t]&&(e.disable(t),s[t]=!1)}C[3553]=A(3553,3553,1),C[34067]=A(34067,34069,6),r.setClear(0,0,0,1),a.setClear(1),o.setClear(0),D(2929),a.setFunc(3),O(!1),H(1),D(2884),I(0);const k={100:32774,101:32778,102:32779};if(i)k[103]=32775,k[104]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(k[103]=e.MIN_EXT,k[104]=e.MAX_EXT)}const F={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function I(t,n,i,r,a,o,s,l){if(0!==t){if(!1===u&&(D(3042),u=!0),5===t)a=a||n,o=o||i,s=s||r,n===p&&a===g||(e.blendEquationSeparate(k[n],k[a]),p=n,g=a),i===f&&r===m&&o===P&&s===G||(e.blendFuncSeparate(F[i],F[r],F[o],F[s]),f=i,m=r,P=o,G=s),d=t,v=null;else if(t!==d||l!==v){if(100===p&&100===g||(e.blendEquation(32774),p=100,g=100),l)switch(t){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,0,769,771);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFunc(0,769);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}f=null,m=null,P=null,G=null,d=t,v=l}}else!0===u&&(z(3042),u=!1)}function O(t){K!==t&&(t?e.frontFace(2304):e.frontFace(2305),K=t)}function H(t){0!==t?(D(2884),t!==x&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):z(2884),x=t}function U(t,n,i){t?(D(32823),_===n&&b===i||(e.polygonOffset(n,i),_=n,b=i)):z(32823)}function B(t){void 0===t&&(t=33984+N-1),E!==t&&(e.activeTexture(t),E=t)}return{buffers:{color:r,depth:a,stencil:o},enable:D,disable:z,bindFramebuffer:function(t,n){null===n&&null!==l&&(n=l),c[t]!==n&&(e.bindFramebuffer(t,n),c[t]=n,i&&(36009===t&&(c[36160]=n),36160===t&&(c[36009]=n)))},bindXRFramebuffer:function(t){t!==l&&(e.bindFramebuffer(36160,t),l=t)},useProgram:function(t){return h!==t&&(e.useProgram(t),h=t,!0)},setBlending:I,setMaterial:function(e,t){2===e.side?z(2884):D(2884);let n=1===e.side;t&&(n=!n),O(n),1===e.blending&&!1===e.transparent?I(0):I(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),r.setMask(e.colorWrite);const i=e.stencilWrite;o.setTest(i),i&&(o.setMask(e.stencilWriteMask),o.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),o.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),U(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?D(32926):z(32926)},setFlipSided:O,setCullFace:H,setLineWidth:function(t){t!==y&&(M&&e.lineWidth(t),y=t)},setPolygonOffset:U,setScissorTest:function(e){e?D(3089):z(3089)},activeTexture:B,bindTexture:function(t,n){null===E&&B();let i=J[E];void 0===i&&(i={type:void 0,texture:void 0},J[E]=i),i.type===t&&i.texture===n||(e.bindTexture(t,n||C[t]),i.type=t,i.texture=n)},unbindTexture:function(){const t=J[E];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===L.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),L.copy(t))},viewport:function(t){!1===R.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),R.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===i&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),s={},E=null,J={},l=null,c={},h=null,u=!1,d=null,p=null,f=null,m=null,g=null,P=null,G=null,v=!1,K=null,x=null,y=null,_=null,b=null,L.set(0,0,e.canvas.width,e.canvas.height),R.set(0,0,e.canvas.width,e.canvas.height),r.reset(),a.reset(),o.reset()}}}function ir(e,t,n,i,r,a,o){const s=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,d=new WeakMap;let p,f=!1;try{f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function m(e,t){return f?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function G(e,t,n,i){let r=1;if((e.width>i||e.height>i)&&(r=i/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const i=t?P:Math.floor,a=i(r*e.width),o=i(r*e.height);void 0===p&&(p=m(a,o));const s=n?m(a,o):p;s.width=a,s.height=o;return s.getContext("2d").drawImage(e,0,0,a,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+o+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function v(e){return g(e.width)&&g(e.height)}function K(e,t){return e.generateMipmaps&&t&&1003!==e.minFilter&&1006!==e.minFilter}function x(t,n,r,a){e.generateMipmap(t);i.get(n).__maxMipLevel=Math.log2(Math.max(r,a))}function y(n,i,r){if(!1===s)return i;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let a=i;return 6403===i&&(5126===r&&(a=33326),5131===r&&(a=33325),5121===r&&(a=33321)),6407===i&&(5126===r&&(a=34837),5131===r&&(a=34843),5121===r&&(a=32849)),6408===i&&(5126===r&&(a=34836),5131===r&&(a=34842),5121===r&&(a=32856)),33325!==a&&33326!==a&&34842!==a&&34836!==a||t.get("EXT_color_buffer_float"),a}function _(e){return 1003===e||1004===e||1005===e?9728:9729}function b(t){const n=t.target;n.removeEventListener("dispose",b),function(t){const n=i.get(t);if(void 0===n.__webglInit)return;e.deleteTexture(n.__webglTexture),i.remove(t)}(n),n.isVideoTexture&&d.delete(n),o.memory.textures--}function w(t){const n=t.target;n.removeEventListener("dispose",w),function(t){const n=t.texture,r=i.get(t),a=i.get(n);if(!t)return;void 0!==a.__webglTexture&&e.deleteTexture(a.__webglTexture);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(r.__webglFramebuffer[t]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[t]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&e.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer);i.remove(n),i.remove(t)}(n),o.memory.textures--}let N=0;function M(e,t){const r=i.get(e);if(e.isVideoTexture&&function(e){const t=o.render.frame;d.get(e)!==t&&(d.set(e,t),e.update())}(e),e.version>0&&r.__version!==e.version){const n=e.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void R(r,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+t),n.bindTexture(3553,r.__webglTexture)}function S(t,r){const o=i.get(t);t.version>0&&o.__version!==t.version?function(t,i,r){if(6!==i.image.length)return;L(t,i),n.activeTexture(33984+r),n.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,i.flipY),e.pixelStorei(37441,i.premultiplyAlpha),e.pixelStorei(3317,i.unpackAlignment),e.pixelStorei(37443,0);const o=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),l=i.image[0]&&i.image[0].isDataTexture,h=[];for(let e=0;e<6;e++)h[e]=o||l?l?i.image[e].image:i.image[e]:G(i.image[e],!1,!0,c);const u=h[0],d=v(u)||s,p=a.convert(i.format),f=a.convert(i.type),m=y(i.internalFormat,p,f);let g;if(J(34067,i,d),o){for(let e=0;e<6;e++){g=h[e].mipmaps;for(let t=0;t<g.length;t++){const r=g[t];1023!==i.format&&1022!==i.format?null!==p?n.compressedTexImage2D(34069+e,t,m,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+e,t,m,r.width,r.height,0,p,f,r.data)}}t.__maxMipLevel=g.length-1}else{g=i.mipmaps;for(let e=0;e<6;e++)if(l){n.texImage2D(34069+e,0,m,h[e].width,h[e].height,0,p,f,h[e].data);for(let t=0;t<g.length;t++){const i=g[t].image[e].image;n.texImage2D(34069+e,t+1,m,i.width,i.height,0,p,f,i.data)}}else{n.texImage2D(34069+e,0,m,p,f,h[e]);for(let t=0;t<g.length;t++){const i=g[t];n.texImage2D(34069+e,t+1,m,p,f,i.image[e])}}t.__maxMipLevel=g.length}K(i,d)&&x(34067,i,u.width,u.height);t.__version=i.version,i.onUpdate&&i.onUpdate(i)}(o,t,r):(n.activeTexture(33984+r),n.bindTexture(34067,o.__webglTexture))}const T={1e3:10497,1001:33071,1002:33648},E={1003:9728,1004:9984,1005:9986,1006:9729,1007:9985,1008:9987};function J(n,a,o){if(o?(e.texParameteri(n,10242,T[a.wrapS]),e.texParameteri(n,10243,T[a.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,T[a.wrapR]),e.texParameteri(n,10240,E[a.magFilter]),e.texParameteri(n,10241,E[a.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),1001===a.wrapS&&1001===a.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,_(a.magFilter)),e.texParameteri(n,10241,_(a.minFilter)),1003!==a.minFilter&&1006!==a.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){const o=t.get("EXT_texture_filter_anisotropic");if(1015===a.type&&!1===t.has("OES_texture_float_linear"))return;if(!1===s&&1016===a.type&&!1===t.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(e.texParameterf(n,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}}function L(t,n){void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",b),t.__webglTexture=e.createTexture(),o.memory.textures++)}function R(t,i,r){let o=3553;i.isDataTexture2DArray&&(o=35866),i.isDataTexture3D&&(o=32879),L(t,i),n.activeTexture(33984+r),n.bindTexture(o,t.__webglTexture),e.pixelStorei(37440,i.flipY),e.pixelStorei(37441,i.premultiplyAlpha),e.pixelStorei(3317,i.unpackAlignment),e.pixelStorei(37443,0);const l=function(e){return!s&&(1001!==e.wrapS||1001!==e.wrapT||1003!==e.minFilter&&1006!==e.minFilter)}(i)&&!1===v(i.image),c=G(i.image,l,!1,h),u=v(c)||s,d=a.convert(i.format);let p,f=a.convert(i.type),m=y(i.internalFormat,d,f);J(o,i,u);const g=i.mipmaps;if(i.isDepthTexture)m=6402,s?m=1015===i.type?36012:1014===i.type?33190:1020===i.type?35056:33189:1015===i.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===i.format&&6402===m&&1012!==i.type&&1014!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=1012,f=a.convert(i.type)),1027===i.format&&6402===m&&(m=34041,1020!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=1020,f=a.convert(i.type))),n.texImage2D(3553,0,m,c.width,c.height,0,d,f,null);else if(i.isDataTexture)if(g.length>0&&u){for(let e=0,t=g.length;e<t;e++)p=g[e],n.texImage2D(3553,e,m,p.width,p.height,0,d,f,p.data);i.generateMipmaps=!1,t.__maxMipLevel=g.length-1}else n.texImage2D(3553,0,m,c.width,c.height,0,d,f,c.data),t.__maxMipLevel=0;else if(i.isCompressedTexture){for(let e=0,t=g.length;e<t;e++)p=g[e],1023!==i.format&&1022!==i.format?null!==d?n.compressedTexImage2D(3553,e,m,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,e,m,p.width,p.height,0,d,f,p.data);t.__maxMipLevel=g.length-1}else if(i.isDataTexture2DArray)n.texImage3D(35866,0,m,c.width,c.height,c.depth,0,d,f,c.data),t.__maxMipLevel=0;else if(i.isDataTexture3D)n.texImage3D(32879,0,m,c.width,c.height,c.depth,0,d,f,c.data),t.__maxMipLevel=0;else if(g.length>0&&u){for(let e=0,t=g.length;e<t;e++)p=g[e],n.texImage2D(3553,e,m,d,f,p);i.generateMipmaps=!1,t.__maxMipLevel=g.length-1}else n.texImage2D(3553,0,m,d,f,c),t.__maxMipLevel=0;K(i,u)&&x(o,i,c.width,c.height),t.__version=i.version,i.onUpdate&&i.onUpdate(i)}function A(t,r,o,s){const l=r.texture,c=a.convert(l.format),h=a.convert(l.type),u=y(l.internalFormat,c,h);32879===s||35866===s?n.texImage3D(s,0,u,r.width,r.height,r.depth,0,c,h,null):n.texImage2D(s,0,u,r.width,r.height,0,c,h,null),n.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,s,i.get(l).__webglTexture,0),n.bindFramebuffer(36160,null)}function C(t,n,i){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let r=33189;if(i){const t=n.depthTexture;t&&t.isDepthTexture&&(1015===t.type?r=36012:1014===t.type&&(r=33190));const i=z(n);e.renderbufferStorageMultisample(36161,i,r,n.width,n.height)}else e.renderbufferStorage(36161,r,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const t=z(n);e.renderbufferStorageMultisample(36161,t,35056,n.width,n.height)}else e.renderbufferStorage(36161,34041,n.width,n.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=n.texture,r=a.convert(t.format),o=a.convert(t.type),s=y(t.internalFormat,r,o);if(i){const t=z(n);e.renderbufferStorageMultisample(36161,t,s,n.width,n.height)}else e.renderbufferStorage(36161,s,n.width,n.height)}e.bindRenderbuffer(36161,null)}function D(t){const r=i.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),M(r.depthTexture,0);const a=i.get(r.depthTexture).__webglTexture;if(1026===r.depthTexture.format)e.framebufferTexture2D(36160,36096,3553,a,0);else{if(1027!==r.depthTexture.format)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,a,0)}}(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(36160,r.__webglFramebuffer[i]),r.__webglDepthbuffer[i]=e.createRenderbuffer(),C(r.__webglDepthbuffer[i],t,!1)}else n.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),C(r.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)}function z(e){return s&&e.isWebGLMultisampleRenderTarget?Math.min(u,e.samples):0}let k=!1,F=!1;this.allocateTextureUnit=function(){const e=N;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),N+=1,e},this.resetTextureUnits=function(){N=0},this.setTexture2D=M,this.setTexture2DArray=function(e,t){const r=i.get(e);e.version>0&&r.__version!==e.version?R(r,e,t):(n.activeTexture(33984+t),n.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(e,t){const r=i.get(e);e.version>0&&r.__version!==e.version?R(r,e,t):(n.activeTexture(33984+t),n.bindTexture(32879,r.__webglTexture))},this.setTextureCube=S,this.setupRenderTarget=function(t){const r=t.texture,l=i.get(t),c=i.get(r);t.addEventListener("dispose",w),c.__webglTexture=e.createTexture(),c.__version=r.version,o.memory.textures++;const h=!0===t.isWebGLCubeRenderTarget,u=!0===t.isWebGLMultisampleRenderTarget,d=r.isDataTexture3D||r.isDataTexture2DArray,p=v(t)||s;if(!s||1022!==r.format||1015!==r.type&&1016!==r.type||(r.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),h){l.__webglFramebuffer=[];for(let t=0;t<6;t++)l.__webglFramebuffer[t]=e.createFramebuffer()}else if(l.__webglFramebuffer=e.createFramebuffer(),u)if(s){l.__webglMultisampledFramebuffer=e.createFramebuffer(),l.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,l.__webglColorRenderbuffer);const i=a.convert(r.format),o=a.convert(r.type),s=y(r.internalFormat,i,o),c=z(t);e.renderbufferStorageMultisample(36161,c,s,t.width,t.height),n.bindFramebuffer(36160,l.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,l.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(l.__webglDepthRenderbuffer=e.createRenderbuffer(),C(l.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(h){n.bindTexture(34067,c.__webglTexture),J(34067,r,p);for(let e=0;e<6;e++)A(l.__webglFramebuffer[e],t,36064,34069+e);K(r,p)&&x(34067,r,t.width,t.height),n.bindTexture(34067,null)}else{let e=3553;if(d)if(s){e=r.isDataTexture3D?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");n.bindTexture(e,c.__webglTexture),J(e,r,p),A(l.__webglFramebuffer,t,36064,e),K(r,p)&&x(3553,r,t.width,t.height),n.bindTexture(3553,null)}t.depthBuffer&&D(t)},this.updateRenderTargetMipmap=function(e){const t=e.texture;if(K(t,v(e)||s)){const r=e.isWebGLCubeRenderTarget?34067:3553,a=i.get(t).__webglTexture;n.bindTexture(r,a),x(r,t,e.width,e.height),n.bindTexture(r,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(s){const r=t.width,a=t.height;let o=16384;t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024);const s=i.get(t);n.bindFramebuffer(36008,s.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,s.__webglFramebuffer),e.blitFramebuffer(0,0,r,a,0,0,r,a,o,9728),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,s.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===k&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),k=!0),e=e.texture),M(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===F&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),F=!0),e=e.texture),S(e,t)}}function rr(e,t,n){const i=n.isWebGL2;return{convert:function(e){let n;if(1009===e)return 5121;if(1017===e)return 32819;if(1018===e)return 32820;if(1019===e)return 33635;if(1010===e)return 5120;if(1011===e)return 5122;if(1012===e)return 5123;if(1013===e)return 5124;if(1014===e)return 5125;if(1015===e)return 5126;if(1016===e)return i?5131:(n=t.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(1021===e)return 6406;if(1022===e)return 6407;if(1023===e)return 6408;if(1024===e)return 6409;if(1025===e)return 6410;if(1026===e)return 6402;if(1027===e)return 34041;if(1028===e)return 6403;if(1029===e)return 36244;if(1030===e)return 33319;if(1031===e)return 33320;if(1032===e)return 36248;if(1033===e)return 36249;if(33776===e||33777===e||33778===e||33779===e){if(n=t.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(33776===e)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===e)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===e)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===e)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===e||35841===e||35842===e||35843===e){if(n=t.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(35840===e)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===e)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===e)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===e)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===e)return n=t.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===e||37496===e)&&(n=t.get("WEBGL_compressed_texture_etc"),null!==n)){if(37492===e)return n.COMPRESSED_RGB8_ETC2;if(37496===e)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===e||37809===e||37810===e||37811===e||37812===e||37813===e||37814===e||37815===e||37816===e||37817===e||37818===e||37819===e||37820===e||37821===e||37840===e||37841===e||37842===e||37843===e||37844===e||37845===e||37846===e||37847===e||37848===e||37849===e||37850===e||37851===e||37852===e||37853===e?(n=t.get("WEBGL_compressed_texture_astc"),null!==n?e:null):36492===e?(n=t.get("EXT_texture_compression_bptc"),null!==n?e:null):1020===e?i?34042:(n=t.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class ar extends Ht{constructor(e=[]){super(),this.cameras=e}}ar.prototype.isArrayCamera=!0;class or extends Ee{constructor(){super(),this.type="Group"}}or.prototype.isGroup=!0;const sr={type:"move"};class lr{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new or,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new or,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new S,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new S),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new or,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new S,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new S),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const o=this._targetRay,s=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==o&&(i=t.getPose(e.targetRaySpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(sr))),l&&e.hand){a=!0;for(const i of e.hand.values()){const e=t.getJointPose(i,n);if(void 0===l.joints[i.jointName]){const e=new or;e.matrixAutoUpdate=!1,e.visible=!1,l.joints[i.jointName]=e,l.add(e)}const r=l.joints[i.jointName];null!==e&&(r.matrix.fromArray(e.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=e.radius),r.visible=null!==e}const i=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],o=i.position.distanceTo(r.position),s=.02,c=.005;l.inputState.pinching&&o>s+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&o<=s-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==s&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1));return null!==o&&(o.visible=null!==i),null!==s&&(s.visible=null!==r),null!==l&&(l.visible=null!==a),this}}class cr extends c{constructor(e,t){super();const n=this,i=e.state;let r=null,a=1,o=null,s="local-floor",l=null;const c=[],h=new Map,u=new Ht;u.layers.enable(1),u.viewport=new w;const d=new Ht;d.layers.enable(2),d.viewport=new w;const p=[u,d],f=new ar;f.layers.enable(1),f.layers.enable(2);let m=null,g=null;function P(e){const t=h.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function G(){h.forEach((function(e,t){e.disconnect(t)})),h.clear(),m=null,g=null,i.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),b.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function v(e){const t=r.inputSources;for(let e=0;e<c.length;e++)h.set(t[e],c[e]);for(let t=0;t<e.removed.length;t++){const n=e.removed[t],i=h.get(n);i&&(i.dispatchEvent({type:"disconnected",data:n}),h.delete(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t],i=h.get(n);i&&i.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=c[e];return void 0===t&&(t=new lr,c[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=c[e];return void 0===t&&(t=new lr,c[e]=t),t.getGripSpace()},this.getHand=function(e){let t=c[e];return void 0===t&&(t=new lr,c[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){a=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return r},this.setSession=async function(e){if(r=e,null!==r){r.addEventListener("select",P),r.addEventListener("selectstart",P),r.addEventListener("selectend",P),r.addEventListener("squeeze",P),r.addEventListener("squeezestart",P),r.addEventListener("squeezeend",P),r.addEventListener("end",G),r.addEventListener("inputsourceschange",v);const e=t.getContextAttributes();!0!==e.xrCompatible&&await t.makeXRCompatible();const i={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:a},l=new XRWebGLLayer(r,t,i);r.updateRenderState({baseLayer:l}),o=await r.requestReferenceSpace(s),b.setContext(r),b.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const K=new S,x=new S;function y(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.getCamera=function(e){f.near=d.near=u.near=e.near,f.far=d.far=u.far=e.far,m===f.near&&g===f.far||(r.updateRenderState({depthNear:f.near,depthFar:f.far}),m=f.near,g=f.far);const t=e.parent,n=f.cameras;y(f,t);for(let e=0;e<n.length;e++)y(n[e],t);e.matrixWorld.copy(f.matrixWorld),e.matrix.copy(f.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);const i=e.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(!0);return 2===n.length?function(e,t,n){K.setFromMatrixPosition(t.matrixWorld),x.setFromMatrixPosition(n.matrixWorld);const i=K.distanceTo(x),r=t.projectionMatrix.elements,a=n.projectionMatrix.elements,o=r[14]/(r[10]-1),s=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(a[8]+1)/a[0],d=o*h,p=o*u,f=i/(-h+u),m=f*-h;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(f),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=o+f,P=s+f,G=d-m,v=p+(i-m),y=l*s/P*g,_=c*s/P*g;e.projectionMatrix.makePerspective(G,v,y,_,g,P)}(f,u,d):f.projectionMatrix.copy(u.projectionMatrix),f};let _=null;const b=new Yt;b.setAnimationLoop((function(e,t){if(l=t.getViewerPose(o),null!==l){const e=l.views,t=r.renderState.baseLayer;i.bindXRFramebuffer(t.framebuffer);let n=!1;e.length!==f.cameras.length&&(f.cameras.length=0,n=!0);for(let i=0;i<e.length;i++){const r=e[i],a=t.getViewport(r),o=p[i];o.matrix.fromArray(r.transform.matrix),o.projectionMatrix.fromArray(r.projectionMatrix),o.viewport.set(a.x,a.y,a.width,a.height),0===i&&f.matrix.copy(o.matrix),!0===n&&f.cameras.push(o)}}const n=r.inputSources;for(let e=0;e<c.length;e++){const i=c[e],r=n[e];i.update(r,t,o)}_&&_(e,t)})),this.setAnimationLoop=function(e){_=e},this.dispose=function(){}}}function hr(e){function t(t,n){t.opacity.value=n.opacity,n.color&&t.diffuse.value.copy(n.color),n.emissive&&t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(t.map.value=n.map),n.alphaMap&&(t.alphaMap.value=n.alphaMap),n.specularMap&&(t.specularMap.value=n.specularMap);const i=e.get(n).envMap;if(i){t.envMap.value=i,t.flipEnvMap.value=i.isCubeTexture&&i._needsFlipEnvMap?-1:1,t.reflectivity.value=n.reflectivity,t.refractionRatio.value=n.refractionRatio;const r=e.get(i).__maxMipLevel;void 0!==r&&(t.maxMipLevel.value=r)}let r,a;n.lightMap&&(t.lightMap.value=n.lightMap,t.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(t.aoMap.value=n.aoMap,t.aoMapIntensity.value=n.aoMapIntensity),n.map?r=n.map:n.specularMap?r=n.specularMap:n.displacementMap?r=n.displacementMap:n.normalMap?r=n.normalMap:n.bumpMap?r=n.bumpMap:n.roughnessMap?r=n.roughnessMap:n.metalnessMap?r=n.metalnessMap:n.alphaMap?r=n.alphaMap:n.emissiveMap?r=n.emissiveMap:n.clearcoatMap?r=n.clearcoatMap:n.clearcoatNormalMap?r=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(r=n.clearcoatRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix)),n.aoMap?a=n.aoMap:n.lightMap&&(a=n.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),t.uv2Transform.value.copy(a.matrix))}function n(t,n){t.roughness.value=n.roughness,t.metalness.value=n.metalness,n.roughnessMap&&(t.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(t.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(t.emissiveMap.value=n.emissiveMap),n.bumpMap&&(t.bumpMap.value=n.bumpMap,t.bumpScale.value=n.bumpScale,1===n.side&&(t.bumpScale.value*=-1)),n.normalMap&&(t.normalMap.value=n.normalMap,t.normalScale.value.copy(n.normalScale),1===n.side&&t.normalScale.value.negate()),n.displacementMap&&(t.displacementMap.value=n.displacementMap,t.displacementScale.value=n.displacementScale,t.displacementBias.value=n.displacementBias);e.get(n).envMap&&(t.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,i,r,a){i.isMeshBasicMaterial?t(e,i):i.isMeshLambertMaterial?(t(e,i),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,i)):i.isMeshToonMaterial?(t(e,i),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isMeshPhongMaterial?(t(e,i),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isMeshStandardMaterial?(t(e,i),i.isMeshPhysicalMaterial?function(e,t){n(e,t),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen);t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap);t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap);t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate());e.transmission.value=t.transmission,t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap)}(e,i):n(e,i)):i.isMeshMatcapMaterial?(t(e,i),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isMeshDepthMaterial?(t(e,i),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isMeshDistanceMaterial?(t(e,i),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,i)):i.isMeshNormalMaterial?(t(e,i),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,i),i.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,i)):i.isPointsMaterial?function(e,t,n,i){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*i,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}(e,i,r,a):i.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let n;t.map?n=t.map:t.alphaMap&&(n=t.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,i):i.isShadowMaterial?(e.color.value.copy(i.color),e.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function ur(e){const t=void 0!==(e=e||{}).canvas?e.canvas:function(){const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}(),n=void 0!==e.context?e.context:null,i=void 0!==e.alpha&&e.alpha,r=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,o=void 0!==e.antialias&&e.antialias,s=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,c=void 0!==e.powerPreference?e.powerPreference:"default",h=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let u=null,d=null;const p=[],f=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const m=this;let g=!1,P=0,v=0,K=null,x=-1,y=null;const _=new w,b=new w;let N=null,M=t.width,T=t.height,E=1,J=null,L=null;const R=new w(0,0,M,T),A=new w(0,0,M,T);let C=!1;const D=new Xt;let z=!1,k=!1;const F=new ae,I=new S,O={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function H(){return null===K?E:1}let U,B,W,V,j,q,X,Y,Z,Q,$,ee,te,ne,ie,re,oe,se,le,ce,he,ue,de=n;function pe(e,n){for(let i=0;i<e.length;i++){const r=e[i],a=t.getContext(r,n);if(null!==a)return a}return null}try{const e={alpha:i,depth:r,stencil:a,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if(t.addEventListener("webglcontextlost",ge,!1),t.addEventListener("webglcontextrestored",Pe,!1),null===de){const t=["webgl2","webgl","experimental-webgl"];if(!0===m.isWebGL1Renderer&&t.shift(),de=pe(t,e),null===de)throw pe(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===de.getShaderPrecisionFormat&&(de.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function fe(){U=new cn(de),B=new on(de,U,e),U.init(B),he=new rr(de,U,B),W=new nr(de,U,B),V=new dn(de),j=new Hi,q=new ir(de,U,W,j,B,he,V),X=new ln(m),Y=new Zt(de,B),ue=new rn(de,U,Y,B),Z=new hn(de,Y,V,ue),Q=new gn(de,Z,Y,V),se=new mn(de),ie=new sn(j),$=new Oi(m,X,U,B,ue,ie),ee=new hr(j),te=new Vi(j),ne=new Qi(U,B),oe=new nn(m,X,W,Q,s),re=new tr(m,Q,B),le=new an(de,U,V,B),ce=new un(de,U,V,B),V.programs=$.programs,m.capabilities=B,m.extensions=U,m.properties=j,m.renderLists=te,m.shadowMap=re,m.state=W,m.info=V}fe();const me=new cr(m,de);function ge(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function Pe(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const e=V.autoReset,t=re.enabled,n=re.autoUpdate,i=re.needsUpdate,r=re.type;fe(),V.autoReset=e,re.enabled=t,re.autoUpdate=n,re.needsUpdate=i,re.type=r}function Ge(e){const t=e.target;t.removeEventListener("dispose",Ge),function(e){(function(e){const t=j.get(e).programs;void 0!==t&&t.forEach((function(e){$.releaseProgram(e)}))})(e),j.remove(e)}(t)}this.xr=me,this.getContext=function(){return de},this.getContextAttributes=function(){return de.getContextAttributes()},this.forceContextLoss=function(){const e=U.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=U.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return E},this.setPixelRatio=function(e){void 0!==e&&(E=e,this.setSize(M,T,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new G),e.set(M,T)},this.setSize=function(e,n,i){me.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(M=e,T=n,t.width=Math.floor(e*E),t.height=Math.floor(n*E),!1!==i&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new G),e.set(M*E,T*E).floor()},this.setDrawingBufferSize=function(e,n,i){M=e,T=n,E=i,t.width=Math.floor(e*i),t.height=Math.floor(n*i),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new w),e.copy(_)},this.getViewport=function(e){return e.copy(R)},this.setViewport=function(e,t,n,i){e.isVector4?R.set(e.x,e.y,e.z,e.w):R.set(e,t,n,i),W.viewport(_.copy(R).multiplyScalar(E).floor())},this.getScissor=function(e){return e.copy(A)},this.setScissor=function(e,t,n,i){e.isVector4?A.set(e.x,e.y,e.z,e.w):A.set(e,t,n,i),W.scissor(b.copy(A).multiplyScalar(E).floor())},this.getScissorTest=function(){return C},this.setScissorTest=function(e){W.setScissorTest(C=e)},this.setOpaqueSort=function(e){J=e},this.setTransparentSort=function(e){L=e},this.getClearColor=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),e=new et),e.copy(oe.getClearColor())},this.setClearColor=function(){oe.setClearColor.apply(oe,arguments)},this.getClearAlpha=function(){return oe.getClearAlpha()},this.setClearAlpha=function(){oe.setClearAlpha.apply(oe,arguments)},this.clear=function(e,t,n){let i=0;(void 0===e||e)&&(i|=16384),(void 0===t||t)&&(i|=256),(void 0===n||n)&&(i|=1024),de.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ge,!1),t.removeEventListener("webglcontextrestored",Pe,!1),te.dispose(),ne.dispose(),j.dispose(),X.dispose(),Q.dispose(),ue.dispose(),me.dispose(),me.removeEventListener("sessionstart",Ke),me.removeEventListener("sessionend",xe),ye.stop()},this.renderBufferImmediate=function(e,t){ue.initAttributes();const n=j.get(e);e.hasPositions&&!n.position&&(n.position=de.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=de.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=de.createBuffer()),e.hasColors&&!n.color&&(n.color=de.createBuffer());const i=t.getAttributes();e.hasPositions&&(de.bindBuffer(34962,n.position),de.bufferData(34962,e.positionArray,35048),ue.enableAttribute(i.position),de.vertexAttribPointer(i.position,3,5126,!1,0,0)),e.hasNormals&&(de.bindBuffer(34962,n.normal),de.bufferData(34962,e.normalArray,35048),ue.enableAttribute(i.normal),de.vertexAttribPointer(i.normal,3,5126,!1,0,0)),e.hasUvs&&(de.bindBuffer(34962,n.uv),de.bufferData(34962,e.uvArray,35048),ue.enableAttribute(i.uv),de.vertexAttribPointer(i.uv,2,5126,!1,0,0)),e.hasColors&&(de.bindBuffer(34962,n.color),de.bufferData(34962,e.colorArray,35048),ue.enableAttribute(i.color),de.vertexAttribPointer(i.color,3,5126,!1,0,0)),ue.disableUnusedAttributes(),de.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,i,r,a){null===t&&(t=O);const o=r.isMesh&&r.matrixWorld.determinant()<0,s=Se(e,t,i,r);W.setMaterial(i,o);let l=n.index;const c=n.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let h,u=1;!0===i.wireframe&&(l=Z.getWireframeAttribute(n),u=2),(i.morphTargets||i.morphNormals)&&se.update(r,n,i,s),ue.setup(r,i,s,n,l);let d=le;null!==l&&(h=Y.get(l),d=ce,d.setIndex(h));const p=null!==l?l.count:c.count,f=n.drawRange.start*u,m=n.drawRange.count*u,g=null!==a?a.start*u:0,P=null!==a?a.count*u:1/0,G=Math.max(f,g),v=Math.min(p,f+m,g+P)-1,K=Math.max(0,v-G+1);if(0!==K){if(r.isMesh)!0===i.wireframe?(W.setLineWidth(i.wireframeLinewidth*H()),d.setMode(1)):d.setMode(4);else if(r.isLine){let e=i.linewidth;void 0===e&&(e=1),W.setLineWidth(e*H()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(G,K,r.count);else if(n.isInstancedBufferGeometry){const e=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(G,K,e)}else d.render(G,K)}},this.compile=function(e,t){d=ne.get(e),d.init(),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))})),d.setupLights(),e.traverse((function(t){const n=t.material;if(n)if(Array.isArray(n))for(let i=0;i<n.length;i++){Ne(n[i],e,t)}else Ne(n,e,t)}))};let ve=null;function Ke(){ye.stop()}function xe(){ye.start()}const ye=new Yt;function _e(e,t,n,i){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)d.pushLight(e),e.castShadow&&d.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||D.intersectsSprite(e)){i&&I.setFromMatrixPosition(e.matrixWorld).applyMatrix4(F);const t=Q.update(e),r=e.material;r.visible&&u.push(e,t,r,n,I.z,null)}}else if(e.isImmediateRenderObject)i&&I.setFromMatrixPosition(e.matrixWorld).applyMatrix4(F),u.push(e,null,e.material,n,I.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==V.render.frame&&(e.skeleton.update(),e.skeleton.frame=V.render.frame),!e.frustumCulled||D.intersectsObject(e))){i&&I.setFromMatrixPosition(e.matrixWorld).applyMatrix4(F);const t=Q.update(e),r=e.material;if(Array.isArray(r)){const i=t.groups;for(let a=0,o=i.length;a<o;a++){const o=i[a],s=r[o.materialIndex];s&&s.visible&&u.push(e,t,s,n,I.z,o)}}else r.visible&&u.push(e,t,r,n,I.z,null)}const r=e.children;for(let e=0,a=r.length;e<a;e++)_e(r[e],t,n,i)}function be(e,t,n){const i=!0===t.isScene?t.overrideMaterial:null;for(let r=0,a=e.length;r<a;r++){const a=e[r],o=a.object,s=a.geometry,l=null===i?a.material:i,c=a.group;if(n.isArrayCamera){const e=n.cameras;for(let n=0,i=e.length;n<i;n++){const i=e[n];o.layers.test(i.layers)&&(W.viewport(_.copy(i.viewport)),d.setupLightsView(i),we(o,t,i,s,l,c))}}else we(o,t,n,s,l,c)}}function we(e,t,n,i,r,a){if(e.onBeforeRender(m,t,n,i,r,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const i=Se(n,t,r,e);W.setMaterial(r),ue.reset(),function(e,t){e.render((function(e){m.renderBufferImmediate(e,t)}))}(e,i)}else m.renderBufferDirect(n,t,i,r,e,a);e.onAfterRender(m,t,n,i,r,a)}function Ne(e,t,n){!0!==t.isScene&&(t=O);const i=j.get(e),r=d.state.lights,a=d.state.shadowsArray,o=r.state.version,s=$.getParameters(e,r.state,a,t,n),l=$.getProgramCacheKey(s);let c=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=X.get(e.envMap||i.environment),void 0===c&&(e.addEventListener("dispose",Ge),c=new Map,i.programs=c);let h=c.get(l);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===o)return Me(e,s),h}else s.uniforms=$.getUniforms(e),e.onBuild(s,m),e.onBeforeCompile(s,m),h=$.acquireProgram(s,l),c.set(l,h),i.uniforms=s.uniforms;const u=i.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(u.clippingPlanes=ie.uniform),Me(e,s),i.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),i.lightsStateVersion=o,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotShadowMatrix.value=r.state.spotShadowMatrix,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const p=h.getUniforms(),f=Ki.seqWithValue(p.seq,u);return i.currentProgram=h,i.uniformsList=f,h}function Me(e,t){const n=j.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas}function Se(e,t,n,i){!0!==t.isScene&&(t=O),q.resetTextureUnits();const r=t.fog,a=n.isMeshStandardMaterial?t.environment:null,o=null===K?m.outputEncoding:K.texture.encoding,s=X.get(n.envMap||a),l=!0===n.vertexColors&&i.geometry&&i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,c=j.get(n),h=d.state.lights;if(!0===z&&(!0===k||e!==y)){const t=e===y&&n.id===x;ie.setState(n,e,t)}let u=!1;n.version===c.__version?c.needsLights&&c.lightsStateVersion!==h.state.version||c.outputEncoding!==o||i.isInstancedMesh&&!1===c.instancing?u=!0:i.isInstancedMesh||!0!==c.instancing?c.envMap!==s||n.fog&&c.fog!==r?u=!0:void 0===c.numClippingPlanes||c.numClippingPlanes===ie.numPlanes&&c.numIntersection===ie.numIntersection?c.vertexAlphas!==l&&(u=!0):u=!0:u=!0:(u=!0,c.__version=n.version);let p=c.currentProgram;!0===u&&(p=Ne(n,t,i));let f=!1,g=!1,P=!1;const G=p.getUniforms(),v=c.uniforms;if(W.useProgram(p.program)&&(f=!0,g=!0,P=!0),n.id!==x&&(x=n.id,g=!0),f||y!==e){if(G.setValue(de,"projectionMatrix",e.projectionMatrix),B.logarithmicDepthBuffer&&G.setValue(de,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),y!==e&&(y=e,g=!0,P=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const t=G.map.cameraPosition;void 0!==t&&t.setValue(de,I.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&G.setValue(de,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&G.setValue(de,"viewMatrix",e.matrixWorldInverse)}if(n.skinning){G.setOptional(de,i,"bindMatrix"),G.setOptional(de,i,"bindMatrixInverse");const e=i.skeleton;if(e){const t=e.bones;if(B.floatVertexTextures){if(null===e.boneTexture){let n=Math.sqrt(4*t.length);_=n,n=Math.pow(2,Math.ceil(Math.log(_)/Math.LN2)),n=Math.max(n,4);const i=new Float32Array(n*n*4);i.set(e.boneMatrices);const r=new Vt(i,n,n,1023,1015);e.boneMatrices=i,e.boneTexture=r,e.boneTextureSize=n}G.setValue(de,"boneTexture",e.boneTexture,q),G.setValue(de,"boneTextureSize",e.boneTextureSize)}else G.setOptional(de,e,"boneMatrices")}}var _;return(g||c.receiveShadow!==i.receiveShadow)&&(c.receiveShadow=i.receiveShadow,G.setValue(de,"receiveShadow",i.receiveShadow)),g&&(G.setValue(de,"toneMappingExposure",m.toneMappingExposure),c.needsLights&&function(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}(v,P),r&&n.fog&&ee.refreshFogUniforms(v,r),ee.refreshMaterialUniforms(v,n,E,T),Ki.upload(de,c.uniformsList,v,q)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Ki.upload(de,c.uniformsList,v,q),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&G.setValue(de,"center",i.center),G.setValue(de,"modelViewMatrix",i.modelViewMatrix),G.setValue(de,"normalMatrix",i.normalMatrix),G.setValue(de,"modelMatrix",i.matrixWorld),p}ye.setAnimationLoop((function(e){ve&&ve(e)})),"undefined"!=typeof window&&ye.setContext(window),this.setAnimationLoop=function(e){ve=e,me.setAnimationLoop(e),null===e?ye.stop():ye.start()},me.addEventListener("sessionstart",Ke),me.addEventListener("sessionend",xe),this.render=function(e,t){let n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===g)return;!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===me.enabled&&!0===me.isPresenting&&(t=me.getCamera(t)),!0===e.isScene&&e.onBeforeRender(m,e,t,n||K),d=ne.get(e,f.length),d.init(),f.push(d),F.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),D.setFromProjectionMatrix(F),k=this.localClippingEnabled,z=ie.init(this.clippingPlanes,k,t),u=te.get(e,p.length),u.init(),p.push(u),_e(e,t,0,m.sortObjects),u.finish(),!0===m.sortObjects&&u.sort(J,L),!0===z&&ie.beginShadows();const r=d.state.shadowsArray;re.render(r,e,t),d.setupLights(),d.setupLightsView(t),!0===z&&ie.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),oe.render(u,e,t,i);const a=u.opaque,o=u.transparent;a.length>0&&be(a,e,t),o.length>0&&be(o,e,t),null!==K&&(q.updateRenderTargetMipmap(K),q.updateMultisampleRenderTarget(K)),!0===e.isScene&&e.onAfterRender(m,e,t),W.buffers.depth.setTest(!0),W.buffers.depth.setMask(!0),W.buffers.color.setMask(!0),W.setPolygonOffset(!1),ue.resetDefaultState(),x=-1,y=null,f.pop(),d=f.length>0?f[f.length-1]:null,p.pop(),u=p.length>0?p[p.length-1]:null},this.getActiveCubeFace=function(){return P},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return K},this.setRenderTarget=function(e,t=0,n=0){K=e,P=t,v=n,e&&void 0===j.get(e).__webglFramebuffer&&q.setupRenderTarget(e);let i=null,r=!1,a=!1;if(e){const n=e.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(a=!0);const o=j.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(i=o[t],r=!0):i=e.isWebGLMultisampleRenderTarget?j.get(e).__webglMultisampledFramebuffer:o,_.copy(e.viewport),b.copy(e.scissor),N=e.scissorTest}else _.copy(R).multiplyScalar(E).floor(),b.copy(A).multiplyScalar(E).floor(),N=C;if(W.bindFramebuffer(36160,i),W.viewport(_),W.scissor(b),W.setScissorTest(N),r){const i=j.get(e.texture);de.framebufferTexture2D(36160,36064,34069+t,i.__webglTexture,n)}else if(a){const i=j.get(e.texture),r=t||0;de.framebufferTextureLayer(36160,36064,i.__webglTexture,n||0,r)}},this.readRenderTargetPixels=function(e,t,n,i,r,a,o){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=j.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){W.bindFramebuffer(36160,s);try{const o=e.texture,s=o.format,l=o.type;if(1023!==s&&he.convert(s)!==de.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=1016===l&&(U.has("EXT_color_buffer_half_float")||B.isWebGL2&&U.has("EXT_color_buffer_float"));if(!(1009===l||he.convert(l)===de.getParameter(35738)||1015===l&&(B.isWebGL2||U.has("OES_texture_float")||U.has("WEBGL_color_buffer_float"))||c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===de.checkFramebufferStatus(36160)?t>=0&&t<=e.width-i&&n>=0&&n<=e.height-r&&de.readPixels(t,n,i,r,he.convert(s),he.convert(l),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const e=null!==K?j.get(K).__webglFramebuffer:null;W.bindFramebuffer(36160,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){const i=Math.pow(2,-n),r=Math.floor(t.image.width*i),a=Math.floor(t.image.height*i),o=he.convert(t.format);q.setTexture2D(t,0),de.copyTexImage2D(3553,n,o,e.x,e.y,r,a,0),W.unbindTexture()},this.copyTextureToTexture=function(e,t,n,i=0){const r=t.image.width,a=t.image.height,o=he.convert(n.format),s=he.convert(n.type);q.setTexture2D(n,0),de.pixelStorei(37440,n.flipY),de.pixelStorei(37441,n.premultiplyAlpha),de.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?de.texSubImage2D(3553,i,e.x,e.y,r,a,o,s,t.image.data):t.isCompressedTexture?de.compressedTexSubImage2D(3553,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):de.texSubImage2D(3553,i,e.x,e.y,o,s,t.image),0===i&&n.generateMipmaps&&de.generateMipmap(3553),W.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,i,r=0){if(m.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:a,height:o,data:s}=n.image,l=he.convert(i.format),c=he.convert(i.type);let h;if(i.isDataTexture3D)q.setTexture3D(i,0),h=32879;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");q.setTexture2DArray(i,0),h=35866}de.pixelStorei(37440,i.flipY),de.pixelStorei(37441,i.premultiplyAlpha),de.pixelStorei(3317,i.unpackAlignment);const u=de.getParameter(3314),d=de.getParameter(32878),p=de.getParameter(3316),f=de.getParameter(3315),g=de.getParameter(32877);de.pixelStorei(3314,a),de.pixelStorei(32878,o),de.pixelStorei(3316,e.min.x),de.pixelStorei(3315,e.min.y),de.pixelStorei(32877,e.min.z),de.texSubImage3D(h,r,t.x,t.y,t.z,e.max.x-e.min.x+1,e.max.y-e.min.y+1,e.max.z-e.min.z+1,l,c,s),de.pixelStorei(3314,u),de.pixelStorei(32878,d),de.pixelStorei(3316,p),de.pixelStorei(3315,f),de.pixelStorei(32877,g),0===r&&i.generateMipmaps&&de.generateMipmap(h),W.unbindTexture()},this.initTexture=function(e){q.setTexture2D(e,0),W.unbindTexture()},this.resetState=function(){P=0,v=0,K=null,W.reset(),ue.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class dr extends Ee{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}dr.prototype.isScene=!0;class pr extends je{constructor(e){super(),this.type="LineBasicMaterial",this.color=new et(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this}}pr.prototype.isLineBasicMaterial=!0;const fr=new S,mr=new S,gr=new ae,Pr=new re,Gr=new Y;class vr extends Ee{constructor(e=new gt,t=new pr){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,i=t.count;e<i;e++)fr.fromBufferAttribute(t,e-1),mr.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=fr.distanceTo(mr);e.setAttribute("lineDistance",new st(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Gr.copy(n.boundingSphere),Gr.applyMatrix4(i),Gr.radius+=r,!1===e.ray.intersectsSphere(Gr))return;gr.copy(i).invert(),Pr.copy(e.ray).applyMatrix4(gr);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,l=new S,c=new S,h=new S,u=new S,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,r=n.attributes.position;if(null!==i){for(let n=Math.max(0,a.start),o=Math.min(i.count,a.start+a.count)-1;n<o;n+=d){const a=i.getX(n),o=i.getX(n+1);l.fromBufferAttribute(r,a),c.fromBufferAttribute(r,o);if(Pr.distanceSqToSegment(l,c,u,h)>s)continue;u.applyMatrix4(this.matrixWorld);const d=e.ray.origin.distanceTo(u);d<e.near||d>e.far||t.push({distance:d,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else{for(let n=Math.max(0,a.start),i=Math.min(r.count,a.start+a.count)-1;n<i;n+=d){l.fromBufferAttribute(r,n),c.fromBufferAttribute(r,n+1);if(Pr.distanceSqToSegment(l,c,u,h)>s)continue;u.applyMatrix4(this.matrixWorld);const i=e.ray.origin.distanceTo(u);i<e.near||i>e.far||t.push({distance:i,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}vr.prototype.isLine=!0;const Kr=new S,xr=new S;class yr extends vr{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,i=t.count;e<i;e+=2)Kr.fromBufferAttribute(t,e),xr.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+Kr.distanceTo(xr);e.setAttribute("lineDistance",new st(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}yr.prototype.isLineSegments=!0;class _r extends je{constructor(e){super(),this.type="PointsMaterial",this.color=new et(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this}}_r.prototype.isPointsMaterial=!0;const br=new ae,wr=new re,Nr=new Y,Mr=new S;class Sr extends Ee{constructor(e=new gt,t=new _r){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Nr.copy(n.boundingSphere),Nr.applyMatrix4(i),Nr.radius+=r,!1===e.ray.intersectsSphere(Nr))return;br.copy(i).invert(),wr.copy(e.ray).applyMatrix4(br);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o;if(n.isBufferGeometry){const r=n.index,o=n.attributes.position;if(null!==r){for(let n=Math.max(0,a.start),l=Math.min(r.count,a.start+a.count);n<l;n++){const a=r.getX(n);Mr.fromBufferAttribute(o,a),Tr(Mr,a,s,i,e,t,this)}}else{for(let n=Math.max(0,a.start),r=Math.min(o.count,a.start+a.count);n<r;n++)Mr.fromBufferAttribute(o,n),Tr(Mr,n,s,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function Tr(e,t,n,i,r,a,o){const s=wr.distanceSqToPoint(e);if(s<n){const n=new S;wr.closestPointToPoint(e,n),n.applyMatrix4(i);const l=r.ray.origin.distanceTo(n);if(l<r.near||l>r.far)return;a.push({distance:l,distanceToRay:Math.sqrt(s),point:n,index:t,face:null,object:o})}}Sr.prototype.isPoints=!0;class Er extends It{constructor(e){super(e),this.type="RawShaderMaterial"}}Er.prototype.isRawShaderMaterial=!0;class Jr extends je{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new et(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new et(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this.vertexTangents=e.vertexTangents,this}}Jr.prototype.isMeshStandardMaterial=!0;class Lr extends Jr{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new G(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=f(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new et).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this}}Lr.prototype.isMeshPhysicalMaterial=!0;class Rr extends je{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new et(16777215),this.specular=new et(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new et(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}Rr.prototype.isMeshPhongMaterial=!0;const Ar={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class Cr{constructor(e,t,n){const i=this;let r=!1,a=0,o=0,s=void 0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===r&&void 0!==i.onStart&&i.onStart(e,a,o),r=!0},this.itemEnd=function(e){a++,void 0!==i.onProgress&&i.onProgress(e,a,o),a===o&&(r=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(e){void 0!==i.onError&&i.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){const n=l[t],i=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return i}return null}}}const Dr=new Cr;class zr{constructor(e){this.manager=void 0!==e?e:Dr,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise((function(i,r){n.load(e,i,t,r)}))}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const kr={};class Fr extends zr{constructor(e){super(e)}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=Ar.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout((function(){t&&t(a),r.manager.itemEnd(e)}),0),a;if(void 0!==kr[e])return void kr[e].push({onLoad:t,onProgress:n,onError:i});const o=e.match(/^data:(.*?)(;base64)?,(.*)$/);let s;if(o){const n=o[1],a=!!o[2];let s=o[3];s=decodeURIComponent(s),a&&(s=atob(s));try{let i;const a=(this.responseType||"").toLowerCase();switch(a){case"arraybuffer":case"blob":const e=new Uint8Array(s.length);for(let t=0;t<s.length;t++)e[t]=s.charCodeAt(t);i="blob"===a?new Blob([e.buffer],{type:n}):e.buffer;break;case"document":const t=new DOMParser;i=t.parseFromString(s,n);break;case"json":i=JSON.parse(s);break;default:i=s}setTimeout((function(){t&&t(i),r.manager.itemEnd(e)}),0)}catch(t){setTimeout((function(){i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)}),0)}}else{kr[e]=[],kr[e].push({onLoad:t,onProgress:n,onError:i}),s=new XMLHttpRequest,s.open("GET",e,!0),s.addEventListener("load",(function(t){const n=this.response,i=kr[e];if(delete kr[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Ar.add(e,n);for(let e=0,t=i.length;e<t;e++){const t=i[e];t.onLoad&&t.onLoad(n)}r.manager.itemEnd(e)}else{for(let e=0,n=i.length;e<n;e++){const n=i[e];n.onError&&n.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}}),!1),s.addEventListener("progress",(function(t){const n=kr[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onProgress&&i.onProgress(t)}}),!1),s.addEventListener("error",(function(t){const n=kr[e];delete kr[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onError&&i.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}),!1),s.addEventListener("abort",(function(t){const n=kr[e];delete kr[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onError&&i.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}),!1),void 0!==this.responseType&&(s.responseType=this.responseType),void 0!==this.withCredentials&&(s.withCredentials=this.withCredentials),s.overrideMimeType&&s.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const e in this.requestHeader)s.setRequestHeader(e,this.requestHeader[e]);s.send(null)}return r.manager.itemStart(e),s}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Ir extends zr{constructor(e){super(e)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=Ar.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout((function(){t&&t(a),r.manager.itemEnd(e)}),0),a;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){o.removeEventListener("load",s,!1),o.removeEventListener("error",l,!1),Ar.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){o.removeEventListener("load",s,!1),o.removeEventListener("error",l,!1),i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)}return o.addEventListener("load",s,!1),o.addEventListener("error",l,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}}class Or extends zr{constructor(e){super(e)}load(e,t,n,i){const r=new Bt,a=new Ir(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function s(n){a.load(e[n],(function(e){r.images[n]=e,o++,6===o&&(r.needsUpdate=!0,t&&t(r))}),void 0,i)}for(let t=0;t<e.length;++t)s(t);return r}}class Hr extends zr{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Vt,o=new Fr(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,(function(e){const n=r.parse(e);n&&(void 0!==n.image?a.image=n.image:void 0!==n.data&&(a.image.width=n.width,a.image.height=n.height,a.image.data=n.data),a.wrapS=void 0!==n.wrapS?n.wrapS:1001,a.wrapT=void 0!==n.wrapT?n.wrapT:1001,a.magFilter=void 0!==n.magFilter?n.magFilter:1006,a.minFilter=void 0!==n.minFilter?n.minFilter:1006,a.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(a.encoding=n.encoding),void 0!==n.flipY&&(a.flipY=n.flipY),void 0!==n.format&&(a.format=n.format),void 0!==n.type&&(a.type=n.type),void 0!==n.mipmaps&&(a.mipmaps=n.mipmaps,a.minFilter=1008),1===n.mipmapCount&&(a.minFilter=1006),void 0!==n.generateMipmaps&&(a.generateMipmaps=n.generateMipmaps),a.needsUpdate=!0,t&&t(a,n))}),n,i),a}}class Ur extends zr{constructor(e){super(e)}load(e,t,n,i){const r=new _,a=new Ir(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,(function(n){r.image=n;const i=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);r.format=i?1022:1023,r.needsUpdate=!0,void 0!==t&&t(r)}),n,i),r}}class Br extends Ee{constructor(e,t=1){super(),this.type="Light",this.color=new et(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}Br.prototype.isLight=!0;class Wr extends Ot{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,o=i+t,s=i-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,a=r+e*this.view.width,o-=t*this.view.offsetY,s=o-t*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,s,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}Wr.prototype.isOrthographicCamera=!0;class Vr extends Br{constructor(e,t){super(e,t),this.type="AmbientLight"}}Vr.prototype.isAmbientLight=!0;const jr="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]";/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),/(WCOD+)?/.source.replace("WCOD",jr),/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]");class qr{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(f(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}const Xr=new Float32Array(1),Yr=new Int32Array(Xr.buffer);class Zr{static toHalfFloat(e){Xr[0]=e;const t=Yr[0];let n=t>>16&32768,i=t>>12&2047;const r=t>>23&255;return r<103?n:r>142?(n|=31744,n|=(255==r?0:1)&&8388607&t,n):r<113?(i|=2048,n|=(i>>114-r)+(i>>113-r&1),n):(n|=r-112<<10|i>>1,n+=1&i,n)}}const Qr=Math.pow(2,8),$r=[.125,.215,.35,.446,.526,.582],ea=5+$r.length,ta={3e3:0,3001:1,3002:2,3004:3,3005:4,3006:5,3007:6},na=new tt({side:1,depthWrite:!1,depthTest:!1}),ia=new At(new Dt,na),ra=new Wr,{_lodPlanes:aa,_sizeLods:oa,_sigmas:sa}=ma(),la=new et;let ca=null;const ha=(1+Math.sqrt(5))/2,ua=1/ha,da=[new S(1,1,1),new S(-1,1,1),new S(1,1,-1),new S(-1,1,-1),new S(0,ha,ua),new S(0,ha,-ua),new S(ua,0,ha),new S(-ua,0,ha),new S(ha,ua,0),new S(-ha,ua,0)];function pa(e){const t=Math.max(e.r,e.g,e.b),n=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);e.multiplyScalar(Math.pow(2,-n));return(n+128)/255}function fa(e){return void 0!==e&&1009===e.type&&(3e3===e.encoding||3001===e.encoding||3007===e.encoding)}function ma(){const e=[],t=[],n=[];let i=8;for(let r=0;r<ea;r++){const a=Math.pow(2,i);t.push(a);let o=1/a;r>4?o=$r[r-8+4-1]:0==r&&(o=0),n.push(o);const s=1/(a-1),l=-s/2,c=1+s/2,h=[l,l,c,l,c,c,l,l,c,c,l,c],u=6,d=6,p=3,f=2,m=1,g=new Float32Array(p*d*u),P=new Float32Array(f*d*u),G=new Float32Array(m*d*u);for(let e=0;e<u;e++){const t=e%3*2/3-1,n=e>2?0:-1,i=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];g.set(i,p*d*e),P.set(h,f*d*e);const r=[e,e,e,e,e,e];G.set(r,m*d*e)}const v=new gt;v.setAttribute("position",new rt(g,p)),v.setAttribute("uv",new rt(P,f)),v.setAttribute("faceIndex",new rt(G,m)),e.push(v),i>4&&i--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}function ga(e){const t=new N(3*Qr,3*Qr,e);return t.texture.mapping=306,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function Pa(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function Ga(){const e=new G(1,1);return new Er({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:ta[3e3]},outputEncoding:{value:ta[3e3]}},vertexShader:Ka(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${xa()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function va(){return new Er({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ta[3e3]},outputEncoding:{value:ta[3e3]}},vertexShader:Ka(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${xa()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function Ka(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function xa(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}zr.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),class{static decodeText(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(e){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}}.extractUrlBase(e)},zr.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},J.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},J.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},J.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},J.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},J.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},Y.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Xt.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},v.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},v.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},v.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},v.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},v.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},v.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},ae.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},ae.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},ae.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new S).setFromMatrixColumn(this,3)},ae.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},ae.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},ae.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ae.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ae.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},ae.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},ae.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ae.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},ae.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},ae.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},ae.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},ae.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},ae.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ae.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},ae.prototype.makeFrustum=function(e,t,n,i,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,i,n,r,a)},ae.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Ae.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},M.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},M.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},re.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},re.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},re.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},We.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},We.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},We.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},We.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},We.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},We.barycoordFromPoint=function(e,t,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),We.getBarycoord(e,t,n,i,r)},We.normal=function(e,t,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),We.getNormal(e,t,n,i)},G.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},G.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},G.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},S.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},S.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},S.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},S.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},S.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},S.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},S.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},S.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},S.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},w.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},w.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ee.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},Ee.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Ee.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},Ee.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Ee.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(Ee.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),At.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(At.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Ht.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Br.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(rt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),35048===this.usage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(35048)}}}),rt.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?35048:35044),this},rt.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},rt.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},gt.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},gt.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new rt(arguments[1],arguments[2])))},gt.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},gt.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},gt.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},gt.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},gt.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(gt.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),dr.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Object.defineProperties(je.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new et}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(It.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),ur.prototype.clearTarget=function(e,t,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,i)},ur.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},ur.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},ur.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},ur.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},ur.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},ur.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},ur.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},ur.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},ur.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},ur.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},ur.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},ur.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},ur.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},ur.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},ur.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},ur.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},ur.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},ur.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},ur.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},ur.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},ur.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},ur.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},ur.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},ur.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(ur.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?3001:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(tr.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(N.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Ut.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},Ut.prototype.clear=function(e,t,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,i)},x.crossOrigin=void 0,x.loadTexture=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Ur;r.setCrossOrigin(this.crossOrigin);const a=r.load(e,n,void 0,i);return t&&(a.mapping=t),a},x.loadTextureCube=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Or;r.setCrossOrigin(this.crossOrigin);const a=r.load(e,n,void 0,i);return t&&(a.mapping=t),a},x.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},x.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"128"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="128");const ya={type:"change"},_a={type:"start"},ba={type:"end"};const wa=/^[og]\s*(.+)?/,Na=/^mtllib /,Ma=/^usemtl /,Sa=/^usemap /,Ta=new S,Ea=new S,Ja=new S,La=new S,Ra=new S;function Aa(){const e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);const n=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(e,t){const n=this._finalize(!1);n&&(n.inherited||n.groupCount<=0)&&this.materials.splice(n.index,1);const i={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==n?n.smooth:this.smooth,groupStart:void 0!==n?n.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){const t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(i),i},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){const t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(let e=this.materials.length-1;e>=0;e--)this.materials[e].groupCount<=0&&this.materials.splice(e,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},n&&n.name&&"function"==typeof n.clone){const e=n.clone(0);e.inherited=!0,this.object.materials.push(e)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){const n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseNormalIndex:function(e,t){const n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseUVIndex:function(e,t){const n=parseInt(e,10);return 2*(n>=0?n-1:n+t/2)},addVertex:function(e,t,n){const i=this.vertices,r=this.object.geometry.vertices;r.push(i[e+0],i[e+1],i[e+2]),r.push(i[t+0],i[t+1],i[t+2]),r.push(i[n+0],i[n+1],i[n+2])},addVertexPoint:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,n){const i=this.normals,r=this.object.geometry.normals;r.push(i[e+0],i[e+1],i[e+2]),r.push(i[t+0],i[t+1],i[t+2]),r.push(i[n+0],i[n+1],i[n+2])},addFaceNormal:function(e,t,n){const i=this.vertices,r=this.object.geometry.normals;Ta.fromArray(i,e),Ea.fromArray(i,t),Ja.fromArray(i,n),Ra.subVectors(Ja,Ea),La.subVectors(Ta,Ea),Ra.cross(La),Ra.normalize(),r.push(Ra.x,Ra.y,Ra.z),r.push(Ra.x,Ra.y,Ra.z),r.push(Ra.x,Ra.y,Ra.z)},addColor:function(e,t,n){const i=this.colors,r=this.object.geometry.colors;void 0!==i[e]&&r.push(i[e+0],i[e+1],i[e+2]),void 0!==i[t]&&r.push(i[t+0],i[t+1],i[t+2]),void 0!==i[n]&&r.push(i[n+0],i[n+1],i[n+2])},addUV:function(e,t,n){const i=this.uvs,r=this.object.geometry.uvs;r.push(i[e+0],i[e+1]),r.push(i[t+0],i[t+1]),r.push(i[n+0],i[n+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,n,i,r,a,o,s,l){const c=this.vertices.length;let h=this.parseVertexIndex(e,c),u=this.parseVertexIndex(t,c),d=this.parseVertexIndex(n,c);if(this.addVertex(h,u,d),this.addColor(h,u,d),void 0!==o&&""!==o){const e=this.normals.length;h=this.parseNormalIndex(o,e),u=this.parseNormalIndex(s,e),d=this.parseNormalIndex(l,e),this.addNormal(h,u,d)}else this.addFaceNormal(h,u,d);if(void 0!==i&&""!==i){const e=this.uvs.length;h=this.parseUVIndex(i,e),u=this.parseUVIndex(r,e),d=this.parseUVIndex(a,e),this.addUV(h,u,d),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const t=this.vertices.length;for(let n=0,i=e.length;n<i;n++){const i=this.parseVertexIndex(e[n],t);this.addVertexPoint(i),this.addColor(i)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";const n=this.vertices.length,i=this.uvs.length;for(let t=0,i=e.length;t<i;t++)this.addVertexLine(this.parseVertexIndex(e[t],n));for(let e=0,n=t.length;e<n;e++)this.addUVLine(this.parseUVIndex(t[e],i))}};return e.startObject("",!1),e}class Ca extends zr{constructor(e){super(e),this.materials=null}load(e,t,n,i){const r=this,a=new Fr(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(n){try{t(r.parse(n))}catch(t){i?i(t):console.error(t),r.manager.itemError(e)}}),n,i)}setMaterials(e){return this.materials=e,this}parse(e){const t=new Aa;-1!==e.indexOf("\r\n")&&(e=e.replace(/\r\n/g,"\n")),-1!==e.indexOf("\\\n")&&(e=e.replace(/\\\n/g,""));const n=e.split("\n");let i="",r="",a=0,o=[];const s="function"==typeof"".trimLeft;for(let e=0,l=n.length;e<l;e++)if(i=n[e],i=s?i.trimLeft():i.trim(),a=i.length,0!==a&&(r=i.charAt(0),"#"!==r))if("v"===r){const e=i.split(/\s+/);switch(e[0]){case"v":t.vertices.push(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3])),e.length>=7?t.colors.push(parseFloat(e[4]),parseFloat(e[5]),parseFloat(e[6])):t.colors.push(void 0,void 0,void 0);break;case"vn":t.normals.push(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3]));break;case"vt":t.uvs.push(parseFloat(e[1]),parseFloat(e[2]))}}else if("f"===r){const e=i.substr(1).trim().split(/\s+/),n=[];for(let t=0,i=e.length;t<i;t++){const i=e[t];if(i.length>0){const e=i.split("/");n.push(e)}}const r=n[0];for(let e=1,i=n.length-1;e<i;e++){const i=n[e],a=n[e+1];t.addFace(r[0],i[0],a[0],r[1],i[1],a[1],r[2],i[2],a[2])}}else if("l"===r){const e=i.substring(1).trim().split(" ");let n=[];const r=[];if(-1===i.indexOf("/"))n=e;else for(let t=0,i=e.length;t<i;t++){const i=e[t].split("/");""!==i[0]&&n.push(i[0]),""!==i[1]&&r.push(i[1])}t.addLineGeometry(n,r)}else if("p"===r){const e=i.substr(1).trim().split(" ");t.addPointGeometry(e)}else if(null!==(o=wa.exec(i))){const e=(" "+o[0].substr(1).trim()).substr(1);t.startObject(e)}else if(Ma.test(i))t.object.startMaterial(i.substring(7).trim(),t.materialLibraries);else if(Na.test(i))t.materialLibraries.push(i.substring(7).trim());else if(Sa.test(i))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===r){if(o=i.split(" "),o.length>1){const e=o[1].trim().toLowerCase();t.object.smooth="0"!==e&&"off"!==e}else t.object.smooth=!0;const e=t.object.currentMaterial();e&&(e.smooth=t.object.smooth)}else{if("\0"===i)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+i+'"')}t.finalize();const l=new or;l.materialLibraries=[].concat(t.materialLibraries);if(!0===!(1===t.objects.length&&0===t.objects[0].geometry.vertices.length))for(let e=0,n=t.objects.length;e<n;e++){const n=t.objects[e],i=n.geometry,r=n.materials,a="Line"===i.type,o="Points"===i.type;let s=!1;if(0===i.vertices.length)continue;const c=new gt;c.setAttribute("position",new st(i.vertices,3)),i.normals.length>0&&c.setAttribute("normal",new st(i.normals,3)),i.colors.length>0&&(s=!0,c.setAttribute("color",new st(i.colors,3))),!0===i.hasUVIndices&&c.setAttribute("uv",new st(i.uvs,2));const h=[];for(let e=0,n=r.length;e<n;e++){const n=r[e],i=n.name+"_"+n.smooth+"_"+s;let l=t.materials[i];if(null!==this.materials)if(l=this.materials.create(n.name),!a||!l||l instanceof pr){if(o&&l&&!(l instanceof _r)){const e=new _r({size:10,sizeAttenuation:!1});je.prototype.copy.call(e,l),e.color.copy(l.color),e.map=l.map,l=e}}else{const e=new pr;je.prototype.copy.call(e,l),e.color.copy(l.color),l=e}void 0===l&&(l=a?new pr:o?new _r({size:1,sizeAttenuation:!1}):new Rr,l.name=n.name,l.flatShading=!n.smooth,l.vertexColors=s,t.materials[i]=l),h.push(l)}let u;if(h.length>1){for(let e=0,t=r.length;e<t;e++){const t=r[e];c.addGroup(t.groupStart,t.groupCount,e)}u=a?new yr(c,h):o?new Sr(c,h):new At(c,h)}else u=a?new yr(c,h[0]):o?new Sr(c,h[0]):new At(c,h[0]);u.name=n.name,l.add(u)}else if(t.vertices.length>0){const e=new _r({size:1,sizeAttenuation:!1}),n=new gt;n.setAttribute("position",new st(t.vertices,3)),t.colors.length>0&&void 0!==t.colors[0]&&(n.setAttribute("color",new st(t.colors,3)),e.vertexColors=!0);const i=new Sr(n,e);l.add(i)}return l}}class Da{constructor(e){this.materials=e?e.split("\n").map(e=>e.split(",")):void 0,this.materials&&this.materials.forEach(e=>e[e.length-1]=e[e.length-1].split("|"))}resolveMaterialLink(e,t=!0){if(!this.materials)return null;const n=t?"png":"jpg";let i=this.materials.find(t=>t[0]===e);if(!i)return null;let r=i[1],a=i[2];if(a=a.filter(e=>e.toLowerCase().endsWith(n)),a.length<1)return null;let o=a[0];return"https://cdn3.struffelproductions.com/file/CC0-Textures/download/"+e+"_"+r+"/"+e+"_"+o+".zip"}findMaterials(e){return this.materials?(e=e&&e.toLowerCase(),this.materials.filter(t=>!e||t[0].toLowerCase().includes(e)).map(e=>({name:e[0],id:e[1],res:e[2]})).sort((t,n)=>!e||t.name.toLowerCase().indexOf(e)-n.name.toLowerCase().indexOf(e))):[]}static async getMaterialMaps(e){let t=!e.toLowerCase().includes("jpg"),n=t?"png":"jpg",i=e;if("string"!=typeof i)return null;let r=await Da.getBlobsFromLink(i,n),a={};for(const[e,t]of Object.entries(r)){let i=URL.createObjectURL(t),r=e.replace("."+n,""),o=Da.getMapWithName(r);o&&(a[o]=i)}let o=new Ur;for(const e of Object.keys(a)){let t=a[e];a[e]=o.load(t,e=>{URL.revokeObjectURL(t)})}return[a,t]}static async getBlobsFromLink(e,t){const n=await(await fetch(e)).blob();return Da.unzipBlobFFlate(n,"image/"+t)}static async unzipBlobFFlate(e,t){const n=await Promise.resolve().then((function(){return cl}));let i=await e.arrayBuffer().then(e=>n.unzipSync(new Uint8Array(e))),r={};for(let[e,n]of Object.entries(i)){let i=new Blob([n],{type:t});e&&(r[e]=i)}return r}static getMapWithName(e){return e&&"string"==typeof e?e.endsWith("_Normal")?"normalMap":e.endsWith("_Displacement")?"displacementMap":e.endsWith("_AmbientOcclusion")?"aoMap":e.endsWith("_Roughness")?"roughnessMap":e.endsWith("_Metalness")?"metalnessMap":e.endsWith("_Color")?"map":(console.warn("unknown",e),null):null}static getPreviewLink(e,t="128-JPG-FFFFFF"){return"https://cdn3.struffelproductions.com/file/CC0-Textures/media/sphere/"+t+"/"+e+"_PREVIEW.jpg"}}var za=document.getElementById("helperText"),ka=document.getElementById("canvasContainer");document.body.appendChild(ka);var Fa=new ur;Fa.setPixelRatio(window.devicePixelRatio),Fa.setSize(window.innerWidth,window.innerHeight),ka.appendChild(Fa.domElement);var Ia=new dr,Oa=window.innerWidth/window.innerHeight,Ha=new Ht(45,Oa,500,3e3);Ha.position.z=1500,Ia.add(Ha);var Ua=new class extends c{constructor(e,t){super(),void 0===t&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.enabled=!0,this.target=new S,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:n,MIDDLE:i,RIGHT:r},this.touches={ONE:a,TWO:s},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return p.phi},this.getAzimuthalAngle=function(){return p.theta},this.listenToKeyEvents=function(e){e.addEventListener("keydown",Y),this._domElementKeyEvents=e},this.saveState=function(){c.target0.copy(c.target),c.position0.copy(c.object.position),c.zoom0=c.object.zoom},this.reset=function(){c.target.copy(c.target0),c.object.position.copy(c.position0),c.object.zoom=c.zoom0,c.object.updateProjectionMatrix(),c.dispatchEvent(ya),c.update(),u=h.NONE},this.update=function(){const t=new S,n=(new M).setFromUnitVectors(e.up,new S(0,1,0)),i=n.clone().invert(),r=new S,a=new M,o=2*Math.PI;return function(){const e=c.object.position;t.copy(e).sub(c.target),t.applyQuaternion(n),p.setFromVector3(t),c.autoRotate&&u===h.NONE&&J(2*Math.PI/60/60*c.autoRotateSpeed),c.enableDamping?(p.theta+=f.theta*c.dampingFactor,p.phi+=f.phi*c.dampingFactor):(p.theta+=f.theta,p.phi+=f.phi);let s=c.minAzimuthAngle,l=c.maxAzimuthAngle;return isFinite(s)&&isFinite(l)&&(s<-Math.PI?s+=o:s>Math.PI&&(s-=o),l<-Math.PI?l+=o:l>Math.PI&&(l-=o),p.theta=s<=l?Math.max(s,Math.min(l,p.theta)):p.theta>(s+l)/2?Math.max(s,p.theta):Math.min(l,p.theta)),p.phi=Math.max(c.minPolarAngle,Math.min(c.maxPolarAngle,p.phi)),p.makeSafe(),p.radius*=m,p.radius=Math.max(c.minDistance,Math.min(c.maxDistance,p.radius)),!0===c.enableDamping?c.target.addScaledVector(g,c.dampingFactor):c.target.add(g),t.setFromSpherical(p),t.applyQuaternion(i),e.copy(c.target).add(t),c.object.lookAt(c.target),!0===c.enableDamping?(f.theta*=1-c.dampingFactor,f.phi*=1-c.dampingFactor,g.multiplyScalar(1-c.dampingFactor)):(f.set(0,0,0),g.set(0,0,0)),m=1,!!(P||r.distanceToSquared(c.object.position)>d||8*(1-a.dot(c.object.quaternion))>d)&&(c.dispatchEvent(ya),r.copy(c.object.position),a.copy(c.object.quaternion),P=!1,!0)}}(),this.dispose=function(){c.domElement.removeEventListener("contextmenu",ee),c.domElement.removeEventListener("pointerdown",V),c.domElement.removeEventListener("wheel",X),c.domElement.removeEventListener("touchstart",Z),c.domElement.removeEventListener("touchend",$),c.domElement.removeEventListener("touchmove",Q),c.domElement.ownerDocument.removeEventListener("pointermove",j),c.domElement.ownerDocument.removeEventListener("pointerup",q),null!==c._domElementKeyEvents&&c._domElementKeyEvents.removeEventListener("keydown",Y)};const c=this,h={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let u=h.NONE;const d=1e-6,p=new qr,f=new qr;let m=1;const g=new S;let P=!1;const v=new G,K=new G,x=new G,y=new G,_=new G,b=new G,w=new G,N=new G,T=new G;function E(){return Math.pow(.95,c.zoomSpeed)}function J(e){f.theta-=e}function L(e){f.phi-=e}const R=function(){const e=new S;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),g.add(e)}}(),A=function(){const e=new S;return function(t,n){!0===c.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(c.object.up,e)),e.multiplyScalar(t),g.add(e)}}(),C=function(){const e=new S;return function(t,n){const i=c.domElement;if(c.object.isPerspectiveCamera){const r=c.object.position;e.copy(r).sub(c.target);let a=e.length();a*=Math.tan(c.object.fov/2*Math.PI/180),R(2*t*a/i.clientHeight,c.object.matrix),A(2*n*a/i.clientHeight,c.object.matrix)}else c.object.isOrthographicCamera?(R(t*(c.object.right-c.object.left)/c.object.zoom/i.clientWidth,c.object.matrix),A(n*(c.object.top-c.object.bottom)/c.object.zoom/i.clientHeight,c.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),c.enablePan=!1)}}();function D(e){c.object.isPerspectiveCamera?m/=e:c.object.isOrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom*e)),c.object.updateProjectionMatrix(),P=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),c.enableZoom=!1)}function z(e){c.object.isPerspectiveCamera?m*=e:c.object.isOrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom/e)),c.object.updateProjectionMatrix(),P=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),c.enableZoom=!1)}function k(e){v.set(e.clientX,e.clientY)}function F(e){y.set(e.clientX,e.clientY)}function I(e){if(1==e.touches.length)v.set(e.touches[0].pageX,e.touches[0].pageY);else{const t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);v.set(t,n)}}function O(e){if(1==e.touches.length)y.set(e.touches[0].pageX,e.touches[0].pageY);else{const t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);y.set(t,n)}}function H(e){const t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,i=Math.sqrt(t*t+n*n);w.set(0,i)}function U(e){if(1==e.touches.length)K.set(e.touches[0].pageX,e.touches[0].pageY);else{const t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);K.set(t,n)}x.subVectors(K,v).multiplyScalar(c.rotateSpeed);const t=c.domElement;J(2*Math.PI*x.x/t.clientHeight),L(2*Math.PI*x.y/t.clientHeight),v.copy(K)}function B(e){if(1==e.touches.length)_.set(e.touches[0].pageX,e.touches[0].pageY);else{const t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);_.set(t,n)}b.subVectors(_,y).multiplyScalar(c.panSpeed),C(b.x,b.y),y.copy(_)}function W(e){const t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,i=Math.sqrt(t*t+n*n);N.set(0,i),T.set(0,Math.pow(N.y/w.y,c.zoomSpeed)),D(T.y),w.copy(N)}function V(e){if(!1!==c.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){let t;switch(e.preventDefault(),c.domElement.focus?c.domElement.focus():window.focus(),e.button){case 0:t=c.mouseButtons.LEFT;break;case 1:t=c.mouseButtons.MIDDLE;break;case 2:t=c.mouseButtons.RIGHT;break;default:t=-1}switch(t){case i:if(!1===c.enableZoom)return;!function(e){w.set(e.clientX,e.clientY)}(e),u=h.DOLLY;break;case n:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===c.enablePan)return;F(e),u=h.PAN}else{if(!1===c.enableRotate)return;k(e),u=h.ROTATE}break;case r:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===c.enableRotate)return;k(e),u=h.ROTATE}else{if(!1===c.enablePan)return;F(e),u=h.PAN}break;default:u=h.NONE}u!==h.NONE&&(c.domElement.ownerDocument.addEventListener("pointermove",j),c.domElement.ownerDocument.addEventListener("pointerup",q),c.dispatchEvent(_a))}(e)}}function j(e){if(!1!==c.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){if(!1===c.enabled)return;switch(e.preventDefault(),u){case h.ROTATE:if(!1===c.enableRotate)return;!function(e){K.set(e.clientX,e.clientY),x.subVectors(K,v).multiplyScalar(c.rotateSpeed);const t=c.domElement;J(2*Math.PI*x.x/t.clientHeight),L(2*Math.PI*x.y/t.clientHeight),v.copy(K),c.update()}(e);break;case h.DOLLY:if(!1===c.enableZoom)return;!function(e){N.set(e.clientX,e.clientY),T.subVectors(N,w),T.y>0?D(E()):T.y<0&&z(E()),w.copy(N),c.update()}(e);break;case h.PAN:if(!1===c.enablePan)return;!function(e){_.set(e.clientX,e.clientY),b.subVectors(_,y).multiplyScalar(c.panSpeed),C(b.x,b.y),y.copy(_),c.update()}(e)}}(e)}}function q(e){switch(e.pointerType){case"mouse":case"pen":!function(e){if(c.domElement.ownerDocument.removeEventListener("pointermove",j),c.domElement.ownerDocument.removeEventListener("pointerup",q),!1===c.enabled)return;c.dispatchEvent(ba),u=h.NONE}()}}function X(e){!1===c.enabled||!1===c.enableZoom||u!==h.NONE&&u!==h.ROTATE||(e.preventDefault(),c.dispatchEvent(_a),function(e){e.deltaY<0?z(E()):e.deltaY>0&&D(E()),c.update()}(e),c.dispatchEvent(ba))}function Y(e){!1!==c.enabled&&!1!==c.enablePan&&function(e){let t=!1;switch(e.code){case c.keys.UP:C(0,c.keyPanSpeed),t=!0;break;case c.keys.BOTTOM:C(0,-c.keyPanSpeed),t=!0;break;case c.keys.LEFT:C(c.keyPanSpeed,0),t=!0;break;case c.keys.RIGHT:C(-c.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),c.update())}(e)}function Z(e){if(!1!==c.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(c.touches.ONE){case a:if(!1===c.enableRotate)return;I(e),u=h.TOUCH_ROTATE;break;case o:if(!1===c.enablePan)return;O(e),u=h.TOUCH_PAN;break;default:u=h.NONE}break;case 2:switch(c.touches.TWO){case s:if(!1===c.enableZoom&&!1===c.enablePan)return;!function(e){c.enableZoom&&H(e),c.enablePan&&O(e)}(e),u=h.TOUCH_DOLLY_PAN;break;case l:if(!1===c.enableZoom&&!1===c.enableRotate)return;!function(e){c.enableZoom&&H(e),c.enableRotate&&I(e)}(e),u=h.TOUCH_DOLLY_ROTATE;break;default:u=h.NONE}break;default:u=h.NONE}u!==h.NONE&&c.dispatchEvent(_a)}}function Q(e){if(!1!==c.enabled)switch(e.preventDefault(),u){case h.TOUCH_ROTATE:if(!1===c.enableRotate)return;U(e),c.update();break;case h.TOUCH_PAN:if(!1===c.enablePan)return;B(e),c.update();break;case h.TOUCH_DOLLY_PAN:if(!1===c.enableZoom&&!1===c.enablePan)return;!function(e){c.enableZoom&&W(e),c.enablePan&&B(e)}(e),c.update();break;case h.TOUCH_DOLLY_ROTATE:if(!1===c.enableZoom&&!1===c.enableRotate)return;!function(e){c.enableZoom&&W(e),c.enableRotate&&U(e)}(e),c.update();break;default:u=h.NONE}}function $(e){!1!==c.enabled&&(c.dispatchEvent(ba),u=h.NONE)}function ee(e){!1!==c.enabled&&e.preventDefault()}c.domElement.addEventListener("contextmenu",ee),c.domElement.addEventListener("pointerdown",V),c.domElement.addEventListener("wheel",X,{passive:!1}),c.domElement.addEventListener("touchstart",Z,{passive:!1}),c.domElement.addEventListener("touchend",$),c.domElement.addEventListener("touchmove",Q,{passive:!1}),this.update()}}(Ha,Fa.domElement);Ua.enablePan=!0,Ua.enableDamping=!0,Ua.screenSpacePanning=!0;var Ba=new class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=function(e){const t=new Float32Array(e),n=new S(0,1,0);return new Er({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:ta[3e3]},outputEncoding:{value:ta[3e3]}},vertexShader:Ka(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${xa()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){ca=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=va(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Ga(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<aa.length;e++)aa[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(ca),e.scissorTest=!1,Pa(e,0,0,e.width,e.height)}_fromTexture(e){ca=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:1003,minFilter:1003,generateMipmaps:!1,type:1009,format:1023,encoding:fa(e)?e.encoding:3002,depthBuffer:!1},n=ga(t);return n.depthBuffer=!e,this._pingPongRenderTarget=ga(t),n}_compileMaterial(e){const t=new At(aa[0],e);this._renderer.compile(t,ra)}_sceneToCubeUV(e,t,n,i){const r=new Ht(90,1,t,n),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],s=this._renderer,l=s.autoClear,c=s.outputEncoding,h=s.toneMapping;s.getClearColor(la),s.toneMapping=0,s.outputEncoding=3e3,s.autoClear=!1;let u=!1;const d=e.background;if(d){if(d.isColor){na.color.copy(d).convertSRGBToLinear(),e.background=null;const t=pa(na.color);na.opacity=t,u=!0}}else{na.color.copy(la).convertSRGBToLinear();const e=pa(na.color);na.opacity=e,u=!0}for(let t=0;t<6;t++){const n=t%3;0==n?(r.up.set(0,a[t],0),r.lookAt(o[t],0,0)):1==n?(r.up.set(0,0,a[t]),r.lookAt(0,o[t],0)):(r.up.set(0,a[t],0),r.lookAt(0,0,o[t])),Pa(i,n*Qr,t>2?Qr:0,Qr,Qr),s.setRenderTarget(i),u&&s.render(ia,r),s.render(e,r)}s.toneMapping=h,s.outputEncoding=c,s.autoClear=l}_textureToCubeUV(e,t){const n=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=va()):null==this._equirectShader&&(this._equirectShader=Ga());const i=e.isCubeTexture?this._cubemapShader:this._equirectShader,r=new At(aa[0],i),a=i.uniforms;a.envMap.value=e,e.isCubeTexture||a.texelSize.value.set(1/e.image.width,1/e.image.height),a.inputEncoding.value=ta[e.encoding],a.outputEncoding.value=ta[t.texture.encoding],Pa(t,0,0,3*Qr,2*Qr),n.setRenderTarget(t),n.render(r,ra)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<ea;t++){const n=Math.sqrt(sa[t]*sa[t]-sa[t-1]*sa[t-1]),i=da[(t-1)%da.length];this._blur(e,t-1,t,n,i)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,o){const s=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new At(aa[i],l),h=l.uniforms,u=oa[n]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let e=0;e<20;++e){const t=e/p,n=Math.exp(-t*t/2);m.push(n),0==e?g+=n:e<f&&(g+=2*n)}for(let e=0;e<m.length;e++)m[e]=m[e]/g;h.envMap.value=e.texture,h.samples.value=f,h.weights.value=m,h.latitudinal.value="latitudinal"===a,o&&(h.poleAxis.value=o),h.dTheta.value=d,h.mipInt.value=8-n,h.inputEncoding.value=ta[e.texture.encoding],h.outputEncoding.value=ta[e.texture.encoding];const P=oa[i];Pa(t,3*Math.max(0,Qr-2*P),(0===i?0:2*Qr)+2*P*(i>4?i-8+4:0),3*P,2*P),s.setRenderTarget(t),s.render(c,ra)}}(Fa);Ba.compileEquirectangularShader();var Wa=new class extends zr{constructor(e,t){super(e),this.helper=new Da(t)}getPreviewLink(e,t="128-JPG-FFFFFF"){return Da.getPreviewLink(e,t)}findMaterials(e){return this.helper.findMaterials(e)}findAndLoad(e,t,n,i=(()=>{}),r=(()=>{})){let a=this.findMaterials(e);if(a.length<1)return void r(new Error("No such material exists"));let o=a[0],s=this.helper.resolveMaterialLink(o.name,t);return console.log(s),this.load(s,n,i,r)}load(e,t,n,i){Da.getMaterialMaps(e).then(([e,n])=>{t({...e,roughness:1,metalness:1,color:"#ffffff",transparent:n})})}}(new Cr,"Porcelain001,btqjiohk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPorcelain002,dpn5fq63,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood051,4byxadw8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal038,f01tyi3w,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood049,07swjdo9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood060,9fuigk60,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete034,2mc7y1jq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPorcelain003,9nebsljt,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround037,7mxnj6cz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nOfficeCeiling001,gq14d9xw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal032,qr6wojiu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood058,7pa68vl9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor041,pitgazs0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood047,dt6jmyec,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks053,ta6d2s9i,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood048,j0bhmp2g,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor040,i8c752es,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble006,a9sidv4n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric048,lxnw4p06,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood062,fbnx6ekp,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFingerprints009,yz4cdlr1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood061,dfn72gaw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles078,u851cd7r,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal035,yit23lcv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel020,m7ry93ag,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoofingTiles006,esn3t20h,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlastic010,bhmw7gu4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMoss002,mv1q49zy,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather032,46kqtmnv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble012,hg5j7bs9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric045,ch1fr96s,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal034,isubk3h0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather030,4s7a2b8i,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete031,dt0379cg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles074,462bwf3l,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood050,46pcabg0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood059,wypc271d,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones092,w7f9xgym,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nOfficeCeiling002,li308he1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks051,nlxpqi1z,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal036,6zcongqf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones070,5218qx9k,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFingerprints008,cqsulo2n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlastic006,ry81wit5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles075,ev839lmk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather031,uxq63t0e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoad007,q7wvaogf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock035,3h28xm1o,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete030,p1798xga,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood052,4o7bmxz3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nOfficeCeiling003,x6dzvaup,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround042,c7xfp8n4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalPlates006,j31frn65,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric036,y8pw7ash,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood027,krgmzx7d,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAcousticFoam003,vspfr6ax,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nOfficeCeiling004,a2ev3ngz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood026,l3kf4xmn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFingerprints006,tbeydjpw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nOfficeCeiling006,2dwnfu14,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal030,uaqjzosr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood046,wmbxevqd,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor034,vmiz342u,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlaster001,dpx9uecv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock020,yxmjg34p,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather028,ep35dhi8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingEdge002,drmbn5zl,2K-JPG|2K-PNG\nRocks023,8lcm7tox,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor035,jq3kid1y,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather029,ufvnj9a5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric049,qkatwceo,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood035,9dtl1won,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoofingTiles008,0qxwec5g,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood030,0amgk7oi,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nOfficeCeiling005,01con4tf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal033,3z8vqhim,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor039,xcld4kh1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround041,lswrpxc8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones098,iyung4px,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks022,c97r2w36,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric030,7x6gai3l,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble014,a1ig8hl7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock030,v1d9gx7c,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlastic011,18rbocn4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodChips002,kdqvblz1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal031,wuq6bxvc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt019,9njpdh72,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble009,eqm8uvo6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoofingTiles007,z80v9lt1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood034,an3uo2xz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble007,lzm2tywb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlaster004,xurz76dg,2K-JPG|2K-PNG\nMoss001,2kxdym85,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround036,aenr81k5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks052,u2xhtd3f,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood063,wn438hdc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete026,lbmfc9e3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoofingTiles009,fcngwqyp,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal040,54w1cvg9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks021,flvsjign,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood028,gcvje03k,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles081,5abtr97w,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock029,36am5g80,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood041,ys6cnk0u,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete025,d6s7umcz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal037,xy3rsuq0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal007,a9ecyku2,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather026,y1pnqsef,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles052,y3cgbzui,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster016,62orgzlc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround039,we30xrsm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTreeEnd005,7xgw5s03,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalPlates008,afcdh8mq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlastic008,e2ac6lv1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood045,be5glkxo,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood054,9mcbgo0d,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones075,a4txd7mj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones083,d5g17emu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks038,p8u456ki,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones081,kw4eybdu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble008,xt90fnzm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround040,8l7uaoqw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles079,730vbnjh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood040,hwk2igjm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlaster003,97f5wl4i,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones054,5d89ab01,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlaster002,k5jrdv0p,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal027,t32sgfq1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather027,cb92savr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles076,kq7nwzhr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFingerprints007,z3a6hby4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles040,r2pq80vx,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal039,46ozhl9s,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood021,17sj0rv6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal029,2hfzm8px,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones084,85bk4107,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood055,4kdumqbo,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete019,l3n2p6i1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric019,2bwa7mex,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric032,qwtyha7m,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMoss003,5r8a6kq3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles036,ibn4s8kr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble013,c1tz0mv9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood036,fsj6zeig,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood042,vj2n715u,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal003,4ulq21nt,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones067,zkyvemas,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles073,moeqdf2x,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks020,9lsbfjpg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet012,pj6vtzsm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor007,nta2h43o,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood029,l8sz30fb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete028,ds7q96fc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood057,6psa4q2x,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal012,fs89b0la,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete023,3iho7fl1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks042,nxqlcsp8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones087,fsmgql1v,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster010,ux8f6s43,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock028,dmj69512,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete032,pik2zjxe,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFingerprints005,ujvpcg7e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlastic007,28qxje6z,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMoss004,6iaus4bh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones053,5icqd8gt,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround038,cf7gmn2y,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood044,q694nkmr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock037,mfzhgw1e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlaster006,p1l6aqbs,2K-JPG|2K-PNG\nWood065,ibg2zx6e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood056,gqp5l40j,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble011,8s47nv16,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric040,8fsvq3xm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric039,7meu45oj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood039,otm54p70,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric035,ih4omyr1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones069,0ruv8x36,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood025,cedafg4b,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster014,kjqecxor,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal028,6cslnw1r,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock026,yjb2pi7w,2K-JPG\nAsphalt016,hnk8xlws,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock031,sobzvfk6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric031,v5wl8oix,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel021,q7sob52y,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles082,036mnqed,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood043,mcnpvxqo,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble015,9x081z6l,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalPlates009,dzestp9k,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete017,1mtrxsun,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood022,fki7rb5s,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete029,jlesocg7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAcousticFoam001,d859qlc0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalPlates004,yzf9q8hx,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles045,s1cu628y,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood064,feji7xd6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor037,1h4tnqc6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles071,f3hr4sye,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood053,ck7zdv5a,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoofingTiles010,mox0wjft,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock034,oiml1st6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather024,89ldfiks,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlastic009,46uhkps8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nClay001,musoyk82,2K-JPG|2K-PNG\nWood023,wsmr1cj7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood032,d83fwr9u,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete033,i9872oby,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal008,2ksbj760,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoad006,4b3kdcjr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete020,d83ugt7b,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric044,k26og0lf,2K-JPG|2K-PNG\nMarble005,vudhwt9x,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSheetMetal001,80kdbc36,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedWood005,at63cr4g,2K-JPG|2K-PNG\nPaintedPlaster015,jf5vmqpk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal010,zv3hntkg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones071,2rxe3vp4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor036,pmg21vwi,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones057,5tk2wd61,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlaster005,eq1xolty,2K-JPG|2K-PNG\nGround027,np0hz7eb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround003,0drjnsxm,2K-JPG\nMarble002,rb2i6kzu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles072,hq0r4w1x,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric028,gj4bwo8h,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric046,l9oqtncj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric047,9w3bh215,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete016,8zdnvjb6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks050,1cu0o3ql,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones036,v32zj89g,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks011,aphliy19,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric023,9e2bps4a,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet014,c0p3o5nv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete027,0zpom8lw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround023,m5ydqvor,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks012,x14gbdqs,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks019,wh8s1i2d,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock022,84ralvp5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric034,gblkmav8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal009,eo5day8i,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles077,uj0g9oms,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather022,fnx3piso,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric026,sm2ylzt8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt018,o25dne9t,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones090,hrbg36si,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround033,1o8fbvme,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete024,jwt7fexb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric041,3kgdizy5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones078,8jzcn6op,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodSiding009,qa40fm1c,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones091,4jmi97bd,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles032,7n4ypbdz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones080,sbre9k0g,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather025,u04ay57q,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaint004,o5vsxgtd,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones046,jcbl6avi,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks022,x7r3jtgh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric022,kodcj7s1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones097,zf4j9gpq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete014,ndfrjb6y,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt017,6xmsynv9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble010,t1y9z5uh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood033,egk235wv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones055,8mw4b95q,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet001,x8qj9man,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalPlates005,fpla7tve,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones072,h8z0dion,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock032,ajxichou,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood013,3wzae0so,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel019,elg6tbsd,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks023,rk5ac2vw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones077,0xku1zlj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock033,omc2afrh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal013,wahckyvn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles080,loiuvbsk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks022,db8ac1xq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster006,715fmhng,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalPlates007,urnby6za,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks006,8ze0rctg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal022,wc975fia,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock036,kby8vort,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSolarPanel003,csg1trxp,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather023,kgwt5mo2,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround029,iy0mo7pa,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks014,i08saz1w,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones089,8e462v3x,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather021,yb4f6pav,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAcousticFoam002,q93r5k6g,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel018,v59ywx2h,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones088,4f7c601h,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles051,ckxzi62e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks011,ablmxg4o,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles054,k9237tzq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood024,lk5inyb9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood006,9nd8f5yv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal006,ahwgdpks,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock039,wua09cvq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones065,60l8e9ft,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks037,t3od6nrv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal011,glquhx4r,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster013,isp5c7hu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nClay002,b0qyda14,2K-JPG|2K-PNG\nGround030,ezgjubp9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock023,r5jhlx39,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles035,3ecy2vbl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChip001,fe12dtw8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric042,9jxyesig,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoad005,na4gf9ct,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel015,86m4cjpu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster007,m9xtv7qk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock038,v5baomjw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor032,43o9fyjh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoad003,5hdl3v9y,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles043,58vdkfh6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble003,sbzlewcu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble001,poh5q7z9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones085,689bgm7e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric037,51sb4utv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather014,z2tqv5ho,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks034,rskz8xup,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood018,rgjd93qa,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel016,9f4yidvw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal016,3ysamiqd,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nClay004,xrcuz7ej,2K-JPG|2K-PNG\nWood038,y3nsgzcp,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks016,fo2wjn63,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones058,87f1xzpb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal024,hwgf7o94,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal021,0gfh4726,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood037,r2k1m9qs,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones056,o9yjh6m1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks048,j324axmo,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt010,gx78yz2p,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel017,mjtfr2eu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster008,mg9toa73,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround022,37rde12c,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks028,ex27dvoj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSponge001,bvwghltm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal011,mpia0tsz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete008,dpc0tawf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBark011,g4s5wkf8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather011,jxiefcnh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal025,4be3zcru,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround034,fuihbczn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal019,23npuql1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor025,j5hlaivx,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete015,yhujm3ko,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTerrazzo005,5beqtlp6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones076,4adyrp6e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor024,15ltjfvk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet013,i4kua6zg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric038,stjdmzo9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks043,n74zeucy,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround031,fkibe09t,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel014,nx2034at,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks031,3lfj6ind,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster012,z8ia6vku,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks007,awen4s6g,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFacade017,l07bqcit,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles038,s854f9x3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks026,bdn9u4r1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones073,38q16xj4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel011,m8wofez0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nClay003,8sc4pn2t,2K-JPG|2K-PNG\nFabric018,0iwo2mr9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLava004,c2dfwynj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal017,7sczpqd1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks015,0v8idjx3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal017,nwdb7key,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones094,tpk2jazc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones096,yqxcg39d,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete012,b2fz5cti,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks047,mfjpizn8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSheetMetal002,pm6j4cbd,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather012,gnhout5s,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles058,ub7sfydq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal014,afuvwxnh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles049,la916tob,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround035,pe4u7c1n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor038,fqhsmnkb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones079,emd63hxb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones093,v5qwf91u,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks009,sfz4m0p9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoad001,8e0wx1ay,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones068,egy97iu3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks019,bt0724n5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock025,uq3f9i06,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood019,kup6iysc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal001,k0gjpw35,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBark001,jb7fn4x3,2K-JPG\nRock027,91an26tl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCardboard002,gawvi687,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric043,5hs2348m,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMarble004,78s5dp6f,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt015,f0iyw3un,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones042,4fesbihu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor008,infdc47l,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal014,89cfyxg1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks030,1dun4lif,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric029,92g1jq3n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodSiding008,3e7tu5j6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones037,xhcspw2t,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster009,d6klajny,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood031,6twbkqam,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones074,defuk2ch,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWicker004,rvj4b368,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet006,sz6ixq4l,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks025,tm591c4a,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks013,j6hf4usm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones095,jtvlxe4w,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBark006,gobz5hpa,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood016,o3xrc40n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal006,1puvg9fk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood005,ls9ezjmp,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones045,woh2l1b0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks017,bostuipl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones086,6fpkiu9m,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks018,5h9k8z24,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones082,e05wjoux,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles055,s24tawq5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal012,pxmt56ej,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood009,8ufaky3x,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood014,8mpbhwds,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles070,h1aqrol0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete006,axhbv7j0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoofingTiles003,osyv67iz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround025,m3n0qewd,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSnow006,9g2vkchw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround026,4b36vtds,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks016,sh1oa8ej,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal002,k0b7szpg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor033,eilw1pc6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster011,p6014vxz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood020,cb42enyh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric001,jgnrdal6,2K-JPG\nPaintedMetal009,y628wpm3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks046,lg3tdi4m,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet003,vnmstc4e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric025,68xsi0yq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather009,kob8h5ln,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalWalkway013,caukle1i,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock024,mui079kz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles050,natws7ul,2K-JPG\nPavingStones038,pyos1rh3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChristmasTreeOrnament007,ph8wuqgf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles002,m2h7bd3k,1K-JPG|1K-PNG|2K-JPG\nCarpet002,j8cuphr9,2K-JPG|2K-PNG\nBricks039,zrgohv1d,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodSiding005,cq2i7wmu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles053,h35vpt4g,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones052,3a71noh9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones064,ltb4ec89,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTerrazzo001,0yh1mdiq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks040,831qj276,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal004,wyaucxgo,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks035,xutswr0n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel013,u38ytqvk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet011,sp2ew9nq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete010,tbxn642o,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock012,rc2inedu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks002,1a9qzi76,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal005,qprindu3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCorrugatedSteel005,4xamvif1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood017,yfn9obkv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal026,ikpjqv9f,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood015,ai49dcbz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones061,oyme1bdj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTerrazzo004,la5fb34j,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric016,nsz73jh9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks032,il2f3eas,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones051,wq2dvole,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric017,gathyvbs,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal018,u7ro0d41,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChip005,30qyat9x,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones063,7fxmjdng,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather016,7m0kj4aw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks008,h34nrb19,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTactilePaving002,7thgxkiw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor030,ohv3fm6r,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones044,e86uvsyz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTerrazzo003,og5ufejp,2K-JPG\nSurfaceImperfections013,9lrnh0gd,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBark008,e84smnaz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWicker006,b3jm27q0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles027,i7mfsva0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal023,vt4b08o9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones041,knivx0el,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal008,caigrw8n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodSiding007,i1neulj5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete022,d50p86bq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood007,8u4n6bxk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaper003,1d4mgfz9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones040,au42mvgf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet008,8nv2tske,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete013,7iyoj5sr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal020,vmx241a7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlastic005,k913mabg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete007,3sbaqkve,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks049,d0m1sv8k,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal004,bpx42z8a,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor016,gy4rixhc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor011,pr0ahycn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoad004,6gqb74ao,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks008,s3enxbig,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBark007,pwm91usd,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather008,6hc4raoe,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles060,fx73lhog,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones050,s48t2jci,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor020,s5b9gqc7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks008,vxhenw6k,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoofingTiles001,2ra9ig6j,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles062,6b1pan49,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks024,tbarnjug,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPipe002,6y1gfpim,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal010,0mytr34z,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor005,56frtgex,1K-JPG|1K-PNG|2K-JPG\nWood003,axpj8mqo,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor014,fa98owbd,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock040,m1z6ps7n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles028,47ie9ut8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric020,6p87dqmf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalWalkway011,cp37dn8w,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric027,r6nubo50,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks045,kmexdjzl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks033,m46njgbf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather018,a5y7xfi8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSnow005,u275ivm1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedWood003,tusfiaqz,2K-JPG|2K-PNG\nRope001,e71kdwpb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor031,pnmetl3s,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones049,p2jx6slu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones059,yumr48cf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock019,95ysh6it,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround032,b0o2i6ju,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones062,xa1mityz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather013,5rcsejkn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal007,0qyndhc1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric008,oytwbjvz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles029,z2qhv01w,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor023,x07p2mkh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nScatteredLeaves001,g0vqdk2t,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood008,qgzhia2x,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles039,bzn14kfs,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles012,sh09qge3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete021,h3nfpkmq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles044,bhqaep1r,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric033,41geisnj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones035,s5kgbc49,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWicker001,mlecwgax,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles057,ac07l84h,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFence003,t8p12woe,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoad002,dw61u4as,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks029,e89pychx,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles010,gf7le8rh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor026,7vxa0ued,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround001,i498j02t,2K-JPG\nTiles020,ysn8h69k,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones066,ro1k2xn0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal015,l9zepr0y,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock016,54kfslpv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks001,hx49qz8t,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles030,139qv02z,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock018,gaxpe1fr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks018,xl85ug6n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles056,bmhzgx8s,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks044,wq0e479g,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood010,4ag7qpdn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster001,6igoezvr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones029,5b4xyiaq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks007,pbyxurg2,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRust006,fawy8i7u,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles069,h96v1t5m,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood011,6lgj7fu9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones060,x2dgrjfl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet005,brv6we0x,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones047,by76f5oh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSolarPanel002,lktos5y0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal013,ah1vi703,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock014,9e3xm64z,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWicker005,bchma0ft,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCardboard004,fhk76szj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel012,ql4ve9ng,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel010,0mlftpbk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks020,mjqo3g0a,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks009,2d1lnpz4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles046,dagxrtj6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodSiding001,qw90uk2p,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks036,yimv3je4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor015,vz2jwp18,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones048,7qm2coxf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor012,imecbpxf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nScatteredLeaves006,y7shf5cz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaint002,98vrqw5h,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles041,rntyzqfg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather004,iwuk7dbl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather002,ft82p6uw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks005,1aqxc9h7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks015,gqimuo2y,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSnow004,wzongtyj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles026,0hfn57yj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather020,xbsina8k,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalWalkway010,b6rl2gda,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChainmail004,30baf7s9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLava005,zw5a2f96,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather015,lrzs65hy,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete018,phtsxqif,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt014,st214i0n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather005,rf3g7ktm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles061,h7ji6qul,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSponge003,51o8g9st,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSurfaceImperfections003,4pf197ag,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles047,huofea2s,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet010,97p6ncmg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt009,le0vn6s4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks041,mcowqrzu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric007,xvl1d0no,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock013,2o9zx73b,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFoam003,5y83ogk1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodSiding006,h1qro95n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor018,rgi9h4b6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles059,pq32arzh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPipe003,3h9odn7a,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlastic004,wo2c8ufx,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood002,amfz7j4q,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround021,2k5pqesh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlastic003,sxlu76eg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles066,7z2etbkv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTreeEnd004,4xkivrt2,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSheetMetal004,bj5027on,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetal016,e1stp7o0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaint005,02smuqyd,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal018,lwopg6ua,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nScratches005,97dx3ukb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSolarPanel001,lciewb8g,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFacade001,q7vu6hp0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock017,h3q94nzi,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet004,96pzdicl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock015,erlnotvx,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoofingTiles002,mqs9d5k1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric012,w7alsikq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric003,htbl1nrv,2K-JPG\nLeather001,u1fsr6xa,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal015,g6zw37l0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric002,97uyn0co,2K-JPG\nBricks027,f4ya7n38,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks012,d3bzeqak,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nIce003,tglf3hiz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTerrazzo007,y397fkqa,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks021,3j15ihoa,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles033,94h51nrf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCork001,6xery5j3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks012,2gytlvdz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones033,2ksa9ho7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor017,epgxayu7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles034,26vxbgrl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRope002,c5qpazem,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChip002,gwvsu6jk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete002,d63jhp1k,2K-JPG\nConcrete011,id3zmfnc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWicker002,04zyosqn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround020,6x52lvuj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal001,9awshn7o,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLava001,9lufvrpa,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles042,tqybvuiz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric024,jgi8ed5a,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks004,uwmbfzdo,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nDiamondPlate001,bdtxw76g,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChip004,r7cma94i,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles065,3odjfpb4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather010,ezuop6fw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor022,9dymo5c8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nScatteredLeaves007,mfa731bh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChipboard003,0nrcayus,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlastic001,ta01ch2n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChip006,z3blkvjp,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBark009,p2i9dg5w,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFacade013,8tsjm4qr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSurfaceImperfections008,sqtzg6ie,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor010,y1k6uzi2,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPipe004,4c6ftjdm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel009,dcqr5oup,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor009,gdt7hwck,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCardboard001,s6kjmibt,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles014,i41ekwzc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalPlates001,imxrjpq9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather017,ibmknpqc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaint001,7nclgkmi,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFence006,2s6gv8ec,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones026,lb350dce,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBark010,1psmy4gk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles007,uyhivqxw,1K-JPG|2K-JPG\nTiles068,jm2t0fq1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones028,gpao580q,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor021,2lkg8yum,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt013,who75z2a,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks017,ye38n0s1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood004,jm8yn29b,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedWood001,iwybdgam,2K-JPG|2K-PNG\nTiles037,73gi4v02,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWicker003,3jc5vmi9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor027,aeo3p51y,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround028,bdhlfur7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWood001,5dsozui9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks016,tah901vw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor004,bosjkuac,1K-JPG|1K-PNG|2K-JPG\nTerrazzo008,1b0xpyim,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric021,oiw7rm3l,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric004,aqszf0vt,1K-JPG|1K-PNG|2K-JPG\nTiles015,i04jo5hu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSurfaceImperfections007,cwfmr6ui,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFacade014,mk69cr8w,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTerrazzo006,sqb45f61,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet009,fgtm3q9e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock009,j8fga34z,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks010,nyu6qdrz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRust003,71pncfdq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles022,anzefjuq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround024,9jch21o8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFacade009,xitykm56,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChristmasTreeOrnament006,h2syj6l4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks007,dwy31zok,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles008,i34o1njx,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor019,pahvo8t6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaper002,40s3we1b,2K-JPG\nWood012,4ncepxyw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedWood004,ba36scyn,2K-JPG|2K-PNG\nWoodFloor029,dswrfi2p,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather019,jgx4mnqh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalPlates003,t25wqp1b,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRust004,qxvk1ymt,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTerrazzo002,xqbshmv2,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock010,90tludnp,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCardboard003,n0ut7lgc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor028,a6ed1ckx,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks006,4wqxedp5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather007,1duaixfm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSponge002,fpiygsk8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSheetMetal003,r3xh2scv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLava003,ecl7i4tw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks002,ye219wjv,2K-JPG\nFabric005,webdiujl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSolarPanel004,a71vqnol,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRust005,lr6utj2f,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks019,hfjtn4s5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign009,napq5bmx,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock011,r6qtpzo9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFoam001,i54j9hfp,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks003,b2fhngep,2K-JPG\nRocks021,jl1k7cb0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock021,xsr2qb8u,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt011,lr94ad8h,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster004,5qn2om6c,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles067,it8grphn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles063,6xbtvid3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalWalkway012,26kqxdfh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric009,c4d21oju,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones039,d1e2zq6w,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nManholeCover005,0ik684nh,2K-JPG\nFacade016,twgo97y5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodSiding003,8t9m41w5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFacade012,eqniylsp,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete004,iek8pvzn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones025,lbzudf8t,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFacade011,u0id7zm1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones032,a9tgnxjl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSnow002,u8nfymjb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks006,zp3tuv8f,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks010,xrq2gmzn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles048,ibtav0d8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks004,d4a9f0rz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChainmail001,dbcepa0z,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFingerprints003,avtbezmk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones043,8rwo97jc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles024,g2l9jytq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChip003,7xiof3p5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles031,nb3kuhx0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines007,4ywpa3id,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFoam002,8boan72u,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric006,ljvn05h2,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles001,hf196d5a,2K-JPG\nTiles017,gwdz91qa,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nScatteredLeaves004,ypugevt1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal002,5we08xt9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks018,v9wn3jdl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nScratches003,k29ry5hn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt003,pot20cf1,2K-JPG\nFacade006,al8mncoy,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones034,jbuzscey,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nIce002,y3m685qr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles013,xby7ings,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones030,o9bs8nwx,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaint006,rkuyx5lg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFacade015,brq6hmdg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete003,rl7qb3h0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks005,fsrk453n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks015,9k68u1g5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign007,9m10s3hi,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor006,k683hqmz,1K-JPG|1K-PNG|2K-JPG\nFence001,9x8tbrkz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles064,nzs0hgad,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround019,01fsyirl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodSiding002,me082ndt,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nDiamondPlate003,72w4otzr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTape001,waj48bpg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nScatteredLeaves003,ial3pvw6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoofingTiles004,e81zwm5y,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPipe001,7m4eacor,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSnow001,u7t5fq81,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock007,is27b839,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCarpet007,uktaifbq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks003,v4kxgi8p,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles011,8u3yjozs,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround013,nys5r89j,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFacade005,qpar9mvt,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSurfaceImperfections001,exkawcpu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones031,gb8vchqi,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor003,l59virsc,1K-JPG|1K-PNG|2K-JPG\nPaint003,7c32mgyk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBark002,iefdjoxq,2K-JPG\nLeather003,e9y1bhvr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTreeEnd003,0oqi82zm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor001,f7dxgl2c,1K-JPG|1K-PNG|2K-JPG\nBricks001,ovfkeuhm,2K-JPG\nSign003,a6z9gfu5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks014,t0b8xmky,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeather006,twzoehk7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones017,dtiefo9v,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalPlates002,3k9rdm8f,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks005,82df7u0p,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChipboard001,27khxd40,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal003,w0ba2yuf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks013,qp2m38w7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFence002,gjw5v7i3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones027,89ch6pbw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks014,62iv4t3e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks002,p6ai8zlk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks017,97rdxykj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFacade007,l89o4q5i,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSurfaceImperfections012,1a58ygnc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks011,kdjrhtfw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nScratches004,admjn92v,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRust002,po24wydn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete009,as52uyid,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSnow003,da46n30w,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround018,jcgwi2om,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedWood002,2bc375sm,2K-JPG|2K-PNG\nGravel008,ifhs6prz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTactilePaving003,lab9t6cy,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChristmasTreeOrnament005,8tr6kspc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFacade002,fgmrlpqv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSurfaceImperfections009,9f2axoqg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones002,uedj2nwm,2K-JPG\nFacade008,9vlmdabn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign002,5tycrhqk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock008,x4r1z0nj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks020,rdznqlix,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoofingTiles005,sxg124dp,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBark004,opy7qg5k,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign004,k0hsq1pj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRockBrush001,2g5s36ax,2K-JPG\nFacade010,naewg23h,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround012,dfpzq7r0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nScatteredLeaves005,wf1dbz0n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCorrugatedSteel002,nl6do1y7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster003,s8umtzqc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones001,wp57amz4,2K-JPG\nFingerprints002,cm4rs5gi,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock005,s9kh50ai,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChipboard002,ijyz21p4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLava002,pnsjac2q,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones016,g6zby3i2,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor013,eqogsvdw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSurfaceImperfections011,p6t47ycr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeaking006,5e0mpzol,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChip007,r4g52fjp,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCandy001,xhlt5e8r,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign021,iy9w7odm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround015,5tizcod4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles025,dsfngu2e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nConcrete005,zhya8onc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones015,qd0xp7yz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock006,c5nv7guq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles021,wceurohi,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles018,limfcvwn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround002,9fy81ehr,2K-JPG\nPavingStones024,tbp457eh,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign023,k0otlqg8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nIce004,qf47nxjk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster002,dmkvwhec,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel004,5zolj067,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nScatteredLeaves002,eapoqh4d,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric011,l94mwc2n,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCorrugatedSteel001,xczlyhe1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign008,bcnxe7r2,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt001,1dkoy0sp,2K-JPG\nPavingStones021,18q9l46c,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt002,b3m9gntr,2K-JPG\nFence004,wbu5g1lt,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCorrugatedSteel004,iaf5lkvq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRocks003,dl7nq8k9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric013,imqr0vt5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones006,rhqegb2s,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines008,9sjmqkcy,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedPlaster005,n6qfz27i,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt007,3jgt764l,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeaking004,i8bfy06e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks013,58c4xnap,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCorrugatedSteel003,7bfavyd6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric015,96o0lpfv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign022,aj5mdp3o,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks009,yanb9muq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlanks001,visxk6ly,2K-JPG\nRock002,1ijmynus,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBark003,6mos9jqz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFingerprints001,ba9fwodj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSurfaceImperfections002,lbzf4qhp,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles009,l78ctijw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFence005,w1rzvcd3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines013,t1nhluzg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBark005,fh1sobq2,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric010,e2gt496d,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks010,m0wtr1ja,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChristmasTreeOrnament004,0zb63fij,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign025,1904xsh2,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones018,pgi35tv9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones010,8vo9l4x0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt012,7tij5anc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles006,adi534g9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalWalkway006,50zksote,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround017,lhqw0j37,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSmear007,cv2mwi8r,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodSiding004,zqde3giv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPaintedMetal005,6cemvqkg,2K-JPG\nPavingStones022,v6f835mb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines014,wvejt1mb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRope003,ayfmvij5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround016,qp9bl5hk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines010,2q6cgw9k,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChainmail003,l1m2xt8z,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines003,ru3ms4xj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles019,by1m2fjr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTactilePaving001,hg312vn5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines015,h8xlydkg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround007,mzap0ngl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nDiamondPlate004,wq3uecds,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPlastic002,7fxa9qz0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones003,4m5efg0c,2K-JPG\nRock003,zsbq3tmn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSurfaceImperfections010,3bwvnuqi,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines009,5f73yvwm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones019,bsgdlazn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel007,w4l69kiz,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalWalkway003,csetiz4d,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nManholeCover004,v5b3zqh4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones011,46havw7p,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones013,nw13czka,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChainmail002,erskm34t,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign018,0n524guq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFabric014,t3uol1ea,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround006,snqryjhm,2K-JPG\nAsphalt008,xklthsv0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nDiamondPlate002,9csj3x0u,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines018,0jk67f4c,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nIce001,nemx3dw0,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nManholeCover003,rqe5f386,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround014,wn83dtx7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines006,pqesof4r,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround011,budr8j4s,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines012,1bhpj9ew,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround009,9coygd76,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles023,uyfmq62x,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nScratches002,40p6f7rx,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones007,beh38ruk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeaking005,jnt537e1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround010,pq8ot1mu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodChips001,iuq679ha,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSmear005,3qz2y0f9,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign005,vfsygant,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign026,i9he74ut,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nScratches001,0aetn5mg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones005,mxfhagt3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalWalkway007,upgrnlvc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines011,z6kfqh4g,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFingerprints004,4igc8nd1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nWoodFloor002,wge3ifak,1K-JPG|1K-PNG|2K-JPG\nSmear002,60dsu4km,2K-JPG\nPavingStones020,gsb2kryj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRust001,8imbws7k,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel006,9avfodzl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt006,d3f6pbre,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign017,mpwc9ngv,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones012,ml0bfnx5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nFacade003,xahvbi8p,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign016,1xtlsu7b,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nBricks004,ufo9eivk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround008,ray4ud2m,2K-JPG\nPavingStones009,yljak9tn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign014,qw7h6svo,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign011,wsx70gti,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign015,ln0vxjpa,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSurfaceImperfections006,ex51zsdl,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign006,nl5y7hjc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones014,d2v4s13u,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingEdge001,xcjo45fk,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nManholeCover002,buh08m9q,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGrate001,7tex3i5z,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones023,bqc8gjkr,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign020,lvsm1otb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround004,zhg0u634,2K-JPG\nSign024,x3kthbsj,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeaking001,94tlcewu,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign013,ui1bxan2,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel005,chs1e3d6,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRock001,7493pfas,2K-JPG\nSign010,s85ixgt4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines016,6c4wlnma,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones008,z2vjstqf,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPavingStones004,h8xkqfa5,2K-JPG\nLeaking002,zbouygvx,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPineNeedles001,8kmndx7e,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines017,j53glow4,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel001,dgu7q13h,2K-JPG\nTiles005,jdt3sw0c,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt005,e78pmroc,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTape002,y8vqje9z,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign012,m81e30uy,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nCandy003,5p2n3hm1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign019,5kqzphy7,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nLeaking003,506hdi43,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTreeEnd002,z4t8b6dw,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles016,kex2nva5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nPainting001,x9rhiuv3,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGround005,c0eosbx9,2K-JPG\nRock004,wvkyifa5,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalWalkway001,9qobc130,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSmear004,81z4t36o,2K-JPG\nCandy002,cabkmj0p,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nAsphalt004,y6efi58c,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nManholeCover001,7jni43rm,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel003,l95pgnw1,2K-JPG\nChristmasTreeOrnament001,ze6xqmk8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSurfaceImperfections005,i0dok751,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSmear006,39gl5z21,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChristmasTreeOrnament003,tfcusl4z,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines004,bwikog13,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalWalkway002,le756ph1,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles004,8ef5tnrg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTiles003,9li8fwon,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalWalkway009,6l48eipg,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSign001,234i9t7q,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTape003,qfs3921u,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nGravel002,m1tsqpgf,2K-JPG\nFacade004,ao476bg8,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSmear001,nx0qula2,2K-JPG\nSurfaceImperfections004,8liruq7g,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nChristmasTreeOrnament002,ydts3bqa,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalWalkway008,19voxcsn,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nMetalWalkway004,y3kwnafb,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nSmear003,kvln4qo8,2K-JPG\nMetalWalkway005,pdv0w2lq,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nRoadLines005,npe27y0z,1K-JPG|1K-PNG|2K-JPG|2K-PNG\nTreeEnd001,98v23gqc,1K-JPG|1K-PNG|2K-JPG\nSticker001,2molsz7d,2K-JPG");(new class extends Hr{constructor(e){super(e),this.type=1009}parse(e){const t=function(e,t){switch(e){case 1:console.error("THREE.RGBELoader Read Error: "+(t||""));break;case 2:console.error("THREE.RGBELoader Write Error: "+(t||""));break;case 3:console.error("THREE.RGBELoader Bad File Format: "+(t||""));break;default:case 4:console.error("THREE.RGBELoader: Error: "+(t||""))}return-1},n=function(e,t,n){t=t||1024;let i=e.pos,r=-1,a=0,o="",s=String.fromCharCode.apply(null,new Uint16Array(e.subarray(i,i+128)));for(;0>(r=s.indexOf("\n"))&&a<t&&i<e.byteLength;)o+=s,a+=s.length,i+=128,s+=String.fromCharCode.apply(null,new Uint16Array(e.subarray(i,i+128)));return-1<r&&(!1!==n&&(e.pos+=a+r+1),o+s.slice(0,r))},i=function(e,t,n,i){const r=e[t+3],a=Math.pow(2,r-128)/255;n[i+0]=e[t+0]*a,n[i+1]=e[t+1]*a,n[i+2]=e[t+2]*a},r=function(e,t,n,i){const r=e[t+3],a=Math.pow(2,r-128)/255;n[i+0]=Zr.toHalfFloat(e[t+0]*a),n[i+1]=Zr.toHalfFloat(e[t+1]*a),n[i+2]=Zr.toHalfFloat(e[t+2]*a)},a=new Uint8Array(e);a.pos=0;const o=function(e){const i=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,r=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,a=/^\s*FORMAT=(\S+)\s*$/,o=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,s={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let l,c;if(e.pos>=e.byteLength||!(l=n(e)))return t(1,"no header found");if(!(c=l.match(/^#\?(\S+)/)))return t(3,"bad initial token");for(s.valid|=1,s.programtype=c[1],s.string+=l+"\n";l=n(e),!1!==l;)if(s.string+=l+"\n","#"!==l.charAt(0)){if((c=l.match(i))&&(s.gamma=parseFloat(c[1],10)),(c=l.match(r))&&(s.exposure=parseFloat(c[1],10)),(c=l.match(a))&&(s.valid|=2,s.format=c[1]),(c=l.match(o))&&(s.valid|=4,s.height=parseInt(c[1],10),s.width=parseInt(c[2],10)),2&s.valid&&4&s.valid)break}else s.comments+=l+"\n";return 2&s.valid?4&s.valid?s:t(3,"missing image size specifier"):t(3,"missing format specifier")}(a);if(-1!==o){const e=o.width,n=o.height,s=function(e,n,i){const r=n;if(r<8||r>32767||2!==e[0]||2!==e[1]||128&e[2])return new Uint8Array(e);if(r!==(e[2]<<8|e[3]))return t(3,"wrong scanline width");const a=new Uint8Array(4*n*i);if(!a.length)return t(4,"unable to allocate buffer space");let o=0,s=0;const l=4*r,c=new Uint8Array(4),h=new Uint8Array(l);let u=i;for(;u>0&&s<e.byteLength;){if(s+4>e.byteLength)return t(1);if(c[0]=e[s++],c[1]=e[s++],c[2]=e[s++],c[3]=e[s++],2!=c[0]||2!=c[1]||(c[2]<<8|c[3])!=r)return t(3,"bad rgbe scanline format");let n,i=0;for(;i<l&&s<e.byteLength;){n=e[s++];const r=n>128;if(r&&(n-=128),0===n||i+n>l)return t(3,"bad scanline data");if(r){const t=e[s++];for(let e=0;e<n;e++)h[i++]=t}else h.set(e.subarray(s,s+n),i),i+=n,s+=n}const d=r;for(let e=0;e<d;e++){let t=0;a[o]=h[e+t],t+=r,a[o+1]=h[e+t],t+=r,a[o+2]=h[e+t],t+=r,a[o+3]=h[e+t],o+=4}u--}return a}(a.subarray(a.pos),e,n);if(-1!==s){let t,a,l,c;switch(this.type){case 1009:t=s,a=1023,l=1009;break;case 1015:c=s.length/4*3;const e=new Float32Array(c);for(let t=0;t<c;t++)i(s,4*t,e,3*t);t=e,a=1022,l=1015;break;case 1016:c=s.length/4*3;const n=new Uint16Array(c);for(let e=0;e<c;e++)r(s,4*e,n,3*e);t=n,a=1022,l=1016;break;default:console.error("THREE.RGBELoader: unsupported type: ",this.type)}return{width:e,height:n,data:t,header:o.string,gamma:o.gamma,exposure:o.exposure,format:a,type:l}}}return null}setDataType(e){return this.type=e,this}load(e,t,n,i){return super.load(e,(function(e,n){switch(e.type){case 1009:e.encoding=3002,e.minFilter=1003,e.magFilter=1003,e.generateMipmaps=!1,e.flipY=!0;break;case 1015:case 1016:e.encoding=3e3,e.minFilter=1006,e.magFilter=1006,e.generateMipmaps=!1,e.flipY=!0}t&&t(e,n)}),n,i)}}).load("https://dl.polyhaven.com/file/ph-assets/HDRIs/hdr/1k/photo_studio_01_1k.hdr",(function(e){var t=Ba.fromEquirectangular(e);Ia.environment=t.texture,Ba.dispose()}));var Va,ja=new Vr(16777215,.1);function qa(){var e=window.innerWidth,t=window.innerHeight,n=window.innerWidth/window.innerHeight;Ha.aspect=n,Ha.updateProjectionMatrix(),Fa.setSize(e,t)}function Xa(e){return'<a style="color: #444444" target="_blank" rel="noopener" href=\'https://cc0textures.com/view?id='+e+"'>"+e+"</a>"}Ia.add(ja),function(){var e=document.createElement("div");document.body.appendChild(e),(new Ca).load("ninjaHead_Low.obj",(function(e){var t=(Va=e.children[0]).geometry;t.attributes.uv2=t.attributes.uv,t.center(),Va.scale.multiplyScalar(25),Ia.add(Va)})),window.addEventListener("resize",qa)}(),function e(){requestAnimationFrame(e),Fa.render(Ia,Ha)}(),function(e,n,i,r){var a=document.createElement("div");n.appendChild(a),a.style.display="flex",a.style.flexDirection="row",a.style.flexWrap="wrap",a.style.justifyContent="space-between",a.style.alignItems="flex-start",a.style.alignContent="flex-start";var o=function(e,t){for(;a.firstChild;)a.removeChild(a.firstChild);for(var n=0,o=i(e,"element");n<o.length;n++){var s=o[n],l=r(s);a.appendChild(l)}};t({input:e,emptyMsg:"",minLength:1,showOnFocus:!0,preventSubmit:!0,fetch:function(t,n,r){n(i(t,"tag")),o(e.value)},onSelect:function(t,n){e.value=t.label,o(e.value)},render:function(e,t){var n=document.createElement("div");return n.textContent=e.label,n.classList.add("autocompleteItem"),n},customize:function(e,t,n,i){n.classList.add("autocompleteContainer"),console.log(n)}}),o(e.value)}(document.getElementById("inputText"),document.getElementById("gridContainer"),(function(e,t){var n=[];if("tag"===t){var i=new Set;n=Wa.findMaterials(e).map((function(e){return{label:e.name.replace(/[0-9]/g,"")}})).filter((function(e){return!i.has(e.label)&&(i.add(e.label),!0)}))}else n=Wa.findMaterials(e).slice(0,100).map((function(e){return{label:e.name,img:Wa.getPreviewLink(e.name)}}));return n}),(function(e){var t=document.createElement("div"),n=document.createElement("img");return t.classList.add("gridItem"),n.src=e.img,n.alt=e.label,n.style.width="100%",n.style.height="100%",n.onclick=function(t){var n;za.innerHTML="Loading Material: "+Xa(e.label),n=e.label,Wa.findAndLoad(n,!0,(function(e){if(e){if(Va.material){var t=Va.material.userData.textures;null==t||t.forEach((function(e){return null==e?void 0:e.dispose()})),Va.material.dispose()}Va.material=new Lr(e),Va.material.userData.textures=Array.from(Object.values(e).filter((function(e){return e.isTexture}))),za.innerHTML="Material Loaded: "+Xa(n)}}))},t.appendChild(n),t}));var Ya={},Za=Uint8Array,Qa=Uint16Array,$a=Uint32Array,eo=new Za([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),to=new Za([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),no=new Za([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),io=function(e,t){for(var n=new Qa(31),i=0;i<31;++i)n[i]=t+=1<<e[i-1];var r=new $a(n[30]);for(i=1;i<30;++i)for(var a=n[i];a<n[i+1];++a)r[a]=a-n[i]<<5|i;return[n,r]},ro=io(eo,2),ao=ro[0],oo=ro[1];ao[28]=258,oo[258]=28;for(var so=io(to,0),lo=so[0],co=so[1],ho=new Qa(32768),uo=0;uo<32768;++uo){var po=(43690&uo)>>>1|(21845&uo)<<1;po=(61680&(po=(52428&po)>>>2|(13107&po)<<2))>>>4|(3855&po)<<4,ho[uo]=((65280&po)>>>8|(255&po)<<8)>>>1}var fo=function(e,t,n){for(var i=e.length,r=0,a=new Qa(t);r<i;++r)++a[e[r]-1];var o,s=new Qa(t);for(r=0;r<t;++r)s[r]=s[r-1]+a[r-1]<<1;if(n){o=new Qa(1<<t);var l=15-t;for(r=0;r<i;++r)if(e[r])for(var c=r<<4|e[r],h=t-e[r],u=s[e[r]-1]++<<h,d=u|(1<<h)-1;u<=d;++u)o[ho[u]>>>l]=c}else for(o=new Qa(i),r=0;r<i;++r)e[r]&&(o[r]=ho[s[e[r]-1]++]>>>15-e[r]);return o},mo=new Za(288);for(uo=0;uo<144;++uo)mo[uo]=8;for(uo=144;uo<256;++uo)mo[uo]=9;for(uo=256;uo<280;++uo)mo[uo]=7;for(uo=280;uo<288;++uo)mo[uo]=8;var go=new Za(32);for(uo=0;uo<32;++uo)go[uo]=5;var Po=fo(mo,9,0),Go=fo(mo,9,1),vo=fo(go,5,0),Ko=fo(go,5,1),xo=function(e){for(var t=e[0],n=1;n<e.length;++n)e[n]>t&&(t=e[n]);return t},yo=function(e,t,n){var i=t/8|0;return(e[i]|e[i+1]<<8)>>(7&t)&n},_o=function(e,t){var n=t/8|0;return(e[n]|e[n+1]<<8|e[n+2]<<16)>>(7&t)},bo=function(e){return(e/8|0)+(7&e&&1)},wo=function(e,t,n){(null==t||t<0)&&(t=0),(null==n||n>e.length)&&(n=e.length);var i=new(e instanceof Qa?Qa:e instanceof $a?$a:Za)(n-t);return i.set(e.subarray(t,n)),i},No=function(e,t,n){var i=e.length;if(!i||n&&!n.l&&i<5)return t||new Za(0);var r=!t||n,a=!n||n.i;n||(n={}),t||(t=new Za(3*i));var o=function(e){var n=t.length;if(e>n){var i=new Za(Math.max(2*n,e));i.set(t),t=i}},s=n.f||0,l=n.p||0,c=n.b||0,h=n.l,u=n.d,d=n.m,p=n.n,f=8*i;do{if(!h){n.f=s=yo(e,l,1);var m=yo(e,l+1,3);if(l+=3,!m){var g=e[(M=bo(l)+4)-4]|e[M-3]<<8,P=M+g;if(P>i){if(a)throw"unexpected EOF";break}r&&o(c+g),t.set(e.subarray(M,P),c),n.b=c+=g,n.p=l=8*P;continue}if(1==m)h=Go,u=Ko,d=9,p=5;else{if(2!=m)throw"invalid block type";var G=yo(e,l,31)+257,v=yo(e,l+10,15)+4,K=G+yo(e,l+5,31)+1;l+=14;for(var x=new Za(K),y=new Za(19),_=0;_<v;++_)y[no[_]]=yo(e,l+3*_,7);l+=3*v;var b=xo(y),w=(1<<b)-1,N=fo(y,b,1);for(_=0;_<K;){var M,S=N[yo(e,l,w)];if(l+=15&S,(M=S>>>4)<16)x[_++]=M;else{var T=0,E=0;for(16==M?(E=3+yo(e,l,3),l+=2,T=x[_-1]):17==M?(E=3+yo(e,l,7),l+=3):18==M&&(E=11+yo(e,l,127),l+=7);E--;)x[_++]=T}}var J=x.subarray(0,G),L=x.subarray(G);d=xo(J),p=xo(L),h=fo(J,d,1),u=fo(L,p,1)}if(l>f){if(a)throw"unexpected EOF";break}}r&&o(c+131072);for(var R=(1<<d)-1,A=(1<<p)-1,C=l;;C=l){var D=(T=h[_o(e,l)&R])>>>4;if((l+=15&T)>f){if(a)throw"unexpected EOF";break}if(!T)throw"invalid length/literal";if(D<256)t[c++]=D;else{if(256==D){C=l,h=null;break}var z=D-254;if(D>264){var k=eo[_=D-257];z=yo(e,l,(1<<k)-1)+ao[_],l+=k}var F=u[_o(e,l)&A],I=F>>>4;if(!F)throw"invalid distance";l+=15&F;L=lo[I];if(I>3){k=to[I];L+=_o(e,l)&(1<<k)-1,l+=k}if(l>f){if(a)throw"unexpected EOF";break}r&&o(c+131072);for(var O=c+z;c<O;c+=4)t[c]=t[c-L],t[c+1]=t[c+1-L],t[c+2]=t[c+2-L],t[c+3]=t[c+3-L];c=O}}n.l=h,n.p=C,n.b=c,h&&(s=1,n.m=d,n.d=u,n.n=p)}while(!s);return c==t.length?t:wo(t,0,c)},Mo=function(e,t,n){n<<=7&t;var i=t/8|0;e[i]|=n,e[i+1]|=n>>>8},So=function(e,t,n){n<<=7&t;var i=t/8|0;e[i]|=n,e[i+1]|=n>>>8,e[i+2]|=n>>>16},To=function(e,t){for(var n=[],i=0;i<e.length;++i)e[i]&&n.push({s:i,f:e[i]});var r=n.length,a=n.slice();if(!r)return[Do,0];if(1==r){var o=new Za(n[0].s+1);return o[n[0].s]=1,[o,1]}n.sort((function(e,t){return e.f-t.f})),n.push({s:-1,f:25001});var s=n[0],l=n[1],c=0,h=1,u=2;for(n[0]={s:-1,f:s.f+l.f,l:s,r:l};h!=r-1;)s=n[n[c].f<n[u].f?c++:u++],l=n[c!=h&&n[c].f<n[u].f?c++:u++],n[h++]={s:-1,f:s.f+l.f,l:s,r:l};var d=a[0].s;for(i=1;i<r;++i)a[i].s>d&&(d=a[i].s);var p=new Qa(d+1),f=Eo(n[h-1],p,0);if(f>t){i=0;var m=0,g=f-t,P=1<<g;for(a.sort((function(e,t){return p[t.s]-p[e.s]||e.f-t.f}));i<r;++i){var G=a[i].s;if(!(p[G]>t))break;m+=P-(1<<f-p[G]),p[G]=t}for(m>>>=g;m>0;){var v=a[i].s;p[v]<t?m-=1<<t-p[v]++-1:++i}for(;i>=0&&m;--i){var K=a[i].s;p[K]==t&&(--p[K],++m)}f=t}return[new Za(p),f]},Eo=function(e,t,n){return-1==e.s?Math.max(Eo(e.l,t,n+1),Eo(e.r,t,n+1)):t[e.s]=n},Jo=function(e){for(var t=e.length;t&&!e[--t];);for(var n=new Qa(++t),i=0,r=e[0],a=1,o=function(e){n[i++]=e},s=1;s<=t;++s)if(e[s]==r&&s!=t)++a;else{if(!r&&a>2){for(;a>138;a-=138)o(32754);a>2&&(o(a>10?a-11<<5|28690:a-3<<5|12305),a=0)}else if(a>3){for(o(r),--a;a>6;a-=6)o(8304);a>2&&(o(a-3<<5|8208),a=0)}for(;a--;)o(r);a=1,r=e[s]}return[n.subarray(0,i),t]},Lo=function(e,t){for(var n=0,i=0;i<t.length;++i)n+=e[i]*t[i];return n},Ro=function(e,t,n){var i=n.length,r=bo(t+2);e[r]=255&i,e[r+1]=i>>>8,e[r+2]=255^e[r],e[r+3]=255^e[r+1];for(var a=0;a<i;++a)e[r+a+4]=n[a];return 8*(r+4+i)},Ao=function(e,t,n,i,r,a,o,s,l,c,h){Mo(t,h++,n),++r[256];for(var u=To(r,15),d=u[0],p=u[1],f=To(a,15),m=f[0],g=f[1],P=Jo(d),G=P[0],v=P[1],K=Jo(m),x=K[0],y=K[1],_=new Qa(19),b=0;b<G.length;++b)_[31&G[b]]++;for(b=0;b<x.length;++b)_[31&x[b]]++;for(var w=To(_,7),N=w[0],M=w[1],S=19;S>4&&!N[no[S-1]];--S);var T,E,J,L,R=c+5<<3,A=Lo(r,mo)+Lo(a,go)+o,C=Lo(r,d)+Lo(a,m)+o+14+3*S+Lo(_,N)+(2*_[16]+3*_[17]+7*_[18]);if(R<=A&&R<=C)return Ro(t,h,e.subarray(l,l+c));if(Mo(t,h,1+(C<A)),h+=2,C<A){T=fo(d,p,0),E=d,J=fo(m,g,0),L=m;var D=fo(N,M,0);Mo(t,h,v-257),Mo(t,h+5,y-1),Mo(t,h+10,S-4),h+=14;for(b=0;b<S;++b)Mo(t,h+3*b,N[no[b]]);h+=3*S;for(var z=[G,x],k=0;k<2;++k){var F=z[k];for(b=0;b<F.length;++b){var I=31&F[b];Mo(t,h,D[I]),h+=N[I],I>15&&(Mo(t,h,F[b]>>>5&127),h+=F[b]>>>12)}}}else T=Po,E=mo,J=vo,L=go;for(b=0;b<s;++b)if(i[b]>255){I=i[b]>>>18&31;So(t,h,T[I+257]),h+=E[I+257],I>7&&(Mo(t,h,i[b]>>>23&31),h+=eo[I]);var O=31&i[b];So(t,h,J[O]),h+=L[O],O>3&&(So(t,h,i[b]>>>5&8191),h+=to[O])}else So(t,h,T[i[b]]),h+=E[i[b]];return So(t,h,T[256]),h+E[256]},Co=new $a([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),Do=new Za(0),zo=function(e,t,n,i,r,a){var o=e.length,s=new Za(i+o+5*(1+Math.ceil(o/7e3))+r),l=s.subarray(i,s.length-r),c=0;if(!t||o<8)for(var h=0;h<=o;h+=65535){var u=h+65535;u<o?c=Ro(l,c,e.subarray(h,u)):(l[h]=a,c=Ro(l,c,e.subarray(h,o)))}else{for(var d=Co[t-1],p=d>>>13,f=8191&d,m=(1<<n)-1,g=new Qa(32768),P=new Qa(m+1),G=Math.ceil(n/3),v=2*G,K=function(t){return(e[t]^e[t+1]<<G^e[t+2]<<v)&m},x=new $a(25e3),y=new Qa(288),_=new Qa(32),b=0,w=0,N=(h=0,0),M=0,S=0;h<o;++h){var T=K(h),E=32767&h,J=P[T];if(g[E]=J,P[T]=E,M<=h){var L=o-h;if((b>7e3||N>24576)&&L>423){c=Ao(e,l,0,x,y,_,w,N,S,h-S,c),N=b=w=0,S=h;for(var R=0;R<286;++R)y[R]=0;for(R=0;R<30;++R)_[R]=0}var A=2,C=0,D=f,z=E-J&32767;if(L>2&&T==K(h-z))for(var k=Math.min(p,L)-1,F=Math.min(32767,h),I=Math.min(258,L);z<=F&&--D&&E!=J;){if(e[h+A]==e[h+A-z]){for(var O=0;O<I&&e[h+O]==e[h+O-z];++O);if(O>A){if(A=O,C=z,O>k)break;var H=Math.min(z,O-2),U=0;for(R=0;R<H;++R){var B=h-z+R+32768&32767,W=B-g[B]+32768&32767;W>U&&(U=W,J=B)}}}z+=(E=J)-(J=g[E])+32768&32767}if(C){x[N++]=268435456|oo[A]<<18|co[C];var V=31&oo[A],j=31&co[C];w+=eo[V]+to[j],++y[257+V],++_[j],M=h+A,++b}else x[N++]=e[h],++y[e[h]]}}c=Ao(e,l,a,x,y,_,w,N,S,h-S,c),!a&&7&c&&(c=Ro(l,c+1,Do))}return wo(s,0,i+bo(c)+r)},ko=function(){for(var e=new Int32Array(256),t=0;t<256;++t){for(var n=t,i=9;--i;)n=(1&n&&-306674912)^n>>>1;e[t]=n}return e}(),Fo=function(){var e=-1;return{p:function(t){for(var n=e,i=0;i<t.length;++i)n=ko[255&n^t[i]]^n>>>8;e=n},d:function(){return~e}}},Io=function(){var e=1,t=0;return{p:function(n){for(var i=e,r=t,a=n.length,o=0;o!=a;){for(var s=Math.min(o+2655,a);o<s;++o)r+=i+=n[o];i=(65535&i)+15*(i>>16),r=(65535&r)+15*(r>>16)}e=i,t=r},d:function(){return(255&(e%=65521))<<24|e>>>8<<16|(255&(t%=65521))<<8|t>>>8}}},Oo=function(e,t,n,i,r){return zo(e,null==t.level?6:t.level,null==t.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(e.length)))):12+t.mem,n,i,!r)},Ho=function(e,t){var n={};for(var i in e)n[i]=e[i];for(var i in t)n[i]=t[i];return n},Uo=function(e,t,n){for(var i=e(),r=e.toString(),a=r.slice(r.indexOf("[")+1,r.lastIndexOf("]")).replace(/ /g,"").split(","),o=0;o<i.length;++o){var s=i[o],l=a[o];if("function"==typeof s){t+=";"+l+"=";var c=s.toString();if(s.prototype)if(-1!=c.indexOf("[native code]")){var h=c.indexOf(" ",8)+1;t+=c.slice(h,c.indexOf("(",h))}else for(var u in t+=c,s.prototype)t+=";"+l+".prototype."+u+"="+s.prototype[u].toString();else t+=c}else n[l]=s}return[t,n]},Bo=[],Wo=function(e,t,n,i){var r;if(!Bo[n]){for(var a="",o={},s=e.length-1,l=0;l<s;++l)a=(r=Uo(e[l],a,o))[0],o=r[1];Bo[n]=Uo(e[s],a,o)}var c=Ho({},Bo[n][1]);return function(e,t,n,i,r){var a=new Worker(Ya[t]||(Ya[t]=URL.createObjectURL(new Blob([e],{type:"text/javascript"}))));return a.onerror=function(e){return r(e.error,null)},a.onmessage=function(e){return r(null,e.data)},a.postMessage(n,i),a}(Bo[n][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+t.toString()+"}",n,c,function(e){var t=[];for(var n in e)(e[n]instanceof Za||e[n]instanceof Qa||e[n]instanceof $a)&&t.push((e[n]=new e[n].constructor(e[n])).buffer);return t}(c),i)},Vo=function(){return[Za,Qa,$a,eo,to,no,ao,lo,Go,Ko,ho,fo,xo,yo,_o,bo,wo,No,xs,Qo,$o]},jo=function(){return[Za,Qa,$a,eo,to,no,oo,co,Po,mo,vo,go,ho,Co,Do,fo,Mo,So,To,Eo,Jo,Lo,Ro,Ao,bo,wo,zo,Oo,Ps,Qo]},qo=function(){return[ss,hs,os,Fo,ko]},Xo=function(){return[ls,cs]},Yo=function(){return[us,os,Io]},Zo=function(){return[ds]},Qo=function(e){return postMessage(e,[e.buffer])},$o=function(e){return e&&e.size&&new Za(e.size)},es=function(e,t,n,i,r,a){var o=Wo(n,i,r,(function(e,t){o.terminate(),a(e,t)}));return o.postMessage([e,t],t.consume?[e.buffer]:[]),function(){o.terminate()}},ts=function(e){return e.ondata=function(e,t){return postMessage([e,t],[e.buffer])},function(t){return e.push(t.data[0],t.data[1])}},ns=function(e,t,n,i,r){var a,o=Wo(e,i,r,(function(e,n){e?(o.terminate(),t.ondata.call(t,e)):(n[1]&&o.terminate(),t.ondata.call(t,e,n[0],n[1]))}));o.postMessage(n),t.push=function(e,n){if(a)throw"stream finished";if(!t.ondata)throw"no stream handler";o.postMessage([e,a=n],[e.buffer])},t.terminate=function(){o.terminate()}},is=function(e,t){return e[t]|e[t+1]<<8},rs=function(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0},as=function(e,t){return rs(e,t)+4294967296*rs(e,t+4)},os=function(e,t,n){for(;n;++t)e[t]=n,n>>>=8},ss=function(e,t){var n=t.filename;if(e[0]=31,e[1]=139,e[2]=8,e[8]=t.level<2?4:9==t.level?2:0,e[9]=3,0!=t.mtime&&os(e,4,Math.floor(new Date(t.mtime||Date.now())/1e3)),n){e[3]=8;for(var i=0;i<=n.length;++i)e[i+10]=n.charCodeAt(i)}},ls=function(e){if(31!=e[0]||139!=e[1]||8!=e[2])throw"invalid gzip data";var t=e[3],n=10;4&t&&(n+=e[10]|2+(e[11]<<8));for(var i=(t>>3&1)+(t>>4&1);i>0;i-=!e[n++]);return n+(2&t)},cs=function(e){var t=e.length;return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0},hs=function(e){return 10+(e.filename&&e.filename.length+1||0)},us=function(e,t){var n=t.level,i=0==n?0:n<6?1:9==n?3:2;e[0]=120,e[1]=i<<6|(i?32-2*i:1)},ds=function(e){if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"};function ps(e,t){return t||"function"!=typeof e||(t=e,e={}),this.ondata=t,e}var fs=function(){function e(e,t){t||"function"!=typeof e||(t=e,e={}),this.ondata=t,this.o=e||{}}return e.prototype.p=function(e,t){this.ondata(Oo(e,this.o,0,0,!t),t)},e.prototype.push=function(e,t){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";this.d=t,this.p(e,t||!1)},e}(),ms=function(){return function(e,t){ns([jo,function(){return[ts,fs]}],this,ps.call(this,e,t),(function(e){var t=new fs(e.data);onmessage=ts(t)}),6)}}();function gs(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return es(e,t,[jo],(function(e){return Qo(Ps(e.data[0],e.data[1]))}),0,n)}function Ps(e,t){return Oo(e,t||{},0,0)}var Gs=function(){function e(e){this.s={},this.p=new Za(0),this.ondata=e}return e.prototype.e=function(e){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";var t=this.p.length,n=new Za(t+e.length);n.set(this.p),n.set(e,t),this.p=n},e.prototype.c=function(e){this.d=this.s.i=e||!1;var t=this.s.b,n=No(this.p,this.o,this.s);this.ondata(wo(n,t,this.s.b),this.d),this.o=wo(n,this.s.b-32768),this.s.b=this.o.length,this.p=wo(this.p,this.s.p/8|0),this.s.p&=7},e.prototype.push=function(e,t){this.e(e),this.c(t)},e}(),vs=function(){return function(e){this.ondata=e,ns([Vo,function(){return[ts,Gs]}],this,0,(function(){var e=new Gs;onmessage=ts(e)}),7)}}();function Ks(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return es(e,t,[Vo],(function(e){return Qo(xs(e.data[0],$o(e.data[1])))}),1,n)}function xs(e,t){return No(e,t)}var ys=function(){function e(e,t){this.c=Fo(),this.l=0,this.v=1,fs.call(this,e,t)}return e.prototype.push=function(e,t){fs.prototype.push.call(this,e,t)},e.prototype.p=function(e,t){this.c.p(e),this.l+=e.length;var n=Oo(e,this.o,this.v&&hs(this.o),t&&8,!t);this.v&&(ss(n,this.o),this.v=0),t&&(os(n,n.length-8,this.c.d()),os(n,n.length-4,this.l)),this.ondata(n,t)},e}(),_s=function(){return function(e,t){ns([jo,qo,function(){return[ts,fs,ys]}],this,ps.call(this,e,t),(function(e){var t=new ys(e.data);onmessage=ts(t)}),8)}}();function bs(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return es(e,t,[jo,qo,function(){return[ws]}],(function(e){return Qo(ws(e.data[0],e.data[1]))}),2,n)}function ws(e,t){t||(t={});var n=Fo(),i=e.length;n.p(e);var r=Oo(e,t,hs(t),8),a=r.length;return ss(r,t),os(r,a-8,n.d()),os(r,a-4,i),r}var Ns=function(){function e(e){this.v=1,Gs.call(this,e)}return e.prototype.push=function(e,t){if(Gs.prototype.e.call(this,e),this.v){var n=this.p.length>3?ls(this.p):4;if(n>=this.p.length&&!t)return;this.p=this.p.subarray(n),this.v=0}if(t){if(this.p.length<8)throw"invalid gzip stream";this.p=this.p.subarray(0,-8)}Gs.prototype.c.call(this,t)},e}(),Ms=function(){return function(e){this.ondata=e,ns([Vo,Xo,function(){return[ts,Gs,Ns]}],this,0,(function(){var e=new Ns;onmessage=ts(e)}),9)}}();function Ss(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return es(e,t,[Vo,Xo,function(){return[Ts]}],(function(e){return Qo(Ts(e.data[0]))}),3,n)}function Ts(e,t){return No(e.subarray(ls(e),-8),t||new Za(cs(e)))}var Es=function(){function e(e,t){this.c=Io(),this.v=1,fs.call(this,e,t)}return e.prototype.push=function(e,t){fs.prototype.push.call(this,e,t)},e.prototype.p=function(e,t){this.c.p(e);var n=Oo(e,this.o,this.v&&2,t&&4,!t);this.v&&(us(n,this.o),this.v=0),t&&os(n,n.length-4,this.c.d()),this.ondata(n,t)},e}(),Js=function(){return function(e,t){ns([jo,Yo,function(){return[ts,fs,Es]}],this,ps.call(this,e,t),(function(e){var t=new Es(e.data);onmessage=ts(t)}),10)}}();function Ls(e,t){t||(t={});var n=Io();n.p(e);var i=Oo(e,t,2,4);return us(i,t),os(i,i.length-4,n.d()),i}var Rs=function(){function e(e){this.v=1,Gs.call(this,e)}return e.prototype.push=function(e,t){if(Gs.prototype.e.call(this,e),this.v){if(this.p.length<2&&!t)return;this.p=this.p.subarray(2),this.v=0}if(t){if(this.p.length<4)throw"invalid zlib stream";this.p=this.p.subarray(0,-4)}Gs.prototype.c.call(this,t)},e}(),As=function(){return function(e){this.ondata=e,ns([Vo,Zo,function(){return[ts,Gs,Rs]}],this,0,(function(){var e=new Rs;onmessage=ts(e)}),11)}}();function Cs(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return es(e,t,[Vo,Zo,function(){return[Ds]}],(function(e){return Qo(Ds(e.data[0],$o(e.data[1])))}),5,n)}function Ds(e,t){return No((ds(e),e.subarray(2,-4)),t)}var zs=function(){function e(e){this.G=Ns,this.I=Gs,this.Z=Rs,this.ondata=e}return e.prototype.push=function(e,t){if(!this.ondata)throw"no stream handler";if(this.s)this.s.push(e,t);else{if(this.p&&this.p.length){var n=new Za(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length)}else this.p=e;if(this.p.length>2){var i=this,r=function(){i.ondata.apply(i,arguments)};this.s=31==this.p[0]&&139==this.p[1]&&8==this.p[2]?new this.G(r):8!=(15&this.p[0])||this.p[0]>>4>7||(this.p[0]<<8|this.p[1])%31?new this.I(r):new this.Z(r),this.s.push(this.p,t),this.p=null}}},e}(),ks=function(){function e(e){this.G=Ms,this.I=vs,this.Z=As,this.ondata=e}return e.prototype.push=function(e,t){zs.prototype.push.call(this,e,t)},e}();var Fs=function(e,t,n,i){for(var r in e){var a=e[r],o=t+r;a instanceof Za?n[o]=[a,i]:Array.isArray(a)?n[o]=[a[0],Ho(i,a[1])]:Fs(a,o+"/",n,i)}},Is="undefined"!=typeof TextEncoder&&new TextEncoder,Os="undefined"!=typeof TextDecoder&&new TextDecoder,Hs=0;try{Os.decode(Do,{stream:!0}),Hs=1}catch(e){}var Us=function(e){for(var t="",n=0;;){var i=e[n++],r=(i>127)+(i>223)+(i>239);if(n+r>e.length)return[t,wo(e,n-1)];r?3==r?(i=((15&i)<<18|(63&e[n++])<<12|(63&e[n++])<<6|63&e[n++])-65536,t+=String.fromCharCode(55296|i>>10,56320|1023&i)):t+=1&r?String.fromCharCode((31&i)<<6|63&e[n++]):String.fromCharCode((15&i)<<12|(63&e[n++])<<6|63&e[n++]):t+=String.fromCharCode(i)}},Bs=function(){function e(e){this.ondata=e,Hs?this.t=new TextDecoder:this.p=Do}return e.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(t=!!t,this.t){if(this.ondata(this.t.decode(e,{stream:!0}),t),t){if(this.t.decode().length)throw"invalid utf-8 data";this.t=null}}else{if(!this.p)throw"stream finished";var n=new Za(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length);var i=Us(n),r=i[0],a=i[1];if(t){if(a.length)throw"invalid utf-8 data";this.p=null}else this.p=a;this.ondata(r,t)}},e}(),Ws=function(){function e(e){this.ondata=e}return e.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(this.d)throw"stream finished";this.ondata(Vs(e),this.d=t||!1)},e}();function Vs(e,t){if(t){for(var n=new Za(e.length),i=0;i<e.length;++i)n[i]=e.charCodeAt(i);return n}if(Is)return Is.encode(e);var r=e.length,a=new Za(e.length+(e.length>>1)),o=0,s=function(e){a[o++]=e};for(i=0;i<r;++i){if(o+5>a.length){var l=new Za(o+8+(r-i<<1));l.set(a),a=l}var c=e.charCodeAt(i);c<128||t?s(c):c<2048?(s(192|c>>6),s(128|63&c)):c>55295&&c<57344?(s(240|(c=65536+(1047552&c)|1023&e.charCodeAt(++i))>>18),s(128|c>>12&63),s(128|c>>6&63),s(128|63&c)):(s(224|c>>12),s(128|c>>6&63),s(128|63&c))}return wo(a,0,o)}function js(e,t){if(t){for(var n="",i=0;i<e.length;i+=16384)n+=String.fromCharCode.apply(null,e.subarray(i,i+16384));return n}if(Os)return Os.decode(e);var r=Us(e),a=r[0];if(r[1].length)throw"invalid utf-8 data";return a}var qs=function(e){return 1==e?3:e<6?2:9==e?1:0},Xs=function(e,t){return t+30+is(e,t+26)+is(e,t+28)},Ys=function(e,t,n){var i=is(e,t+28),r=js(e.subarray(t+46,t+46+i),!(2048&is(e,t+8))),a=t+46+i,o=rs(e,t+20),s=n&&4294967295==o?Zs(e,a):[o,rs(e,t+24),rs(e,t+42)],l=s[0],c=s[1],h=s[2];return[is(e,t+10),l,c,r,a+is(e,t+30)+is(e,t+32),h]},Zs=function(e,t){for(;1!=is(e,t);t+=4+is(e,t+2));return[as(e,t+12),as(e,t+4),as(e,t+20)]},Qs=function(e){var t=0;if(e)for(var n in e){var i=e[n].length;if(i>65535)throw"extra field too long";t+=i+4}return t},$s=function(e,t,n,i,r,a,o,s){var l=i.length,c=n.extra,h=s&&s.length,u=Qs(c);os(e,t,null!=o?33639248:67324752),t+=4,null!=o&&(e[t++]=20,e[t++]=n.os),e[t]=20,t+=2,e[t++]=n.flag<<1|(null==a&&8),e[t++]=r&&8,e[t++]=255&n.compression,e[t++]=n.compression>>8;var d=new Date(null==n.mtime?Date.now():n.mtime),p=d.getFullYear()-1980;if(p<0||p>119)throw"date not in range 1980-2099";if(os(e,t,p<<25|d.getMonth()+1<<21|d.getDate()<<16|d.getHours()<<11|d.getMinutes()<<5|d.getSeconds()>>>1),t+=4,null!=a&&(os(e,t,n.crc),os(e,t+4,a),os(e,t+8,n.size)),os(e,t+12,l),os(e,t+14,u),t+=16,null!=o&&(os(e,t,h),os(e,t+6,n.attrs),os(e,t+10,o),t+=14),e.set(i,t),t+=l,u)for(var f in c){var m=c[f],g=m.length;os(e,t,+f),os(e,t+2,g),e.set(m,t+4),t+=4+g}return h&&(e.set(s,t),t+=h),t},el=function(e,t,n,i,r){os(e,t,101010256),os(e,t+8,n),os(e,t+10,n),os(e,t+12,i),os(e,t+16,r)},tl=function(){function e(e){this.filename=e,this.c=Fo(),this.size=0,this.compression=0}return e.prototype.process=function(e,t){this.ondata(null,e,t)},e.prototype.push=function(e,t){if(!this.ondata)throw"no callback - add to ZIP archive before pushing";this.c.p(e),this.size+=e.length,t&&(this.crc=this.c.d()),this.process(e,t||!1)},e}(),nl=function(){function e(e,t){var n=this;t||(t={}),tl.call(this,e),this.d=new fs(t,(function(e,t){n.ondata(null,e,t)})),this.compression=8,this.flag=qs(t.level)}return e.prototype.process=function(e,t){try{this.d.push(e,t)}catch(e){this.ondata(e,null,t)}},e.prototype.push=function(e,t){tl.prototype.push.call(this,e,t)},e}(),il=function(){function e(e,t){var n=this;t||(t={}),tl.call(this,e),this.d=new ms(t,(function(e,t,i){n.ondata(e,t,i)})),this.compression=8,this.flag=qs(t.level),this.terminate=this.d.terminate}return e.prototype.process=function(e,t){this.d.push(e,t)},e.prototype.push=function(e,t){tl.prototype.push.call(this,e,t)},e}(),rl=function(){function e(e){this.ondata=e,this.u=[],this.d=1}return e.prototype.add=function(e){var t=this;if(2&this.d)throw"stream finished";var n=Vs(e.filename),i=n.length,r=e.comment,a=r&&Vs(r),o=i!=e.filename.length||a&&r.length!=a.length,s=i+Qs(e.extra)+30;if(i>65535)throw"filename too long";var l=new Za(s);$s(l,0,e,n,o);var c=[l],h=function(){for(var e=0,n=c;e<n.length;e++){var i=n[e];t.ondata(null,i,!1)}c=[]},u=this.d;this.d=0;var d=this.u.length,p=Ho(e,{f:n,u:o,o:a,t:function(){e.terminate&&e.terminate()},r:function(){if(h(),u){var e=t.u[d+1];e?e.r():t.d=1}u=1}}),f=0;e.ondata=function(n,i,r){if(n)t.ondata(n,i,r),t.terminate();else if(f+=i.length,c.push(i),r){var a=new Za(16);os(a,0,134695760),os(a,4,e.crc),os(a,8,f),os(a,12,e.size),c.push(a),p.c=f,p.b=s+f+16,p.crc=e.crc,p.size=e.size,u&&p.r(),u=1}else u&&h()},this.u.push(p)},e.prototype.end=function(){var e=this;if(2&this.d){if(1&this.d)throw"stream finishing";throw"stream finished"}this.d?this.e():this.u.push({r:function(){1&e.d&&(e.u.splice(-1,1),e.e())},t:function(){}}),this.d=3},e.prototype.e=function(){for(var e=0,t=0,n=0,i=0,r=this.u;i<r.length;i++){n+=46+(l=r[i]).f.length+Qs(l.extra)+(l.o?l.o.length:0)}for(var a=new Za(n+22),o=0,s=this.u;o<s.length;o++){var l=s[o];$s(a,e,l,l.f,l.u,l.c,t,l.o),e+=46+l.f.length+Qs(l.extra)+(l.o?l.o.length:0),t+=l.b}el(a,e,this.u.length,n,t),this.ondata(null,a,!0),this.d=2},e.prototype.terminate=function(){for(var e=0,t=this.u;e<t.length;e++){t[e].t()}this.d=2},e}();var al=function(){function e(){}return e.prototype.push=function(e,t){this.ondata(null,e,t)},e.compression=0,e}(),ol=function(){function e(){var e=this;this.i=new Gs((function(t,n){e.ondata(null,t,n)}))}return e.prototype.push=function(e,t){try{this.i.push(e,t)}catch(n){this.ondata(n,e,t)}},e.compression=8,e}(),sl=function(){function e(e,t){var n=this;t<32e4?this.i=new Gs((function(e,t){n.ondata(null,e,t)})):(this.i=new vs((function(e,t,i){n.ondata(e,t,i)})),this.terminate=this.i.terminate)}return e.prototype.push=function(e,t){this.i.terminate&&(e=wo(e,0)),this.i.push(e,t)},e.compression=8,e}(),ll=function(){function e(e){this.onfile=e,this.k=[],this.o={0:al},this.p=Do}return e.prototype.push=function(e,t){var n=this;if(!this.onfile)throw"no callback";if(!this.p)throw"stream finished";if(this.c>0){var i=Math.min(this.c,e.length),r=e.subarray(0,i);if(this.c-=i,this.d?this.d.push(r,!this.c):this.k[0].push(r),(e=e.subarray(i)).length)return this.push(e,t)}else{var a=0,o=0,s=void 0,l=void 0;this.p.length?e.length?((l=new Za(this.p.length+e.length)).set(this.p),l.set(e,this.p.length)):l=this.p:l=e;for(var c=l.length,h=this.c,u=h&&this.d,d=function(){var e,t=rs(l,o);if(67324752==t){a=1,s=o,p.d=null,p.c=0;var i=is(l,o+6),r=is(l,o+8),u=2048&i,d=8&i,f=is(l,o+26),m=is(l,o+28);if(c>o+30+f+m){var g=[];p.k.unshift(g),a=2;var P,G=rs(l,o+18),v=rs(l,o+22),K=js(l.subarray(o+30,o+=30+f),!u);4294967295==G?(e=d?[-2]:Zs(l,o),G=e[0],v=e[1]):d&&(G=-1),o+=m,p.c=G;var x={name:K,compression:r,start:function(){if(!x.ondata)throw"no callback";if(G){var e=n.o[r];if(!e)throw"unknown compression type "+r;(P=G<0?new e(K):new e(K,G,v)).ondata=function(e,t,n){x.ondata(e,t,n)};for(var t=0,i=g;t<i.length;t++){var a=i[t];P.push(a,!1)}n.k[0]==g&&n.c?n.d=P:P.push(Do,!0)}else x.ondata(null,Do,!0)},terminate:function(){P&&P.terminate&&P.terminate()}};G>=0&&(x.size=G,x.originalSize=v),p.onfile(x)}return"break"}if(h){if(134695760==t)return s=o+=12+(-2==h&&8),a=3,p.c=0,"break";if(33639248==t)return s=o-=4,a=3,p.c=0,"break"}},p=this;o<c-4;++o){if("break"===d())break}if(this.p=Do,h<0){var f=a?l.subarray(0,s-12-(-2==h&&8)-(134695760==rs(l,s-16)&&4)):l.subarray(0,o);u?u.push(f,!!a):this.k[+(2==a)].push(f)}if(2&a)return this.push(l.subarray(o),t);this.p=l.subarray(o)}if(t){if(this.c)throw"invalid zip file";this.p=null}},e.prototype.register=function(e){this.o[e.compression]=e},e}();var cl=Object.freeze({__proto__:null,Deflate:fs,AsyncDeflate:ms,deflate:gs,deflateSync:Ps,Inflate:Gs,AsyncInflate:vs,inflate:Ks,inflateSync:xs,Gzip:ys,AsyncGzip:_s,gzip:bs,gzipSync:ws,Gunzip:Ns,AsyncGunzip:Ms,gunzip:Ss,gunzipSync:Ts,Zlib:Es,AsyncZlib:Js,zlib:function(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return es(e,t,[jo,Yo,function(){return[Ls]}],(function(e){return Qo(Ls(e.data[0],e.data[1]))}),4,n)},zlibSync:Ls,Unzlib:Rs,AsyncUnzlib:As,unzlib:Cs,unzlibSync:Ds,compress:bs,AsyncCompress:_s,compressSync:ws,Compress:ys,Decompress:zs,AsyncDecompress:ks,decompress:function(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return 31==e[0]&&139==e[1]&&8==e[2]?Ss(e,t,n):8!=(15&e[0])||e[0]>>4>7||(e[0]<<8|e[1])%31?Ks(e,t,n):Cs(e,t,n)},decompressSync:function(e,t){return 31==e[0]&&139==e[1]&&8==e[2]?Ts(e,t):8!=(15&e[0])||e[0]>>4>7||(e[0]<<8|e[1])%31?xs(e,t):Ds(e,t)},DecodeUTF8:Bs,EncodeUTF8:Ws,strToU8:Vs,strFromU8:js,ZipPassThrough:tl,ZipDeflate:nl,AsyncZipDeflate:il,Zip:rl,zip:function(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";var i={};Fs(e,"",i,t);var r=Object.keys(i),a=r.length,o=0,s=0,l=a,c=new Array(a),h=[],u=function(){for(var e=0;e<h.length;++e)h[e]()},d=function(){var e=new Za(s+22),t=o,i=s-o;s=0;for(var r=0;r<l;++r){var a=c[r];try{var h=a.c.length;$s(e,s,a,a.f,a.u,h);var u=30+a.f.length+Qs(a.extra),d=s+u;e.set(a.c,d),$s(e,o,a,a.f,a.u,h,s,a.m),o+=16+u+(a.m?a.m.length:0),s=d+h}catch(e){return n(e,null)}}el(e,o,c.length,i,t),n(null,e)};a||d();for(var p=function(e){var t=r[e],l=i[t],p=l[0],f=l[1],m=Fo(),g=p.length;m.p(p);var P=Vs(t),G=P.length,v=f.comment,K=v&&Vs(v),x=K&&K.length,y=Qs(f.extra),_=0==f.level?0:8,b=function(i,r){if(i)u(),n(i,null);else{var l=r.length;c[e]=Ho(f,{size:g,crc:m.d(),c:r,f:P,m:K,u:G!=t.length||K&&v.length!=x,compression:_}),o+=30+G+y+l,s+=76+2*(G+y)+(x||0)+l,--a||d()}};if(G>65535&&b("filename too long",null),_)if(g<16e4)try{b(null,Ps(p,f))}catch(e){b(e,null)}else h.push(gs(p,f,b));else b(null,p)},f=0;f<l;++f)p(f);return u},zipSync:function(e,t){t||(t={});var n={},i=[];Fs(e,"",n,t);var r=0,a=0;for(var o in n){var s=n[o],l=s[0],c=s[1],h=0==c.level?0:8,u=(_=Vs(o)).length,d=c.comment,p=d&&Vs(d),f=p&&p.length,m=Qs(c.extra);if(u>65535)throw"filename too long";var g=h?Ps(l,c):l,P=g.length,G=Fo();G.p(l),i.push(Ho(c,{size:l.length,crc:G.d(),c:g,f:_,m:p,u:u!=o.length||p&&d.length!=f,o:r,compression:h})),r+=30+u+m+P,a+=76+2*(u+m)+(f||0)+P}for(var v=new Za(a+22),K=r,x=a-r,y=0;y<i.length;++y){var _=i[y];$s(v,_.o,_,_.f,_.u,_.c.length);var b=30+_.f.length+Qs(_.extra);v.set(_.c,_.o+b),$s(v,r,_,_.f,_.u,_.c.length,_.o,_.m),r+=16+b+(_.m?_.m.length:0)}return el(v,r,i.length,x,K),v},UnzipPassThrough:al,UnzipInflate:ol,AsyncUnzipInflate:sl,Unzip:ll,unzip:function(e,t){if("function"!=typeof t)throw"no callback";for(var n=[],i=function(){for(var e=0;e<n.length;++e)n[e]()},r={},a=e.length-22;101010256!=rs(e,a);--a)if(!a||e.length-a>65558)return void t("invalid zip file",null);var o=is(e,a+8);o||t(null,{});var s=o,l=rs(e,a+16),c=4294967295==l;if(c){if(a=rs(e,a-12),101075792!=rs(e,a))return void t("invalid zip file",null);s=o=rs(e,a+32),l=rs(e,a+48)}for(var h=function(a){var s=Ys(e,l,c),h=s[0],u=s[1],d=s[2],p=s[3],f=s[4],m=s[5],g=Xs(e,m);l=f;var P=function(e,n){e?(i(),t(e,null)):(r[p]=n,--o||t(null,r))};if(h)if(8==h){var G=e.subarray(g,g+u);if(u<32e4)try{P(null,xs(G,new Za(d)))}catch(e){P(e,null)}else n.push(Ks(G,{size:d},P))}else P("unknown compression type "+h,null);else P(null,wo(e,g,g+u))},u=0;u<s;++u)h();return i},unzipSync:function(e){for(var t={},n=e.length-22;101010256!=rs(e,n);--n)if(!n||e.length-n>65558)throw"invalid zip file";var i=is(e,n+8);if(!i)return{};var r=rs(e,n+16),a=4294967295==r;if(a){if(n=rs(e,n-12),101075792!=rs(e,n))throw"invalid zip file";i=rs(e,n+32),r=rs(e,n+48)}for(var o=0;o<i;++o){var s=Ys(e,r,a),l=s[0],c=s[1],h=s[2],u=s[3],d=s[4],p=s[5],f=Xs(e,p);if(r=d,l){if(8!=l)throw"unknown compression type "+l;t[u]=xs(e.subarray(f,f+c),new Za(h))}else t[u]=wo(e,f,f+c)}return t}});
//# sourceMappingURL=lib.js.map
