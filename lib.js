"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var e={exports:{}},t=e.exports=function(e){var t,n,i=document,r=i.createElement("div"),a=r.style,o=navigator.userAgent,s=-1!==o.indexOf("Firefox")&&-1!==o.indexOf("Mobile"),P=e.debounceWaitMs||0,G=e.preventSubmit||!1,K=e.disableAutoSelect||!1,l=s?"input":"keyup",c=[],h="",u=2,d=e.showOnFocus,N=0;if(void 0!==e.minLength&&(u=e.minLength),!e.input)throw new Error("input undefined");var p=e.input;function J(){n&&window.clearTimeout(n)}function f(){return!!r.parentNode}function m(){var e;N++,c=[],h="",t=void 0,(e=r.parentNode)&&e.removeChild(r)}function g(){for(;r.firstChild;)r.removeChild(r.firstChild);var n=function(e,t){var n=i.createElement("div");return n.textContent=e.label||"",n};e.render&&(n=e.render);var o=function(e,t){var n=i.createElement("div");return n.textContent=e,n};e.renderGroup&&(o=e.renderGroup);var s=i.createDocumentFragment(),P="#9?$";if(c.forEach((function(i){if(i.group&&i.group!==P){P=i.group;var r=o(i.group,h);r&&(r.className+=" group",s.appendChild(r))}var a=n(i,h);a&&(a.addEventListener("click",(function(t){e.onSelect(i,p),m(),t.preventDefault(),t.stopPropagation()})),i===t&&(a.className+=" selected"),s.appendChild(a))})),r.appendChild(s),c.length<1){if(!e.emptyMsg)return void m();var G=i.createElement("div");G.className="empty",G.textContent=e.emptyMsg,r.appendChild(G)}r.parentNode||i.body.appendChild(r),function(){if(f()){a.height="auto",a.width=p.offsetWidth+"px";var t,n=0;o(),o(),e.customize&&t&&e.customize(p,t,r,n)}function o(){var e=i.documentElement,r=e.clientTop||i.body.clientTop||0,o=e.clientLeft||i.body.clientLeft||0,s=window.pageYOffset||e.scrollTop,P=window.pageXOffset||e.scrollLeft,G=(t=p.getBoundingClientRect()).top+p.offsetHeight+s-r,K=t.left+P-o;a.top=G+"px",a.left=K+"px",(n=window.innerHeight-(t.top+p.offsetHeight))<0&&(n=0),a.top=G+"px",a.bottom="",a.left=K+"px",a.maxHeight=n+"px"}}(),function(){var e=r.getElementsByClassName("selected");if(e.length>0){var t=e[0],n=t.previousElementSibling;if(n&&-1!==n.className.indexOf("group")&&!n.previousElementSibling&&(t=n),t.offsetTop<r.scrollTop)r.scrollTop=t.offsetTop;else{var i=t.offsetTop+t.offsetHeight,a=r.scrollTop+r.offsetHeight;i>a&&(r.scrollTop+=i-a)}}}()}function v(){f()&&g()}function x(){v()}function y(e){e.target!==r?v():e.preventDefault()}function _(e){for(var t=e.which||e.keyCode||0,n=0,i=[38,13,27,39,37,16,17,18,20,91,9];n<i.length;n++)if(t===i[n])return;t>=112&&t<=123||40===t&&f()||M(0)}function b(n){var i=n.which||n.keyCode||0;if(38===i||40===i||27===i){var r=f();if(27===i)m();else{if(!r||c.length<1)return;38===i?function(){if(c.length<1)t=void 0;else if(t===c[0])t=c[c.length-1];else for(var e=c.length-1;e>0;e--)if(t===c[e]||1===e){t=c[e-1];break}}():function(){if(c.length<1&&(t=void 0),t&&t!==c[c.length-1]){for(var e=0;e<c.length-1;e++)if(t===c[e]){t=c[e+1];break}}else t=c[0]}(),g()}return n.preventDefault(),void(r&&n.stopPropagation())}13===i&&(t&&(e.onSelect(t,p),m()),G&&n.preventDefault())}function w(){d&&M(1)}function M(i){var r=++N,a=p.value;a.length>=u||1===i?(J(),n=window.setTimeout((function(){e.fetch(a,(function(e){N===r&&e&&(h=a,t=(c=e).length<1||K?void 0:c[0],g())}),i)}),0===i?P:0)):m()}function S(){setTimeout((function(){i.activeElement!==p&&m()}),200)}return r.className="autocomplete "+(e.className||""),a.position="absolute",r.addEventListener("mousedown",(function(e){e.stopPropagation(),e.preventDefault()})),r.addEventListener("focus",(function(){return p.focus()})),p.addEventListener("keydown",b),p.addEventListener(l,_),p.addEventListener("blur",S),p.addEventListener("focus",w),window.addEventListener("resize",x),i.addEventListener("scroll",y,!0),{destroy:function(){p.removeEventListener("focus",w),p.removeEventListener("keydown",b),p.removeEventListener(l,_),p.removeEventListener("blur",S),window.removeEventListener("resize",x),i.removeEventListener("scroll",y,!0),J(),m()}}};
/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const n=0,i=1,r=2,a=0,o=1,s=2,P=3;class G{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,i=n.length;t<i;t++)n[t].call(this,e);e.target=null}}}const K=[];for(let e=0;e<256;e++)K[e]=(e<16?"0":"")+e.toString(16);const l=Math.PI/180,c=180/Math.PI;function h(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(K[255&e]+K[e>>8&255]+K[e>>16&255]+K[e>>24&255]+"-"+K[255&t]+K[t>>8&255]+"-"+K[t>>16&15|64]+K[t>>24&255]+"-"+K[63&n|128]+K[n>>8&255]+"-"+K[n>>16&255]+K[n>>24&255]+K[255&i]+K[i>>8&255]+K[i>>16&255]+K[i>>24&255]).toUpperCase()}function u(e,t,n){return Math.max(t,Math.min(n,e))}function d(e,t,n){return(1-n)*e+n*t}function N(e){return 0==(e&e-1)&&0!==e}function p(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}class J{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}J.prototype.isVector2=!0;class f{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,a,o,s,P){const G=this.elements;return G[0]=e,G[1]=i,G[2]=o,G[3]=t,G[4]=r,G[5]=s,G[6]=n,G[7]=a,G[8]=P,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[3],s=n[6],P=n[1],G=n[4],K=n[7],l=n[2],c=n[5],h=n[8],u=i[0],d=i[3],N=i[6],p=i[1],J=i[4],f=i[7],m=i[2],g=i[5],v=i[8];return r[0]=a*u+o*p+s*m,r[3]=a*d+o*J+s*g,r[6]=a*N+o*f+s*v,r[1]=P*u+G*p+K*m,r[4]=P*d+G*J+K*g,r[7]=P*N+G*f+K*v,r[2]=l*u+c*p+h*m,r[5]=l*d+c*J+h*g,r[8]=l*N+c*f+h*v,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],s=e[6],P=e[7],G=e[8];return t*a*G-t*o*P-n*r*G+n*o*s+i*r*P-i*a*s}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],s=e[6],P=e[7],G=e[8],K=G*a-o*P,l=o*s-G*r,c=P*r-a*s,h=t*K+n*l+i*c;if(0===h)return this.set(0,0,0,0,0,0,0,0,0);const u=1/h;return e[0]=K*u,e[1]=(i*P-G*n)*u,e[2]=(o*n-i*a)*u,e[3]=l*u,e[4]=(G*t-i*s)*u,e[5]=(i*r-o*t)*u,e[6]=c*u,e[7]=(n*s-P*t)*u,e[8]=(a*t-n*r)*u,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,o){const s=Math.cos(r),P=Math.sin(r);return this.set(n*s,n*P,-n*(s*a+P*o)+a+e,-i*P,i*s,-i*(-P*a+s*o)+o+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],a=i[3],o=i[6],s=i[1],P=i[4],G=i[7];return i[0]=t*r+n*s,i[3]=t*a+n*P,i[6]=t*o+n*G,i[1]=-n*r+t*s,i[4]=-n*a+t*P,i[7]=-n*o+t*G,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}let m;f.prototype.isMatrix3=!0;class g{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===m&&(m=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),m.width=e.width,m.height=e.height;const n=m.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=m}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let v=0;class x extends G{constructor(e=x.DEFAULT_IMAGE,t=x.DEFAULT_MAPPING,n=1001,i=1001,r=1006,a=1008,o=1023,s=1009,P=1,G=3e3){super(),Object.defineProperty(this,"id",{value:v++}),this.uuid=h(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=P,this.format=o,this.internalFormat=null,this.type=s,this.offset=new J(0,0),this.repeat=new J(1,1),this.center=new J(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new f,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=G,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=h()),!t&&void 0===e.images[i.uuid]){let t;if(Array.isArray(i)){t=[];for(let e=0,n=i.length;e<n;e++)i[e].isDataTexture?t.push(y(i[e].image)):t.push(y(i[e]))}else t=y(i);e.images[i.uuid]={uuid:i.uuid,url:t}}n.image=i.uuid}return t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function y(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?g.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}x.DEFAULT_IMAGE=void 0,x.DEFAULT_MAPPING=300,x.prototype.isTexture=!0;class _{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const a=e.elements,o=a[0],s=a[4],P=a[8],G=a[1],K=a[5],l=a[9],c=a[2],h=a[6],u=a[10];if(Math.abs(s-G)<.01&&Math.abs(P-c)<.01&&Math.abs(l-h)<.01){if(Math.abs(s+G)<.1&&Math.abs(P+c)<.1&&Math.abs(l+h)<.1&&Math.abs(o+K+u-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const e=(o+1)/2,a=(K+1)/2,d=(u+1)/2,N=(s+G)/4,p=(P+c)/4,J=(l+h)/4;return e>a&&e>d?e<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(e),i=N/n,r=p/n):a>d?a<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(a),n=N/i,r=J/i):d<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(d),n=p/r,i=J/r),this.set(n,i,r,t),this}let d=Math.sqrt((h-l)*(h-l)+(P-c)*(P-c)+(G-s)*(G-s));return Math.abs(d)<.001&&(d=1),this.x=(h-l)/d,this.y=(P-c)/d,this.z=(G-s)/d,this.w=Math.acos((o+K+u-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}_.prototype.isVector4=!0;class b extends G{constructor(e,t,n){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new _(0,0,e,t),this.scissorTest=!1,this.viewport=new _(0,0,e,t),n=n||{},this.texture=new x(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:1006,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}b.prototype.isWebGLRenderTarget=!0;class w{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,r,a,o){let s=n[i+0],P=n[i+1],G=n[i+2],K=n[i+3];const l=r[a+0],c=r[a+1],h=r[a+2],u=r[a+3];if(0===o)return e[t+0]=s,e[t+1]=P,e[t+2]=G,void(e[t+3]=K);if(1===o)return e[t+0]=l,e[t+1]=c,e[t+2]=h,void(e[t+3]=u);if(K!==u||s!==l||P!==c||G!==h){let e=1-o;const t=s*l+P*c+G*h+K*u,n=t>=0?1:-1,i=1-t*t;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,t*n);e=Math.sin(e*a)/r,o=Math.sin(o*a)/r}const r=o*n;if(s=s*e+l*r,P=P*e+c*r,G=G*e+h*r,K=K*e+u*r,e===1-o){const e=1/Math.sqrt(s*s+P*P+G*G+K*K);s*=e,P*=e,G*=e,K*=e}}e[t]=s,e[t+1]=P,e[t+2]=G,e[t+3]=K}static multiplyQuaternionsFlat(e,t,n,i,r,a){const o=n[i],s=n[i+1],P=n[i+2],G=n[i+3],K=r[a],l=r[a+1],c=r[a+2],h=r[a+3];return e[t]=o*h+G*K+s*c-P*l,e[t+1]=s*h+G*l+P*K-o*c,e[t+2]=P*h+G*c+o*l-s*K,e[t+3]=G*h-o*K-s*l-P*c,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,r=e._z,a=e._order,o=Math.cos,s=Math.sin,P=o(n/2),G=o(i/2),K=o(r/2),l=s(n/2),c=s(i/2),h=s(r/2);switch(a){case"XYZ":this._x=l*G*K+P*c*h,this._y=P*c*K-l*G*h,this._z=P*G*h+l*c*K,this._w=P*G*K-l*c*h;break;case"YXZ":this._x=l*G*K+P*c*h,this._y=P*c*K-l*G*h,this._z=P*G*h-l*c*K,this._w=P*G*K+l*c*h;break;case"ZXY":this._x=l*G*K-P*c*h,this._y=P*c*K+l*G*h,this._z=P*G*h+l*c*K,this._w=P*G*K-l*c*h;break;case"ZYX":this._x=l*G*K-P*c*h,this._y=P*c*K+l*G*h,this._z=P*G*h-l*c*K,this._w=P*G*K+l*c*h;break;case"YZX":this._x=l*G*K+P*c*h,this._y=P*c*K+l*G*h,this._z=P*G*h-l*c*K,this._w=P*G*K-l*c*h;break;case"XZY":this._x=l*G*K-P*c*h,this._y=P*c*K-l*G*h,this._z=P*G*h+l*c*K,this._w=P*G*K+l*c*h;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],o=t[5],s=t[9],P=t[2],G=t[6],K=t[10],l=n+o+K;if(l>0){const e=.5/Math.sqrt(l+1);this._w=.25/e,this._x=(G-s)*e,this._y=(r-P)*e,this._z=(a-i)*e}else if(n>o&&n>K){const e=2*Math.sqrt(1+n-o-K);this._w=(G-s)/e,this._x=.25*e,this._y=(i+a)/e,this._z=(r+P)/e}else if(o>K){const e=2*Math.sqrt(1+o-n-K);this._w=(r-P)/e,this._x=(i+a)/e,this._y=.25*e,this._z=(s+G)/e}else{const e=2*Math.sqrt(1+K-n-o);this._w=(a-i)/e,this._x=(r+P)/e,this._y=(s+G)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(u(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,s=t._y,P=t._z,G=t._w;return this._x=n*G+a*o+i*P-r*s,this._y=i*G+a*s+r*o-n*P,this._z=r*G+a*P+n*s-i*o,this._w=a*G-n*o-i*s-r*P,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const s=1-o*o;if(s<=Number.EPSILON){const e=1-t;return this._w=e*a+t*this._w,this._x=e*n+t*this._x,this._y=e*i+t*this._y,this._z=e*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const P=Math.sqrt(s),G=Math.atan2(P,o),K=Math.sin((1-t)*G)/P,l=Math.sin(t*G)/P;return this._w=a*K+this._w*l,this._x=n*K+this._x*l,this._y=i*K+this._y*l,this._z=r*K+this._z*l,this._onChangeCallback(),this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}w.prototype.isQuaternion=!0;class M{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(T.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(T.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,o=e.z,s=e.w,P=s*t+a*i-o*n,G=s*n+o*t-r*i,K=s*i+r*n-a*t,l=-r*t-a*n-o*i;return this.x=P*s+l*-r+G*-o-K*-a,this.y=G*s+l*-a+K*-r-P*-o,this.z=K*s+l*-o+P*-a-G*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,s=t.z;return this.x=i*s-r*o,this.y=r*a-n*s,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return S.copy(this).projectOnVector(e),this.sub(S)}reflect(e){return this.sub(S.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(u(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}M.prototype.isVector3=!0;const S=new M,T=new w;class E{constructor(e=new M(1/0,1/0,1/0),t=new M(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0;for(let s=0,P=e.length;s<P;s+=3){const P=e[s],G=e[s+1],K=e[s+2];P<t&&(t=P),G<n&&(n=G),K<i&&(i=K),P>r&&(r=P),G>a&&(a=G),K>o&&(o=K)}return this.min.set(t,n,i),this.max.set(r,a,o),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0;for(let s=0,P=e.count;s<P;s++){const P=e.getX(s),G=e.getY(s),K=e.getZ(s);P<t&&(t=P),G<n&&(n=G),K<i&&(i=K),P>r&&(r=P),G>a&&(a=G),K>o&&(o=K)}return this.min.set(t,n,i),this.max.set(r,a,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=A.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new M),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new M),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),R.copy(t.boundingBox),R.applyMatrix4(e.matrixWorld),this.union(R));const n=e.children;for(let e=0,t=n.length;e<t;e++)this.expandByObject(n[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new M),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,A),A.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(I),k.subVectors(this.max,I),C.subVectors(e.a,I),D.subVectors(e.b,I),F.subVectors(e.c,I),H.subVectors(D,C),B.subVectors(F,D),z.subVectors(C,F);let t=[0,-H.z,H.y,0,-B.z,B.y,0,-z.z,z.y,H.z,0,-H.x,B.z,0,-B.x,z.z,0,-z.x,-H.y,H.x,0,-B.y,B.x,0,-z.y,z.x,0];return!!W(t,C,D,F,k)&&(t=[1,0,0,0,1,0,0,0,1],!!W(t,C,D,F,k)&&(O.crossVectors(H,B),t=[O.x,O.y,O.z],W(t,C,D,F,k)))}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new M),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return A.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(A).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(L[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),L[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),L[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),L[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),L[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),L[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),L[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),L[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(L)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}E.prototype.isBox3=!0;const L=[new M,new M,new M,new M,new M,new M,new M,new M],A=new M,R=new E,C=new M,D=new M,F=new M,H=new M,B=new M,z=new M,I=new M,k=new M,O=new M,U=new M;function W(e,t,n,i,r){for(let a=0,o=e.length-3;a<=o;a+=3){U.fromArray(e,a);const o=r.x*Math.abs(U.x)+r.y*Math.abs(U.y)+r.z*Math.abs(U.z),s=t.dot(U),P=n.dot(U),G=i.dot(U);if(Math.max(-Math.max(s,P,G),Math.min(s,P,G))>o)return!1}return!0}const V=new E,Q=new M,j=new M,q=new M;class X{constructor(e=new M,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):V.setFromPoints(e).getCenter(n);let i=0;for(let t=0,r=e.length;t<r;t++)i=Math.max(i,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new M),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new E),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){q.subVectors(e,this.center);const t=q.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.add(q.multiplyScalar(n/e)),this.radius+=n}return this}union(e){return j.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Q.copy(e.center).add(j)),this.expandByPoint(Q.copy(e.center).sub(j)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Y=new M,Z=new M,$=new M,ee=new M,te=new M,ne=new M,ie=new M;class re{constructor(e=new M,t=new M(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new M),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Y)),this}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new M),t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Y.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Y.copy(this.direction).multiplyScalar(t).add(this.origin),Y.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Z.copy(e).add(t).multiplyScalar(.5),$.copy(t).sub(e).normalize(),ee.copy(this.origin).sub(Z);const r=.5*e.distanceTo(t),a=-this.direction.dot($),o=ee.dot(this.direction),s=-ee.dot($),P=ee.lengthSq(),G=Math.abs(1-a*a);let K,l,c,h;if(G>0)if(K=a*s-o,l=a*o-s,h=r*G,K>=0)if(l>=-h)if(l<=h){const e=1/G;K*=e,l*=e,c=K*(K+a*l+2*o)+l*(a*K+l+2*s)+P}else l=r,K=Math.max(0,-(a*l+o)),c=-K*K+l*(l+2*s)+P;else l=-r,K=Math.max(0,-(a*l+o)),c=-K*K+l*(l+2*s)+P;else l<=-h?(K=Math.max(0,-(-a*r+o)),l=K>0?-r:Math.min(Math.max(-r,-s),r),c=-K*K+l*(l+2*s)+P):l<=h?(K=0,l=Math.min(Math.max(-r,-s),r),c=l*(l+2*s)+P):(K=Math.max(0,-(a*r+o)),l=K>0?r:Math.min(Math.max(-r,-s),r),c=-K*K+l*(l+2*s)+P);else l=a>0?-r:r,K=Math.max(0,-(a*l+o)),c=-K*K+l*(l+2*s)+P;return n&&n.copy(this.direction).multiplyScalar(K).add(this.origin),i&&i.copy($).multiplyScalar(l).add(Z),c}intersectSphere(e,t){Y.subVectors(e.center,this.origin);const n=Y.dot(this.direction),i=Y.dot(Y)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),o=n-a,s=n+a;return o<0&&s<0?null:o<0?this.at(s,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;return e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,o,s;const P=1/this.direction.x,G=1/this.direction.y,K=1/this.direction.z,l=this.origin;return P>=0?(n=(e.min.x-l.x)*P,i=(e.max.x-l.x)*P):(n=(e.max.x-l.x)*P,i=(e.min.x-l.x)*P),G>=0?(r=(e.min.y-l.y)*G,a=(e.max.y-l.y)*G):(r=(e.max.y-l.y)*G,a=(e.min.y-l.y)*G),n>a||r>i?null:((r>n||n!=n)&&(n=r),(a<i||i!=i)&&(i=a),K>=0?(o=(e.min.z-l.z)*K,s=(e.max.z-l.z)*K):(o=(e.max.z-l.z)*K,s=(e.min.z-l.z)*K),n>s||o>i?null:((o>n||n!=n)&&(n=o),(s<i||i!=i)&&(i=s),i<0?null:this.at(n>=0?n:i,t)))}intersectsBox(e){return null!==this.intersectBox(e,Y)}intersectTriangle(e,t,n,i,r){te.subVectors(t,e),ne.subVectors(n,e),ie.crossVectors(te,ne);let a,o=this.direction.dot(ie);if(o>0){if(i)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}ee.subVectors(this.origin,e);const s=a*this.direction.dot(ne.crossVectors(ee,ne));if(s<0)return null;const P=a*this.direction.dot(te.cross(ee));if(P<0)return null;if(s+P>o)return null;const G=-a*ee.dot(ie);return G<0?null:this.at(G/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class ae{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,a,o,s,P,G,K,l,c,h,u,d){const N=this.elements;return N[0]=e,N[4]=t,N[8]=n,N[12]=i,N[1]=r,N[5]=a,N[9]=o,N[13]=s,N[2]=P,N[6]=G,N[10]=K,N[14]=l,N[3]=c,N[7]=h,N[11]=u,N[15]=d,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new ae).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/oe.setFromMatrixColumn(e,0).length(),r=1/oe.setFromMatrixColumn(e,1).length(),a=1/oe.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(i),P=Math.sin(i),G=Math.cos(r),K=Math.sin(r);if("XYZ"===e.order){const e=a*G,n=a*K,i=o*G,r=o*K;t[0]=s*G,t[4]=-s*K,t[8]=P,t[1]=n+i*P,t[5]=e-r*P,t[9]=-o*s,t[2]=r-e*P,t[6]=i+n*P,t[10]=a*s}else if("YXZ"===e.order){const e=s*G,n=s*K,i=P*G,r=P*K;t[0]=e+r*o,t[4]=i*o-n,t[8]=a*P,t[1]=a*K,t[5]=a*G,t[9]=-o,t[2]=n*o-i,t[6]=r+e*o,t[10]=a*s}else if("ZXY"===e.order){const e=s*G,n=s*K,i=P*G,r=P*K;t[0]=e-r*o,t[4]=-a*K,t[8]=i+n*o,t[1]=n+i*o,t[5]=a*G,t[9]=r-e*o,t[2]=-a*P,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){const e=a*G,n=a*K,i=o*G,r=o*K;t[0]=s*G,t[4]=i*P-n,t[8]=e*P+r,t[1]=s*K,t[5]=r*P+e,t[9]=n*P-i,t[2]=-P,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){const e=a*s,n=a*P,i=o*s,r=o*P;t[0]=s*G,t[4]=r-e*K,t[8]=i*K+n,t[1]=K,t[5]=a*G,t[9]=-o*G,t[2]=-P*G,t[6]=n*K+i,t[10]=e-r*K}else if("XZY"===e.order){const e=a*s,n=a*P,i=o*s,r=o*P;t[0]=s*G,t[4]=-K,t[8]=P*G,t[1]=e*K+r,t[5]=a*G,t[9]=n*K-i,t[2]=i*K-n,t[6]=o*G,t[10]=r*K+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Pe,e,Ge)}lookAt(e,t,n){const i=this.elements;return ce.subVectors(e,t),0===ce.lengthSq()&&(ce.z=1),ce.normalize(),Ke.crossVectors(n,ce),0===Ke.lengthSq()&&(1===Math.abs(n.z)?ce.x+=1e-4:ce.z+=1e-4,ce.normalize(),Ke.crossVectors(n,ce)),Ke.normalize(),le.crossVectors(ce,Ke),i[0]=Ke.x,i[4]=le.x,i[8]=ce.x,i[1]=Ke.y,i[5]=le.y,i[9]=ce.y,i[2]=Ke.z,i[6]=le.z,i[10]=ce.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],s=n[8],P=n[12],G=n[1],K=n[5],l=n[9],c=n[13],h=n[2],u=n[6],d=n[10],N=n[14],p=n[3],J=n[7],f=n[11],m=n[15],g=i[0],v=i[4],x=i[8],y=i[12],_=i[1],b=i[5],w=i[9],M=i[13],S=i[2],T=i[6],E=i[10],L=i[14],A=i[3],R=i[7],C=i[11],D=i[15];return r[0]=a*g+o*_+s*S+P*A,r[4]=a*v+o*b+s*T+P*R,r[8]=a*x+o*w+s*E+P*C,r[12]=a*y+o*M+s*L+P*D,r[1]=G*g+K*_+l*S+c*A,r[5]=G*v+K*b+l*T+c*R,r[9]=G*x+K*w+l*E+c*C,r[13]=G*y+K*M+l*L+c*D,r[2]=h*g+u*_+d*S+N*A,r[6]=h*v+u*b+d*T+N*R,r[10]=h*x+u*w+d*E+N*C,r[14]=h*y+u*M+d*L+N*D,r[3]=p*g+J*_+f*S+m*A,r[7]=p*v+J*b+f*T+m*R,r[11]=p*x+J*w+f*E+m*C,r[15]=p*y+J*M+f*L+m*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],s=e[9],P=e[13],G=e[2],K=e[6],l=e[10],c=e[14];return e[3]*(+r*s*K-i*P*K-r*o*l+n*P*l+i*o*c-n*s*c)+e[7]*(+t*s*c-t*P*l+r*a*l-i*a*c+i*P*G-r*s*G)+e[11]*(+t*P*K-t*o*c-r*a*K+n*a*c+r*o*G-n*P*G)+e[15]*(-i*o*G-t*s*K+t*o*l+i*a*K-n*a*l+n*s*G)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],s=e[6],P=e[7],G=e[8],K=e[9],l=e[10],c=e[11],h=e[12],u=e[13],d=e[14],N=e[15],p=K*d*P-u*l*P+u*s*c-o*d*c-K*s*N+o*l*N,J=h*l*P-G*d*P-h*s*c+a*d*c+G*s*N-a*l*N,f=G*u*P-h*K*P+h*o*c-a*u*c-G*o*N+a*K*N,m=h*K*s-G*u*s-h*o*l+a*u*l+G*o*d-a*K*d,g=t*p+n*J+i*f+r*m;if(0===g)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const v=1/g;return e[0]=p*v,e[1]=(u*l*r-K*d*r-u*i*c+n*d*c+K*i*N-n*l*N)*v,e[2]=(o*d*r-u*s*r+u*i*P-n*d*P-o*i*N+n*s*N)*v,e[3]=(K*s*r-o*l*r-K*i*P+n*l*P+o*i*c-n*s*c)*v,e[4]=J*v,e[5]=(G*d*r-h*l*r+h*i*c-t*d*c-G*i*N+t*l*N)*v,e[6]=(h*s*r-a*d*r-h*i*P+t*d*P+a*i*N-t*s*N)*v,e[7]=(a*l*r-G*s*r+G*i*P-t*l*P-a*i*c+t*s*c)*v,e[8]=f*v,e[9]=(h*K*r-G*u*r-h*n*c+t*u*c+G*n*N-t*K*N)*v,e[10]=(a*u*r-h*o*r+h*n*P-t*u*P-a*n*N+t*o*N)*v,e[11]=(G*o*r-a*K*r-G*n*P+t*K*P+a*n*c-t*o*c)*v,e[12]=m*v,e[13]=(G*u*i-h*K*i+h*n*l-t*u*l-G*n*d+t*K*d)*v,e[14]=(h*o*i-a*u*i-h*n*s+t*u*s+a*n*d-t*o*d)*v,e[15]=(a*K*i-G*o*i+G*n*s-t*K*s-a*n*l+t*o*l)*v,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,o=e.y,s=e.z,P=r*a,G=r*o;return this.set(P*a+n,P*o-i*s,P*s+i*o,0,P*o+i*s,G*o+n,G*s-i*a,0,P*s-i*o,G*s+i*a,r*s*s+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,o=t._z,s=t._w,P=r+r,G=a+a,K=o+o,l=r*P,c=r*G,h=r*K,u=a*G,d=a*K,N=o*K,p=s*P,J=s*G,f=s*K,m=n.x,g=n.y,v=n.z;return i[0]=(1-(u+N))*m,i[1]=(c+f)*m,i[2]=(h-J)*m,i[3]=0,i[4]=(c-f)*g,i[5]=(1-(l+N))*g,i[6]=(d+p)*g,i[7]=0,i[8]=(h+J)*v,i[9]=(d-p)*v,i[10]=(1-(l+u))*v,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=oe.set(i[0],i[1],i[2]).length();const a=oe.set(i[4],i[5],i[6]).length(),o=oe.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],se.copy(this);const s=1/r,P=1/a,G=1/o;return se.elements[0]*=s,se.elements[1]*=s,se.elements[2]*=s,se.elements[4]*=P,se.elements[5]*=P,se.elements[6]*=P,se.elements[8]*=G,se.elements[9]*=G,se.elements[10]*=G,t.setFromRotationMatrix(se),n.x=r,n.y=a,n.z=o,this}makePerspective(e,t,n,i,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,s=2*r/(t-e),P=2*r/(n-i),G=(t+e)/(t-e),K=(n+i)/(n-i),l=-(a+r)/(a-r),c=-2*a*r/(a-r);return o[0]=s,o[4]=0,o[8]=G,o[12]=0,o[1]=0,o[5]=P,o[9]=K,o[13]=0,o[2]=0,o[6]=0,o[10]=l,o[14]=c,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,n,i,r,a){const o=this.elements,s=1/(t-e),P=1/(n-i),G=1/(a-r),K=(t+e)*s,l=(n+i)*P,c=(a+r)*G;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-K,o[1]=0,o[5]=2*P,o[9]=0,o[13]=-l,o[2]=0,o[6]=0,o[10]=-2*G,o[14]=-c,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}ae.prototype.isMatrix4=!0;const oe=new M,se=new ae,Pe=new M(0,0,0),Ge=new M(1,1,1),Ke=new M,le=new M,ce=new M,he=new ae,ue=new w;class de{constructor(e=0,t=0,n=0,i=de.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,n){const i=e.elements,r=i[0],a=i[4],o=i[8],s=i[1],P=i[5],G=i[9],K=i[2],l=i[6],c=i[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(u(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-G,c),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(l,P),this._z=0);break;case"YXZ":this._x=Math.asin(-u(G,-1,1)),Math.abs(G)<.9999999?(this._y=Math.atan2(o,c),this._z=Math.atan2(s,P)):(this._y=Math.atan2(-K,r),this._z=0);break;case"ZXY":this._x=Math.asin(u(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(-K,c),this._z=Math.atan2(-a,P)):(this._y=0,this._z=Math.atan2(s,r));break;case"ZYX":this._y=Math.asin(-u(K,-1,1)),Math.abs(K)<.9999999?(this._x=Math.atan2(l,c),this._z=Math.atan2(s,r)):(this._x=0,this._z=Math.atan2(-a,P));break;case"YZX":this._z=Math.asin(u(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-G,P),this._y=Math.atan2(-K,r)):(this._x=0,this._y=Math.atan2(o,c));break;case"XZY":this._z=Math.asin(-u(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(l,P),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-G,c),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return he.makeRotationFromQuaternion(e),this.setFromRotationMatrix(he,t,n)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return ue.setFromEuler(this),this.setFromQuaternion(ue,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new M(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}de.prototype.isEuler=!0,de.DefaultOrder="XYZ",de.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Ne{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let pe=0;const Je=new M,fe=new w,me=new ae,ge=new M,ve=new M,xe=new M,ye=new w,_e=new M(1,0,0),be=new M(0,1,0),we=new M(0,0,1),Me={type:"added"},Se={type:"removed"};class Te extends G{constructor(){super(),Object.defineProperty(this,"id",{value:pe++}),this.uuid=h(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Te.DefaultUp.clone();const e=new M,t=new de,n=new w,i=new M(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ae},normalMatrix:{value:new f}}),this.matrix=new ae,this.matrixWorld=new ae,this.matrixAutoUpdate=Te.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Ne,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return fe.setFromAxisAngle(e,t),this.quaternion.multiply(fe),this}rotateOnWorldAxis(e,t){return fe.setFromAxisAngle(e,t),this.quaternion.premultiply(fe),this}rotateX(e){return this.rotateOnAxis(_e,e)}rotateY(e){return this.rotateOnAxis(be,e)}rotateZ(e){return this.rotateOnAxis(we,e)}translateOnAxis(e,t){return Je.copy(e).applyQuaternion(this.quaternion),this.position.add(Je.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(_e,e)}translateY(e){return this.translateOnAxis(be,e)}translateZ(e){return this.translateOnAxis(we,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(me.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?ge.copy(e):ge.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ve.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?me.lookAt(ve,ge,this.up):me.lookAt(ge,ve,this.up),this.quaternion.setFromRotationMatrix(me),i&&(me.extractRotation(i.matrixWorld),fe.setFromRotationMatrix(me),this.quaternion.premultiply(fe.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Me)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Se)),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Se)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),me.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),me.multiply(e.parent.matrixWorld)),e.applyMatrix4(me),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(e,t);if(void 0!==i)return i}}getWorldPosition(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new M),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new w),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ve,e,xe),e}getWorldScale(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new M),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ve,ye,e),e}getWorldDirection(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new M),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++)e[t].updateWorldMatrix(!1,!0)}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const i=n[t];r(e.shapes,i)}else r(e.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,i=this.material.length;n<i;n++)t.push(r(e.materials,this.material[n]));i.material=t}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let t=0;t<this.children.length;t++)i.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];i.animations.push(r(e.animations,n))}}if(t){const t=a(e.geometries),i=a(e.materials),r=a(e.textures),o=a(e.images),s=a(e.shapes),P=a(e.skeletons),G=a(e.animations);t.length>0&&(n.geometries=t),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),o.length>0&&(n.images=o),s.length>0&&(n.shapes=s),P.length>0&&(n.skeletons=P),G.length>0&&(n.animations=G)}return n.object=i,n;function a(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}}Te.DefaultUp=new M(0,1,0),Te.DefaultMatrixAutoUpdate=!0,Te.prototype.isObject3D=!0;const Ee=new M,Le=new M,Ae=new f;class Re{constructor(e=new M(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Ee.subVectors(n,t).cross(Le.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new M),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new M);const n=e.delta(Ee),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new M),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Ae.getNormalMatrix(e),i=this.coplanarPoint(Ee).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Re.prototype.isPlane=!0;const Ce=new M,De=new M,Fe=new M,He=new M,Be=new M,ze=new M,Ie=new M,ke=new M,Oe=new M,Ue=new M;class We{constructor(e=new M,t=new M,n=new M){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new M),i.subVectors(n,t),Ce.subVectors(e,t),i.cross(Ce);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Ce.subVectors(i,t),De.subVectors(n,t),Fe.subVectors(e,t);const a=Ce.dot(Ce),o=Ce.dot(De),s=Ce.dot(Fe),P=De.dot(De),G=De.dot(Fe),K=a*P-o*o;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new M),0===K)return r.set(-2,-1,-1);const l=1/K,c=(P*s-o*G)*l,h=(a*G-o*s)*l;return r.set(1-c-h,h,c)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,He),He.x>=0&&He.y>=0&&He.x+He.y<=1}static getUV(e,t,n,i,r,a,o,s){return this.getBarycoord(e,t,n,i,He),s.set(0,0),s.addScaledVector(r,He.x),s.addScaledVector(a,He.y),s.addScaledVector(o,He.z),s}static isFrontFacing(e,t,n,i){return Ce.subVectors(n,t),De.subVectors(e,t),Ce.cross(De).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ce.subVectors(this.c,this.b),De.subVectors(this.a,this.b),.5*Ce.cross(De).length()}getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new M),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return We.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new Re),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return We.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return We.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return We.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return We.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new M);const n=this.a,i=this.b,r=this.c;let a,o;Be.subVectors(i,n),ze.subVectors(r,n),ke.subVectors(e,n);const s=Be.dot(ke),P=ze.dot(ke);if(s<=0&&P<=0)return t.copy(n);Oe.subVectors(e,i);const G=Be.dot(Oe),K=ze.dot(Oe);if(G>=0&&K<=G)return t.copy(i);const l=s*K-G*P;if(l<=0&&s>=0&&G<=0)return a=s/(s-G),t.copy(n).addScaledVector(Be,a);Ue.subVectors(e,r);const c=Be.dot(Ue),h=ze.dot(Ue);if(h>=0&&c<=h)return t.copy(r);const u=c*P-s*h;if(u<=0&&P>=0&&h<=0)return o=P/(P-h),t.copy(n).addScaledVector(ze,o);const d=G*h-c*K;if(d<=0&&K-G>=0&&c-h>=0)return Ie.subVectors(r,i),o=(K-G)/(K-G+(c-h)),t.copy(i).addScaledVector(Ie,o);const N=1/(d+u+l);return a=u*N,o=l*N,t.copy(n).addScaledVector(Be,a).addScaledVector(ze,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Ve=0;function Qe(){Object.defineProperty(this,"id",{value:Ve++}),this.uuid=h(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Qe.prototype=Object.assign(Object.create(G.prototype),{constructor:Qe,isMaterial:!0,onBuild:function(){},onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}},toJSON:function(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){const t=i(e.textures),r=i(e.images);t.length>0&&(n.textures=t),r.length>0&&(n.images=r)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let i=0;i!==e;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Qe.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}});const je={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},qe={h:0,s:0,l:0},Xe={h:0,s:0,l:0};function Ye(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function Ze(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function $e(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class et{constructor(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){var i;if(e=(e%(i=1)+i)%i,t=u(t,0,1),n=u(n,0,1),0===t)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=Ye(r,i,e+1/3),this.g=Ye(r,i,e),this.b=Ye(r,i,e-1/3)}return this}setStyle(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let e;const i=n[1],r=n[2];switch(i){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,t(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,t(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const n=parseFloat(e[1])/360,i=parseInt(e[2],10)/100,r=parseInt(e[3],10)/100;return t(e[4]),this.setHSL(n,i,r)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=n[1],t=e.length;if(3===t)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===t)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=je[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){const n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=Ze(e.r),this.g=Ze(e.g),this.b=Ze(e.b),this}copyLinearToSRGB(e){return this.r=$e(e.r),this.g=$e(e.g),this.b=$e(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,n=this.g,i=this.b,r=Math.max(t,n,i),a=Math.min(t,n,i);let o,s;const P=(a+r)/2;if(a===r)o=0,s=0;else{const e=r-a;switch(s=P<=.5?e/(r+a):e/(2-r-a),r){case t:o=(n-i)/e+(n<i?6:0);break;case n:o=(i-t)/e+2;break;case i:o=(t-n)/e+4}o/=6}return e.h=o,e.s=s,e.l=P,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(qe),qe.h+=e,qe.s+=t,qe.l+=n,this.setHSL(qe.h,qe.s,qe.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(qe),e.getHSL(Xe);const n=d(qe.h,Xe.h,t),i=d(qe.s,Xe.s,t),r=d(qe.l,Xe.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}et.NAMES=je,et.prototype.isColor=!0,et.prototype.r=1,et.prototype.g=1,et.prototype.b=1;class tt extends Qe{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new et(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this}}tt.prototype.isMeshBasicMaterial=!0;const nt=new M,it=new J;class rt{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.onUploadCallback=function(){}}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new et),t[n++]=r.r,t[n++]=r.g,t[n++]=r.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new J),t[n++]=r.x,t[n++]=r.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new M),t[n++]=r.x,t[n++]=r.y,t[n++]=r.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new _),t[n++]=r.x,t[n++]=r.y,t[n++]=r.z,t[n++]=r.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)it.fromBufferAttribute(this,t),it.applyMatrix3(e),this.setXY(t,it.x,it.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)nt.fromBufferAttribute(this,t),nt.applyMatrix3(e),this.setXYZ(t,nt.x,nt.y,nt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)nt.x=this.getX(t),nt.y=this.getY(t),nt.z=this.getZ(t),nt.applyMatrix4(e),this.setXYZ(t,nt.x,nt.y,nt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)nt.x=this.getX(t),nt.y=this.getY(t),nt.z=this.getZ(t),nt.applyNormalMatrix(e),this.setXYZ(t,nt.x,nt.y,nt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)nt.x=this.getX(t),nt.y=this.getY(t),nt.z=this.getZ(t),nt.transformDirection(e),this.setXYZ(t,nt.x,nt.y,nt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}rt.prototype.isBufferAttribute=!0;class at extends rt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class ot extends rt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class st extends rt{constructor(e,t,n){super(new Float32Array(e),t,n)}}function Pt(e){if(0===e.length)return-1/0;let t=e[0];for(let n=1,i=e.length;n<i;++n)e[n]>t&&(t=e[n]);return t}let Gt=0;const Kt=new ae,lt=new Te,ct=new M,ht=new E,ut=new E,dt=new M;class Nt extends G{constructor(){super(),Object.defineProperty(this,"id",{value:Gt++}),this.uuid=h(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Pt(e)>65535?ot:at)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new f).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}rotateX(e){return Kt.makeRotationX(e),this.applyMatrix4(Kt),this}rotateY(e){return Kt.makeRotationY(e),this.applyMatrix4(Kt),this}rotateZ(e){return Kt.makeRotationZ(e),this.applyMatrix4(Kt),this}translate(e,t,n){return Kt.makeTranslation(e,t,n),this.applyMatrix4(Kt),this}scale(e,t,n){return Kt.makeScale(e,t,n),this.applyMatrix4(Kt),this}lookAt(e){return lt.lookAt(e),lt.updateMatrix(),this.applyMatrix4(lt.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ct).negate(),this.translate(ct.x,ct.y,ct.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new st(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new E);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new M(-1/0,-1/0,-1/0),new M(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];ht.setFromBufferAttribute(n),this.morphTargetsRelative?(dt.addVectors(this.boundingBox.min,ht.min),this.boundingBox.expandByPoint(dt),dt.addVectors(this.boundingBox.max,ht.max),this.boundingBox.expandByPoint(dt)):(this.boundingBox.expandByPoint(ht.min),this.boundingBox.expandByPoint(ht.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new X);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new M,1/0);if(e){const n=this.boundingSphere.center;if(ht.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];ut.setFromBufferAttribute(n),this.morphTargetsRelative?(dt.addVectors(ht.min,ut.min),ht.expandByPoint(dt),dt.addVectors(ht.max,ut.max),ht.expandByPoint(dt)):(ht.expandByPoint(ut.min),ht.expandByPoint(ut.max))}ht.getCenter(n);let i=0;for(let t=0,r=e.count;t<r;t++)dt.fromBufferAttribute(e,t),i=Math.max(i,n.distanceToSquared(dt));if(t)for(let r=0,a=t.length;r<a;r++){const a=t[r],o=this.morphTargetsRelative;for(let t=0,r=a.count;t<r;t++)dt.fromBufferAttribute(a,t),o&&(ct.fromBufferAttribute(e,t),dt.add(ct)),i=Math.max(i,n.distanceToSquared(dt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeFaceNormals(){}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,o=i.length/3;void 0===t.tangent&&this.setAttribute("tangent",new rt(new Float32Array(4*o),4));const s=t.tangent.array,P=[],G=[];for(let e=0;e<o;e++)P[e]=new M,G[e]=new M;const K=new M,l=new M,c=new M,h=new J,u=new J,d=new J,N=new M,p=new M;function f(e,t,n){K.fromArray(i,3*e),l.fromArray(i,3*t),c.fromArray(i,3*n),h.fromArray(a,2*e),u.fromArray(a,2*t),d.fromArray(a,2*n),l.sub(K),c.sub(K),u.sub(h),d.sub(h);const r=1/(u.x*d.y-d.x*u.y);isFinite(r)&&(N.copy(l).multiplyScalar(d.y).addScaledVector(c,-u.y).multiplyScalar(r),p.copy(c).multiplyScalar(u.x).addScaledVector(l,-d.x).multiplyScalar(r),P[e].add(N),P[t].add(N),P[n].add(N),G[e].add(p),G[t].add(p),G[n].add(p))}let m=this.groups;0===m.length&&(m=[{start:0,count:n.length}]);for(let e=0,t=m.length;e<t;++e){const t=m[e],i=t.start;for(let e=i,r=i+t.count;e<r;e+=3)f(n[e+0],n[e+1],n[e+2])}const g=new M,v=new M,x=new M,y=new M;function _(e){x.fromArray(r,3*e),y.copy(x);const t=P[e];g.copy(t),g.sub(x.multiplyScalar(x.dot(t))).normalize(),v.crossVectors(y,t);const n=v.dot(G[e])<0?-1:1;s[4*e]=g.x,s[4*e+1]=g.y,s[4*e+2]=g.z,s[4*e+3]=n}for(let e=0,t=m.length;e<t;++e){const t=m[e],i=t.start;for(let e=i,r=i+t.count;e<r;e+=3)_(n[e+0]),_(n[e+1]),_(n[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new rt(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const i=new M,r=new M,a=new M,o=new M,s=new M,P=new M,G=new M,K=new M;if(e)for(let l=0,c=e.count;l<c;l+=3){const c=e.getX(l+0),h=e.getX(l+1),u=e.getX(l+2);i.fromBufferAttribute(t,c),r.fromBufferAttribute(t,h),a.fromBufferAttribute(t,u),G.subVectors(a,r),K.subVectors(i,r),G.cross(K),o.fromBufferAttribute(n,c),s.fromBufferAttribute(n,h),P.fromBufferAttribute(n,u),o.add(G),s.add(G),P.add(G),n.setXYZ(c,o.x,o.y,o.z),n.setXYZ(h,s.x,s.y,s.z),n.setXYZ(u,P.x,P.y,P.z)}else for(let e=0,o=t.count;e<o;e+=3)i.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),G.subVectors(a,r),K.subVectors(i,r),G.cross(K),n.setXYZ(e+0,G.x,G.y,G.z),n.setXYZ(e+1,G.x,G.y,G.z),n.setXYZ(e+2,G.x,G.y,G.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===e.attributes[i])continue;const r=n[i].array,a=e.attributes[i],o=a.array,s=a.itemSize*t,P=Math.min(o.length,r.length-s);for(let e=0,t=s;e<P;e++,t++)r[t]=o[e]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)dt.fromBufferAttribute(e,t),dt.normalize(),e.setXYZ(t,dt.x,dt.y,dt.z)}toNonIndexed(){function e(e,t){const n=e.array,i=e.itemSize,r=e.normalized,a=new n.constructor(t.length*i);let o=0,s=0;for(let e=0,r=t.length;e<r;e++){o=t[e]*i;for(let e=0;e<i;e++)a[s++]=n[o++]}return new rt(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Nt,n=this.index.array,i=this.attributes;for(const r in i){const a=e(i[r],n);t.setAttribute(r,a)}const r=this.morphAttributes;for(const i in r){const a=[],o=r[i];for(let t=0,i=o.length;t<i;t++){const i=e(o[t],n);a.push(i)}t.morphAttributes[i]=a}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let e=0,n=a.length;e<n;e++){const n=a[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const i=n[t];e.data.attributes[t]=i.toJSON(e.data)}const i={};let r=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],a=[];for(let t=0,i=n.length;t<i;t++){const i=n[t];a.push(i.toJSON(e.data))}a.length>0&&(i[t]=a,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return(new Nt).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const i=e.attributes;for(const e in i){const n=i[e];this.setAttribute(e,n.clone(t))}const r=e.morphAttributes;for(const e in r){const n=[],i=r[e];for(let e=0,r=i.length;e<r;e++)n.push(i[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let e=0,t=a.length;e<t;e++){const t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}Nt.prototype.isBufferGeometry=!0;const pt=new ae,Jt=new re,ft=new X,mt=new M,gt=new M,vt=new M,xt=new M,yt=new M,_t=new M,bt=new M,wt=new M,Mt=new M,St=new J,Tt=new J,Et=new J,Lt=new M,At=new M;class Rt extends Te{constructor(e=new Nt,t=new tt){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),ft.copy(n.boundingSphere),ft.applyMatrix4(r),!1===e.ray.intersectsSphere(ft))return;if(pt.copy(r).invert(),Jt.copy(e.ray).applyMatrix4(pt),null!==n.boundingBox&&!1===Jt.intersectsBox(n.boundingBox))return;let a;if(n.isBufferGeometry){const r=n.index,o=n.attributes.position,s=n.morphAttributes.position,P=n.morphTargetsRelative,G=n.attributes.uv,K=n.attributes.uv2,l=n.groups,c=n.drawRange;if(null!==r)if(Array.isArray(i))for(let n=0,h=l.length;n<h;n++){const h=l[n],u=i[h.materialIndex];for(let n=Math.max(h.start,c.start),i=Math.min(h.start+h.count,c.start+c.count);n<i;n+=3){const i=r.getX(n),l=r.getX(n+1),c=r.getX(n+2);a=Ct(this,u,e,Jt,o,s,P,G,K,i,l,c),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=h.materialIndex,t.push(a))}}else{for(let n=Math.max(0,c.start),l=Math.min(r.count,c.start+c.count);n<l;n+=3){const l=r.getX(n),c=r.getX(n+1),h=r.getX(n+2);a=Ct(this,i,e,Jt,o,s,P,G,K,l,c,h),a&&(a.faceIndex=Math.floor(n/3),t.push(a))}}else if(void 0!==o)if(Array.isArray(i))for(let n=0,r=l.length;n<r;n++){const r=l[n],h=i[r.materialIndex];for(let n=Math.max(r.start,c.start),i=Math.min(r.start+r.count,c.start+c.count);n<i;n+=3){a=Ct(this,h,e,Jt,o,s,P,G,K,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=r.materialIndex,t.push(a))}}else{for(let n=Math.max(0,c.start),r=Math.min(o.count,c.start+c.count);n<r;n+=3){a=Ct(this,i,e,Jt,o,s,P,G,K,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),t.push(a))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function Ct(e,t,n,i,r,a,o,s,P,G,K,l){mt.fromBufferAttribute(r,G),gt.fromBufferAttribute(r,K),vt.fromBufferAttribute(r,l);const c=e.morphTargetInfluences;if(t.morphTargets&&a&&c){bt.set(0,0,0),wt.set(0,0,0),Mt.set(0,0,0);for(let e=0,t=a.length;e<t;e++){const t=c[e],n=a[e];0!==t&&(xt.fromBufferAttribute(n,G),yt.fromBufferAttribute(n,K),_t.fromBufferAttribute(n,l),o?(bt.addScaledVector(xt,t),wt.addScaledVector(yt,t),Mt.addScaledVector(_t,t)):(bt.addScaledVector(xt.sub(mt),t),wt.addScaledVector(yt.sub(gt),t),Mt.addScaledVector(_t.sub(vt),t)))}mt.add(bt),gt.add(wt),vt.add(Mt)}e.isSkinnedMesh&&t.skinning&&(e.boneTransform(G,mt),e.boneTransform(K,gt),e.boneTransform(l,vt));const h=function(e,t,n,i,r,a,o,s){let P;if(P=1===t.side?i.intersectTriangle(o,a,r,!0,s):i.intersectTriangle(r,a,o,2!==t.side,s),null===P)return null;At.copy(s),At.applyMatrix4(e.matrixWorld);const G=n.ray.origin.distanceTo(At);return G<n.near||G>n.far?null:{distance:G,point:At.clone(),object:e}}(e,t,n,i,mt,gt,vt,Lt);if(h){s&&(St.fromBufferAttribute(s,G),Tt.fromBufferAttribute(s,K),Et.fromBufferAttribute(s,l),h.uv=We.getUV(Lt,mt,gt,vt,St,Tt,Et,new J)),P&&(St.fromBufferAttribute(P,G),Tt.fromBufferAttribute(P,K),Et.fromBufferAttribute(P,l),h.uv2=We.getUV(Lt,mt,gt,vt,St,Tt,Et,new J));const e={a:G,b:K,c:l,normal:new M,materialIndex:0};We.getNormal(mt,gt,vt,e.normal),h.face=e}return h}Rt.prototype.isMesh=!0;class Dt extends Nt{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const o=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const s=[],P=[],G=[],K=[];let l=0,c=0;function h(e,t,n,i,r,a,h,u,d,N,p){const J=a/d,f=h/N,m=a/2,g=h/2,v=u/2,x=d+1,y=N+1;let _=0,b=0;const w=new M;for(let a=0;a<y;a++){const o=a*f-g;for(let s=0;s<x;s++){const l=s*J-m;w[e]=l*i,w[t]=o*r,w[n]=v,P.push(w.x,w.y,w.z),w[e]=0,w[t]=0,w[n]=u>0?1:-1,G.push(w.x,w.y,w.z),K.push(s/d),K.push(1-a/N),_+=1}}for(let e=0;e<N;e++)for(let t=0;t<d;t++){const n=l+t+x*e,i=l+t+x*(e+1),r=l+(t+1)+x*(e+1),a=l+(t+1)+x*e;s.push(n,i,a),s.push(i,r,a),b+=6}o.addGroup(c,b,p),c+=b,l+=_}h("z","y","x",-1,-1,n,t,e,a,r,0),h("z","y","x",1,-1,n,t,-e,a,r,1),h("x","z","y",1,1,e,n,t,i,a,2),h("x","z","y",1,-1,e,n,-t,i,a,3),h("x","y","z",1,-1,e,t,n,i,r,4),h("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(s),this.setAttribute("position",new st(P,3)),this.setAttribute("normal",new st(G,3)),this.setAttribute("uv",new st(K,2))}}function Ft(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function Ht(e){const t={};for(let n=0;n<e.length;n++){const i=Ft(e[n]);for(const e in i)t[e]=i[e]}return t}const Bt={clone:Ft,merge:Ht};class zt extends Qe{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ft(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}zt.prototype.isShaderMaterial=!0;class It extends Te{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new ae,this.projectionMatrix=new ae,this.projectionMatrixInverse=new ae}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new M),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}It.prototype.isCamera=!0;class kt extends It{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*c*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*l*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*c*Math.atan(Math.tan(.5*l*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*l*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const e=a.fullWidth,o=a.fullHeight;r+=a.offsetX*i/e,t-=a.offsetY*n/o,i*=a.width/e,n*=a.height/o}const o=this.filmOffset;0!==o&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}kt.prototype.isPerspectiveCamera=!0;class Ot extends Te{constructor(e,t,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new kt(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new M(1,0,0)),this.add(i);const r=new kt(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new M(-1,0,0)),this.add(r);const a=new kt(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new M(0,1,0)),this.add(a);const o=new kt(90,1,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new M(0,-1,0)),this.add(o);const s=new kt(90,1,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new M(0,0,1)),this.add(s);const P=new kt(90,1,e,t);P.layers=this.layers,P.up.set(0,-1,0),P.lookAt(new M(0,0,-1)),this.add(P)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,o,s,P]=this.children,G=e.xr.enabled,K=e.getRenderTarget();e.xr.enabled=!1;const l=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,s),n.texture.generateMipmaps=l,e.setRenderTarget(n,5),e.render(t,P),e.setRenderTarget(K),e.xr.enabled=G}}class Ut extends x{constructor(e,t,n,i,r,a,o,s,P,G){super(e=void 0!==e?e:[],t=void 0!==t?t:301,n,i,r,a,o=void 0!==o?o:1022,s,P,G),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Ut.prototype.isCubeTexture=!0;class Wt extends b{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),t=t||{},this.texture=new Ut(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:1006,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=1023,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new Dt(5,5,5),r=new zt({name:"CubemapFromEquirect",uniforms:Ft(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=t;const a=new Rt(i,r),o=t.minFilter;1008===t.minFilter&&(t.minFilter=1006);return new Ot(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,i);e.setRenderTarget(r)}}Wt.prototype.isWebGLCubeRenderTarget=!0;class Vt extends x{constructor(e,t,n,i,r,a,o,s,P,G,K,l){super(null,a,o,s,P,G,i,r,K,l),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=void 0!==P?P:1003,this.minFilter=void 0!==G?G:1003,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Vt.prototype.isDataTexture=!0;const Qt=new X,jt=new M;class qt{constructor(e=new Re,t=new Re,n=new Re,i=new Re,r=new Re,a=new Re){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],o=n[3],s=n[4],P=n[5],G=n[6],K=n[7],l=n[8],c=n[9],h=n[10],u=n[11],d=n[12],N=n[13],p=n[14],J=n[15];return t[0].setComponents(o-i,K-s,u-l,J-d).normalize(),t[1].setComponents(o+i,K+s,u+l,J+d).normalize(),t[2].setComponents(o+r,K+P,u+c,J+N).normalize(),t[3].setComponents(o-r,K-P,u-c,J-N).normalize(),t[4].setComponents(o-a,K-G,u-h,J-p).normalize(),t[5].setComponents(o+a,K+G,u+h,J+p).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Qt.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Qt)}intersectsSprite(e){return Qt.center.set(0,0,0),Qt.radius=.7071067811865476,Qt.applyMatrix4(e.matrixWorld),this.intersectsSphere(Qt)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let e=0;e<6;e++){if(t[e].distanceToPoint(n)<i)return!1}return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(jt.x=i.normal.x>0?e.max.x:e.min.x,jt.y=i.normal.y>0?e.max.y:e.min.y,jt.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(jt)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Xt(){let e=null,t=!1,n=null,i=null;function r(t,a){n(t,a),i=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==n&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function Yt(e,t){const n=t.isWebGL2,i=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),i.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=i.get(t);n&&(e.deleteBuffer(n.buffer),i.delete(t))},update:function(t,r){if(t.isGLBufferAttribute){const e=i.get(t);return void((!e||e.version<t.version)&&i.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const a=i.get(t);void 0===a?i.set(t,function(t,i){const r=t.array,a=t.usage,o=e.createBuffer();e.bindBuffer(i,o),e.bufferData(i,r,a),t.onUploadCallback();let s=5126;return r instanceof Float32Array?s=5126:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?t.isFloat16BufferAttribute?n?s=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):s=5123:r instanceof Int16Array?s=5122:r instanceof Uint32Array?s=5125:r instanceof Int32Array?s=5124:r instanceof Int8Array?s=5120:r instanceof Uint8Array&&(s=5121),{buffer:o,type:s,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}(t,r)):a.version<t.version&&(!function(t,i,r){const a=i.array,o=i.updateRange;e.bindBuffer(r,t),-1===o.count?e.bufferSubData(r,0,a):(n?e.bufferSubData(r,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count):e.bufferSubData(r,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count)),o.count=-1)}(a.buffer,t,r),a.version=t.version)}}}class Zt extends Nt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,o=Math.floor(n),s=Math.floor(i),P=o+1,G=s+1,K=e/o,l=t/s,c=[],h=[],u=[],d=[];for(let e=0;e<G;e++){const t=e*l-a;for(let n=0;n<P;n++){const i=n*K-r;h.push(i,-t,0),u.push(0,0,1),d.push(n/o),d.push(1-e/s)}}for(let e=0;e<s;e++)for(let t=0;t<o;t++){const n=t+P*e,i=t+P*(e+1),r=t+1+P*(e+1),a=t+1+P*e;c.push(n,i,a),c.push(i,r,a)}this.setIndex(c),this.setAttribute("position",new st(h,3)),this.setAttribute("normal",new st(u,3)),this.setAttribute("uv",new st(d,2))}}const $t={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},en={common:{diffuse:{value:new et(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new f},uv2Transform:{value:new f},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new J(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new et(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new et(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new f}},sprite:{diffuse:{value:new et(15658734)},opacity:{value:1},center:{value:new J(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new f}}},tn={basic:{uniforms:Ht([en.common,en.specularmap,en.envmap,en.aomap,en.lightmap,en.fog]),vertexShader:$t.meshbasic_vert,fragmentShader:$t.meshbasic_frag},lambert:{uniforms:Ht([en.common,en.specularmap,en.envmap,en.aomap,en.lightmap,en.emissivemap,en.fog,en.lights,{emissive:{value:new et(0)}}]),vertexShader:$t.meshlambert_vert,fragmentShader:$t.meshlambert_frag},phong:{uniforms:Ht([en.common,en.specularmap,en.envmap,en.aomap,en.lightmap,en.emissivemap,en.bumpmap,en.normalmap,en.displacementmap,en.fog,en.lights,{emissive:{value:new et(0)},specular:{value:new et(1118481)},shininess:{value:30}}]),vertexShader:$t.meshphong_vert,fragmentShader:$t.meshphong_frag},standard:{uniforms:Ht([en.common,en.envmap,en.aomap,en.lightmap,en.emissivemap,en.bumpmap,en.normalmap,en.displacementmap,en.roughnessmap,en.metalnessmap,en.fog,en.lights,{emissive:{value:new et(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:$t.meshphysical_vert,fragmentShader:$t.meshphysical_frag},toon:{uniforms:Ht([en.common,en.aomap,en.lightmap,en.emissivemap,en.bumpmap,en.normalmap,en.displacementmap,en.gradientmap,en.fog,en.lights,{emissive:{value:new et(0)}}]),vertexShader:$t.meshtoon_vert,fragmentShader:$t.meshtoon_frag},matcap:{uniforms:Ht([en.common,en.bumpmap,en.normalmap,en.displacementmap,en.fog,{matcap:{value:null}}]),vertexShader:$t.meshmatcap_vert,fragmentShader:$t.meshmatcap_frag},points:{uniforms:Ht([en.points,en.fog]),vertexShader:$t.points_vert,fragmentShader:$t.points_frag},dashed:{uniforms:Ht([en.common,en.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:$t.linedashed_vert,fragmentShader:$t.linedashed_frag},depth:{uniforms:Ht([en.common,en.displacementmap]),vertexShader:$t.depth_vert,fragmentShader:$t.depth_frag},normal:{uniforms:Ht([en.common,en.bumpmap,en.normalmap,en.displacementmap,{opacity:{value:1}}]),vertexShader:$t.normal_vert,fragmentShader:$t.normal_frag},sprite:{uniforms:Ht([en.sprite,en.fog]),vertexShader:$t.sprite_vert,fragmentShader:$t.sprite_frag},background:{uniforms:{uvTransform:{value:new f},t2D:{value:null}},vertexShader:$t.background_vert,fragmentShader:$t.background_frag},cube:{uniforms:Ht([en.envmap,{opacity:{value:1}}]),vertexShader:$t.cube_vert,fragmentShader:$t.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:$t.equirect_vert,fragmentShader:$t.equirect_frag},distanceRGBA:{uniforms:Ht([en.common,en.displacementmap,{referencePosition:{value:new M},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:$t.distanceRGBA_vert,fragmentShader:$t.distanceRGBA_frag},shadow:{uniforms:Ht([en.lights,en.fog,{color:{value:new et(0)},opacity:{value:1}}]),vertexShader:$t.shadow_vert,fragmentShader:$t.shadow_frag}};function nn(e,t,n,i,r){const a=new et(0);let o,s,P=0,G=null,K=0,l=null;function c(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,r)}return{getClearColor:function(){return a},setClearColor:function(e,t=1){a.set(e),P=t,c(a,P)},getClearAlpha:function(){return P},setClearAlpha:function(e){P=e,c(a,P)},render:function(n,r,h,u){let d=!0===r.isScene?r.background:null;d&&d.isTexture&&(d=t.get(d));const N=e.xr,p=N.getSession&&N.getSession();p&&"additive"===p.environmentBlendMode&&(d=null),null===d?c(a,P):d&&d.isColor&&(c(d,1),u=!0),(e.autoClear||u)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),d&&(d.isCubeTexture||306===d.mapping)?(void 0===s&&(s=new Rt(new Dt(1,1,1),new zt({name:"BackgroundCubeMaterial",uniforms:Ft(tn.cube.uniforms),vertexShader:tn.cube.vertexShader,fragmentShader:tn.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),s.geometry.deleteAttribute("uv"),s.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(s.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(s)),s.material.uniforms.envMap.value=d,s.material.uniforms.flipEnvMap.value=d.isCubeTexture&&d._needsFlipEnvMap?-1:1,G===d&&K===d.version&&l===e.toneMapping||(s.material.needsUpdate=!0,G=d,K=d.version,l=e.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null)):d&&d.isTexture&&(void 0===o&&(o=new Rt(new Zt(2,2),new zt({name:"BackgroundMaterial",uniforms:Ft(tn.background.uniforms),vertexShader:tn.background.vertexShader,fragmentShader:tn.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(o)),o.material.uniforms.t2D.value=d,!0===d.matrixAutoUpdate&&d.updateMatrix(),o.material.uniforms.uvTransform.value.copy(d.matrix),G===d&&K===d.version&&l===e.toneMapping||(o.material.needsUpdate=!0,G=d,K=d.version,l=e.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null))}}}function rn(e,t,n,i){const r=e.getParameter(34921),a=i.isWebGL2?null:t.get("OES_vertex_array_object"),o=i.isWebGL2||null!==a,s={},P=c(null);let G=P;function K(t){return i.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function l(t){return i.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function c(e){const t=[],n=[],i=[];for(let e=0;e<r;e++)t[e]=0,n[e]=0,i[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}}function h(){const e=G.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function u(e){d(e,0)}function d(n,r){const a=G.newAttributes,o=G.enabledAttributes,s=G.attributeDivisors;if(a[n]=1,0===o[n]&&(e.enableVertexAttribArray(n),o[n]=1),s[n]!==r){(i.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),s[n]=r}}function N(){const t=G.newAttributes,n=G.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==t[i]&&(e.disableVertexAttribArray(i),n[i]=0)}function p(t,n,r,a,o,s){!0!==i.isWebGL2||5124!==r&&5125!==r?e.vertexAttribPointer(t,n,r,a,o,s):e.vertexAttribIPointer(t,n,r,o,s)}function J(){f(),G!==P&&(G=P,K(G.object))}function f(){P.geometry=null,P.program=null,P.wireframe=!1}return{setup:function(r,P,l,J,f){let m=!1;if(o){const t=function(t,n,r){const o=!0===r.wireframe;let P=s[t.id];void 0===P&&(P={},s[t.id]=P);let G=P[n.id];void 0===G&&(G={},P[n.id]=G);let K=G[o];void 0===K&&(K=c(i.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),G[o]=K);return K}(J,l,P);G!==t&&(G=t,K(G.object)),m=function(e,t){const n=G.attributes,i=e.attributes;let r=0;for(const e in i){const t=n[e],a=i[e];if(void 0===t)return!0;if(t.attribute!==a)return!0;if(t.data!==a.data)return!0;r++}return G.attributesNum!==r||G.index!==t}(J,f),m&&function(e,t){const n={},i=e.attributes;let r=0;for(const e in i){const t=i[e],a={};a.attribute=t,t.data&&(a.data=t.data),n[e]=a,r++}G.attributes=n,G.attributesNum=r,G.index=t}(J,f)}else{const e=!0===P.wireframe;G.geometry===J.id&&G.program===l.id&&G.wireframe===e||(G.geometry=J.id,G.program=l.id,G.wireframe=e,m=!0)}!0===r.isInstancedMesh&&(m=!0),null!==f&&n.update(f,34963),m&&(!function(r,a,o,s){if(!1===i.isWebGL2&&(r.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;h();const P=s.attributes,G=o.getAttributes(),K=a.defaultAttributeValues;for(const t in G){const i=G[t];if(i>=0){const a=P[t];if(void 0!==a){const t=a.normalized,r=a.itemSize,o=n.get(a);if(void 0===o)continue;const P=o.buffer,G=o.type,K=o.bytesPerElement;if(a.isInterleavedBufferAttribute){const n=a.data,o=n.stride,l=a.offset;n&&n.isInstancedInterleavedBuffer?(d(i,n.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=n.meshPerAttribute*n.count)):u(i),e.bindBuffer(34962,P),p(i,r,G,t,o*K,l*K)}else a.isInstancedBufferAttribute?(d(i,a.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=a.meshPerAttribute*a.count)):u(i),e.bindBuffer(34962,P),p(i,r,G,t,0,0)}else if("instanceMatrix"===t){const t=n.get(r.instanceMatrix);if(void 0===t)continue;const a=t.buffer,o=t.type;d(i+0,1),d(i+1,1),d(i+2,1),d(i+3,1),e.bindBuffer(34962,a),e.vertexAttribPointer(i+0,4,o,!1,64,0),e.vertexAttribPointer(i+1,4,o,!1,64,16),e.vertexAttribPointer(i+2,4,o,!1,64,32),e.vertexAttribPointer(i+3,4,o,!1,64,48)}else if("instanceColor"===t){const t=n.get(r.instanceColor);if(void 0===t)continue;const a=t.buffer,o=t.type;d(i,1),e.bindBuffer(34962,a),e.vertexAttribPointer(i,3,o,!1,12,0)}else if(void 0!==K){const n=K[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(i,n);break;case 3:e.vertexAttrib3fv(i,n);break;case 4:e.vertexAttrib4fv(i,n);break;default:e.vertexAttrib1fv(i,n)}}}}N()}(r,P,l,J),null!==f&&e.bindBuffer(34963,n.get(f).buffer))},reset:J,resetDefaultState:f,dispose:function(){J();for(const e in s){const t=s[e];for(const e in t){const n=t[e];for(const e in n)l(n[e].object),delete n[e];delete t[e]}delete s[e]}},releaseStatesOfGeometry:function(e){if(void 0===s[e.id])return;const t=s[e.id];for(const e in t){const n=t[e];for(const e in n)l(n[e].object),delete n[e];delete t[e]}delete s[e.id]},releaseStatesOfProgram:function(e){for(const t in s){const n=s[t];if(void 0===n[e.id])continue;const i=n[e.id];for(const e in i)l(i[e].object),delete i[e];delete n[e.id]}},initAttributes:h,enableAttribute:u,disableUnusedAttributes:N}}function an(e,t,n,i){const r=i.isWebGL2;let a;this.setMode=function(e){a=e},this.render=function(t,i){e.drawArrays(a,t,i),n.update(i,a,1)},this.renderInstances=function(i,o,s){if(0===s)return;let P,G;if(r)P=e,G="drawArraysInstanced";else if(P=t.get("ANGLE_instanced_arrays"),G="drawArraysInstancedANGLE",null===P)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");P[G](a,i,o,s),n.update(o,a,s)}}function on(e,t,n){let i;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let o=void 0!==n.precision?n.precision:"highp";const s=r(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);const P=!0===n.logarithmicDepthBuffer,G=e.getParameter(34930),K=e.getParameter(35660),l=e.getParameter(3379),c=e.getParameter(34076),h=e.getParameter(34921),u=e.getParameter(36347),d=e.getParameter(36348),N=e.getParameter(36349),p=K>0,J=a||t.has("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");i=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:o,logarithmicDepthBuffer:P,maxTextures:G,maxVertexTextures:K,maxTextureSize:l,maxCubemapSize:c,maxAttributes:h,maxVertexUniforms:u,maxVaryings:d,maxFragmentUniforms:N,vertexTextures:p,floatFragmentTextures:J,floatVertexTextures:p&&J,maxSamples:a?e.getParameter(36183):0}}function sn(e){const t=this;let n=null,i=0,r=!1,a=!1;const o=new Re,s=new f,P={value:null,needsUpdate:!1};function G(){P.value!==n&&(P.value=n,P.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function K(e,n,i,r){const a=null!==e?e.length:0;let G=null;if(0!==a){if(G=P.value,!0!==r||null===G){const t=i+4*a,r=n.matrixWorldInverse;s.getNormalMatrix(r),(null===G||G.length<t)&&(G=new Float32Array(t));for(let t=0,n=i;t!==a;++t,n+=4)o.copy(e[t]).applyMatrix4(r,s),o.normal.toArray(G,n),G[n+3]=o.constant}P.value=G,P.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,G}this.uniform=P,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){const o=0!==e.length||t||0!==i||r;return r=t,n=K(e,a,0),i=e.length,o},this.beginShadows=function(){a=!0,K(null)},this.endShadows=function(){a=!1,G()},this.setState=function(t,o,s){const l=t.clippingPlanes,c=t.clipIntersection,h=t.clipShadows,u=e.get(t);if(!r||null===l||0===l.length||a&&!h)a?K(null):G();else{const e=a?0:i,t=4*e;let r=u.clippingState||null;P.value=r,r=K(l,o,t,s);for(let e=0;e!==t;++e)r[e]=n[e];u.clippingState=r,this.numIntersection=c?this.numPlanes:0,this.numPlanes+=e}}}function Pn(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=301:304===t&&(e.mapping=302),e}function i(e){const n=e.target;n.removeEventListener("dispose",i);const r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping;if(303===a||304===a){if(t.has(r)){return n(t.get(r).texture,r.mapping)}{const a=r.image;if(a&&a.height>0){const o=e.getRenderTarget(),s=new Wt(a.height/2);return s.fromEquirectangularTexture(e,r),t.set(r,s),e.setRenderTarget(o),r.addEventListener("dispose",i),n(s.texture,r.mapping)}return null}}}return r},dispose:function(){t=new WeakMap}}}function Gn(e){const t={};function n(n){if(void 0!==t[n])return t[n];let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function Kn(e,t,n,i){const r={},a=new WeakMap;function o(e){const s=e.target;null!==s.index&&t.remove(s.index);for(const e in s.attributes)t.remove(s.attributes[e]);s.removeEventListener("dispose",o),delete r[s.id];const P=a.get(s);P&&(t.remove(P),a.delete(s)),i.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,n.memory.geometries--}function s(e){const n=[],i=e.index,r=e.attributes.position;let o=0;if(null!==i){const e=i.array;o=i.version;for(let t=0,i=e.length;t<i;t+=3){const i=e[t+0],r=e[t+1],a=e[t+2];n.push(i,r,r,a,a,i)}}else{const e=r.array;o=r.version;for(let t=0,i=e.length/3-1;t<i;t+=3){const e=t+0,i=t+1,r=t+2;n.push(e,i,i,r,r,e)}}const s=new(Pt(n)>65535?ot:at)(n,1);s.version=o;const P=a.get(e);P&&t.remove(P),a.set(e,s)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",o),r[t.id]=!0,n.memory.geometries++),t},update:function(e){const n=e.attributes;for(const e in n)t.update(n[e],34962);const i=e.morphAttributes;for(const e in i){const n=i[e];for(let e=0,i=n.length;e<i;e++)t.update(n[e],34962)}},getWireframeAttribute:function(e){const t=a.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&s(e)}else s(e);return a.get(e)}}}function ln(e,t,n,i){const r=i.isWebGL2;let a,o,s;this.setMode=function(e){a=e},this.setIndex=function(e){o=e.type,s=e.bytesPerElement},this.render=function(t,i){e.drawElements(a,i,o,t*s),n.update(i,a,1)},this.renderInstances=function(i,P,G){if(0===G)return;let K,l;if(r)K=e,l="drawElementsInstanced";else if(K=t.get("ANGLE_instanced_arrays"),l="drawElementsInstancedANGLE",null===K)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");K[l](a,P,o,i*s,G),n.update(P,a,G)}}function cn(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,i){switch(t.calls++,n){case 4:t.triangles+=i*(e/3);break;case 1:t.lines+=i*(e/2);break;case 3:t.lines+=i*(e-1);break;case 2:t.lines+=i*e;break;case 0:t.points+=i*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function hn(e,t){return e[0]-t[0]}function un(e,t){return Math.abs(t[1])-Math.abs(e[1])}function dn(e){const t={},n=new Float32Array(8),i=[];for(let e=0;e<8;e++)i[e]=[e,0];return{update:function(r,a,o,s){const P=r.morphTargetInfluences,G=void 0===P?0:P.length;let K=t[a.id];if(void 0===K){K=[];for(let e=0;e<G;e++)K[e]=[e,0];t[a.id]=K}for(let e=0;e<G;e++){const t=K[e];t[0]=e,t[1]=P[e]}K.sort(un);for(let e=0;e<8;e++)e<G&&K[e][1]?(i[e][0]=K[e][0],i[e][1]=K[e][1]):(i[e][0]=Number.MAX_SAFE_INTEGER,i[e][1]=0);i.sort(hn);const l=o.morphTargets&&a.morphAttributes.position,c=o.morphNormals&&a.morphAttributes.normal;let h=0;for(let e=0;e<8;e++){const t=i[e],r=t[0],o=t[1];r!==Number.MAX_SAFE_INTEGER&&o?(l&&a.getAttribute("morphTarget"+e)!==l[r]&&a.setAttribute("morphTarget"+e,l[r]),c&&a.getAttribute("morphNormal"+e)!==c[r]&&a.setAttribute("morphNormal"+e,c[r]),n[e]=o,h+=o):(l&&!0===a.hasAttribute("morphTarget"+e)&&a.deleteAttribute("morphTarget"+e),c&&!0===a.hasAttribute("morphNormal"+e)&&a.deleteAttribute("morphNormal"+e),n[e]=0)}const u=a.morphTargetsRelative?1:1-h;s.getUniforms().setValue(e,"morphTargetBaseInfluence",u),s.getUniforms().setValue(e,"morphTargetInfluences",n)}}}function Nn(e,t,n,i){let r=new WeakMap;function a(e){const t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){const o=i.render.frame,s=e.geometry,P=t.get(e,s);return r.get(P)!==o&&(t.update(P),r.set(P,o)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),P},dispose:function(){r=new WeakMap}}}tn.physical={uniforms:Ht([tn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new J(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new et(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:$t.meshphysical_vert,fragmentShader:$t.meshphysical_frag};class pn extends x{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}pn.prototype.isDataTexture2DArray=!0;class Jn extends x{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Jn.prototype.isDataTexture3D=!0;const fn=new x,mn=new pn,gn=new Jn,vn=new Ut,xn=[],yn=[],_n=new Float32Array(16),bn=new Float32Array(9),wn=new Float32Array(4);function Mn(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let a=xn[r];if(void 0===a&&(a=new Float32Array(r),xn[r]=a),0!==t){i.toArray(a,0);for(let i=1,r=0;i!==t;++i)r+=n,e[i].toArray(a,r)}return a}function Sn(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function Tn(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function En(e,t){let n=yn[t];void 0===n&&(n=new Int32Array(t),yn[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function Ln(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function An(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Sn(n,t))return;e.uniform2fv(this.addr,t),Tn(n,t)}}function Rn(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Sn(n,t))return;e.uniform3fv(this.addr,t),Tn(n,t)}}function Cn(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Sn(n,t))return;e.uniform4fv(this.addr,t),Tn(n,t)}}function Dn(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Sn(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Tn(n,t)}else{if(Sn(n,i))return;wn.set(i),e.uniformMatrix2fv(this.addr,!1,wn),Tn(n,i)}}function Fn(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Sn(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Tn(n,t)}else{if(Sn(n,i))return;bn.set(i),e.uniformMatrix3fv(this.addr,!1,bn),Tn(n,i)}}function Hn(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Sn(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Tn(n,t)}else{if(Sn(n,i))return;_n.set(i),e.uniformMatrix4fv(this.addr,!1,_n),Tn(n,i)}}function Bn(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function zn(e,t){const n=this.cache;Sn(n,t)||(e.uniform2iv(this.addr,t),Tn(n,t))}function In(e,t){const n=this.cache;Sn(n,t)||(e.uniform3iv(this.addr,t),Tn(n,t))}function kn(e,t){const n=this.cache;Sn(n,t)||(e.uniform4iv(this.addr,t),Tn(n,t))}function On(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Un(e,t){const n=this.cache;Sn(n,t)||(e.uniform2uiv(this.addr,t),Tn(n,t))}function Wn(e,t){const n=this.cache;Sn(n,t)||(e.uniform3uiv(this.addr,t),Tn(n,t))}function Vn(e,t){const n=this.cache;Sn(n,t)||(e.uniform4uiv(this.addr,t),Tn(n,t))}function Qn(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(t||fn,r)}function jn(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||gn,r)}function qn(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(t||vn,r)}function Xn(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||mn,r)}function Yn(e,t){e.uniform1fv(this.addr,t)}function Zn(e,t){const n=Mn(t,this.size,2);e.uniform2fv(this.addr,n)}function $n(e,t){const n=Mn(t,this.size,3);e.uniform3fv(this.addr,n)}function ei(e,t){const n=Mn(t,this.size,4);e.uniform4fv(this.addr,n)}function ti(e,t){const n=Mn(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function ni(e,t){const n=Mn(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function ii(e,t){const n=Mn(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function ri(e,t){e.uniform1iv(this.addr,t)}function ai(e,t){e.uniform2iv(this.addr,t)}function oi(e,t){e.uniform3iv(this.addr,t)}function si(e,t){e.uniform4iv(this.addr,t)}function Pi(e,t){e.uniform1uiv(this.addr,t)}function Gi(e,t){e.uniform2uiv(this.addr,t)}function Ki(e,t){e.uniform3uiv(this.addr,t)}function li(e,t){e.uniform4uiv(this.addr,t)}function ci(e,t,n){const i=t.length,r=En(n,i);e.uniform1iv(this.addr,r);for(let e=0;e!==i;++e)n.safeSetTexture2D(t[e]||fn,r[e])}function hi(e,t,n){const i=t.length,r=En(n,i);e.uniform1iv(this.addr,r);for(let e=0;e!==i;++e)n.safeSetTextureCube(t[e]||vn,r[e])}function ui(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Ln;case 35664:return An;case 35665:return Rn;case 35666:return Cn;case 35674:return Dn;case 35675:return Fn;case 35676:return Hn;case 5124:case 35670:return Bn;case 35667:case 35671:return zn;case 35668:case 35672:return In;case 35669:case 35673:return kn;case 5125:return On;case 36294:return Un;case 36295:return Wn;case 36296:return Vn;case 35678:case 36198:case 36298:case 36306:case 35682:return Qn;case 35679:case 36299:case 36307:return jn;case 35680:case 36300:case 36308:case 36293:return qn;case 36289:case 36303:case 36311:case 36292:return Xn}}(t.type)}function di(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Yn;case 35664:return Zn;case 35665:return $n;case 35666:return ei;case 35674:return ti;case 35675:return ni;case 35676:return ii;case 5124:case 35670:return ri;case 35667:case 35671:return ai;case 35668:case 35672:return oi;case 35669:case 35673:return si;case 5125:return Pi;case 36294:return Gi;case 36295:return Ki;case 36296:return li;case 35678:case 36198:case 36298:case 36306:case 35682:return ci;case 35680:case 36300:case 36308:case 36293:return hi}}(t.type)}function Ni(e){this.id=e,this.seq=[],this.map={}}di.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),Tn(t,e)},Ni.prototype.setValue=function(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(e,t[a.id],n)}};const pi=/(\w+)(\])?(\[|\.)?/g;function Ji(e,t){e.seq.push(t),e.map[t.id]=t}function fi(e,t,n){const i=e.name,r=i.length;for(pi.lastIndex=0;;){const a=pi.exec(i),o=pi.lastIndex;let s=a[1];const P="]"===a[2],G=a[3];if(P&&(s|=0),void 0===G||"["===G&&o+2===r){Ji(n,void 0===G?new ui(s,e,t):new di(s,e,t));break}{let e=n.map[s];void 0===e&&(e=new Ni(s),Ji(n,e)),n=e}}}function mi(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const n=e.getActiveUniform(t,i);fi(n,e.getUniformLocation(t,n.name),this)}}function gi(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}mi.prototype.setValue=function(e,t,n,i){const r=this.map[t];void 0!==r&&r.setValue(e,n,i)},mi.prototype.setOptional=function(e,t,n){const i=t[n];void 0!==i&&this.setValue(e,n,i)},mi.upload=function(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const a=t[r],o=n[a.id];!1!==o.needsUpdate&&a.setValue(e,o.value,i)}},mi.seqWithValue=function(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const r=e[i];r.id in t&&n.push(r)}return n};let vi=0;function xi(e){switch(e){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function yi(e,t,n){const i=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(i&&""===r)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+r+function(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function _i(e,t){const n=xi(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function bi(e,t){const n=xi(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function wi(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Mi(e){return""!==e}function Si(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Ti(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Ei=/^[ \t]*#include +<([\w\d./]+)>/gm;function Li(e){return e.replace(Ei,Ai)}function Ai(e,t){const n=$t[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return Li(n)}const Ri=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Ci=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Di(e){return e.replace(Ci,Hi).replace(Ri,Fi)}function Fi(e,t,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Hi(e,t,n,i)}function Hi(e,t,n,i){let r="";for(let e=parseInt(t);e<parseInt(n);e++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return r}function Bi(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function zi(e,t,n,i){const r=e.getContext(),a=n.defines;let o=n.vertexShader,s=n.fragmentShader;const P=function(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),G=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case 306:case 307:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),K=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case 302:case 307:t="ENVMAP_MODE_REFRACTION"}return t}(n),l=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),c=e.gammaFactor>0?e.gammaFactor:1,h=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Mi).join("\n")}(n),u=function(e){const t=[];for(const n in e){const i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(a),d=r.createProgram();let N,p,J=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(N=[u].filter(Mi).join("\n"),N.length>0&&(N+="\n"),p=[h,u].filter(Mi).join("\n"),p.length>0&&(p+="\n")):(N=[Bi(n),"#define SHADER_NAME "+n.shaderName,u,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+c,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+K:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+P:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Mi).join("\n"),p=[h,Bi(n),"#define SHADER_NAME "+n.shaderName,u,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+c,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+G:"",n.envMap?"#define "+K:"",n.envMap?"#define "+l:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+P:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?$t.tonemapping_pars_fragment:"",0!==n.toneMapping?wi("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",$t.encodings_pars_fragment,n.map?_i("mapTexelToLinear",n.mapEncoding):"",n.matcap?_i("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?_i("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?_i("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?_i("lightMapTexelToLinear",n.lightMapEncoding):"",bi("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Mi).join("\n")),o=Li(o),o=Si(o,n),o=Ti(o,n),s=Li(s),s=Si(s,n),s=Ti(s,n),o=Di(o),s=Di(s),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(J="#version 300 es\n",N=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+N,p=["#define varying in","300 es"===n.glslVersion?"":"out highp vec4 pc_fragColor;","300 es"===n.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+p);const f=J+p+s,m=gi(r,35633,J+N+o),g=gi(r,35632,f);if(r.attachShader(d,m),r.attachShader(d,g),void 0!==n.index0AttributeName?r.bindAttribLocation(d,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(d,0,"position"),r.linkProgram(d),e.debug.checkShaderErrors){const e=r.getProgramInfoLog(d).trim(),t=r.getShaderInfoLog(m).trim(),n=r.getShaderInfoLog(g).trim();let i=!0,a=!0;if(!1===r.getProgramParameter(d,35714)){i=!1;const t=yi(r,m,"vertex"),n=yi(r,g,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(d,35715),"gl.getProgramInfoLog",e,t,n)}else""!==e?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",e):""!==t&&""!==n||(a=!1);a&&(this.diagnostics={runnable:i,programLog:e,vertexShader:{log:t,prefix:N},fragmentShader:{log:n,prefix:p}})}let v,x;return r.deleteShader(m),r.deleteShader(g),this.getUniforms=function(){return void 0===v&&(v=new mi(r,d)),v},this.getAttributes=function(){return void 0===x&&(x=function(e,t){const n={},i=e.getProgramParameter(t,35721);for(let r=0;r<i;r++){const i=e.getActiveAttrib(t,r).name;n[i]=e.getAttribLocation(t,i)}return n}(r,d)),x},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(d),this.program=void 0},this.name=n.shaderName,this.id=vi++,this.cacheKey=t,this.usedTimes=1,this.program=d,this.vertexShader=m,this.fragmentShader=g,this}function Ii(e,t,n,i,r,a){const o=[],s=i.isWebGL2,P=i.logarithmicDepthBuffer,G=i.floatVertexTextures,K=i.maxVertexUniforms,l=i.vertexTextures;let c=i.precision;const h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},u=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function d(e){let t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=3e3,t}return{getParameters:function(r,o,u,N,p){const J=N.fog,f=r.isMeshStandardMaterial?N.environment:null,m=t.get(r.envMap||f),g=h[r.type],v=p.isSkinnedMesh?function(e){const t=e.skeleton.bones;if(G)return 1024;{const e=K,n=Math.floor((e-20)/4),i=Math.min(n,t.length);return i<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+i+"."),0):i}}(p):0;let x,y;if(null!==r.precision&&(c=i.getMaxPrecision(r.precision),c!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",c,"instead.")),g){const e=tn[g];x=e.vertexShader,y=e.fragmentShader}else x=r.vertexShader,y=r.fragmentShader;const _=e.getRenderTarget();return{isWebGL2:s,shaderID:g,shaderName:r.type,vertexShader:x,fragmentShader:y,defines:r.defines,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:c,instancing:!0===p.isInstancedMesh,instancingColor:!0===p.isInstancedMesh&&null!==p.instanceColor,supportsVertexTextures:l,outputEncoding:null!==_?d(_.texture):e.outputEncoding,map:!!r.map,mapEncoding:d(r.map),matcap:!!r.matcap,matcapEncoding:d(r.matcap),envMap:!!m,envMapMode:m&&m.mapping,envMapEncoding:d(m),envMapCubeUV:!!m&&(306===m.mapping||307===m.mapping),lightMap:!!r.lightMap,lightMapEncoding:d(r.lightMap),aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:d(r.emissiveMap),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:1===r.normalMapType,tangentSpaceNormalMap:0===r.normalMapType,clearcoatMap:!!r.clearcoatMap,clearcoatRoughnessMap:!!r.clearcoatRoughnessMap,clearcoatNormalMap:!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,gradientMap:!!r.gradientMap,sheen:!!r.sheen,transmissionMap:!!r.transmissionMap,combine:r.combine,vertexTangents:r.normalMap&&r.vertexTangents,vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&p.geometry&&p.geometry.attributes.color&&4===p.geometry.attributes.color.itemSize,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.displacementMap||r.transmissionMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmissionMap||!r.displacementMap),fog:!!J,useFog:r.fog,fogExp2:J&&J.isFogExp2,flatShading:!!r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:P,skinning:r.skinning&&v>0,maxBones:v,useVertexTexture:G,morphTargets:r.morphTargets,morphNormals:r.morphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:r.dithering,shadowMapEnabled:e.shadowMap.enabled&&u.length>0,shadowMapType:e.shadowMap.type,toneMapping:r.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:2===r.side,flipSided:1===r.side,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:s||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:s||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:s||n.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.fragmentShader),n.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<u.length;e++)n.push(t[u[e]]);n.push(e.outputEncoding),n.push(e.gammaFactor)}return n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=h[e.type];let n;if(t){const e=tn[t];n=Bt.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let i;for(let e=0,t=o.length;e<t;e++){const t=o[e];if(t.cacheKey===n){i=t,++i.usedTimes;break}}return void 0===i&&(i=new zi(e,n,t,r),o.push(i)),i},releaseProgram:function(e){if(0==--e.usedTimes){const t=o.indexOf(e);o[t]=o[o.length-1],o.pop(),e.destroy()}},programs:o}}function ki(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,i){e.get(t)[n]=i},dispose:function(){e=new WeakMap}}}function Oi(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Ui(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Wi(e){const t=[];let n=0;const i=[],r=[],a={id:-1};function o(i,r,o,s,P,G){let K=t[n];const l=e.get(o);return void 0===K?(K={id:i.id,object:i,geometry:r,material:o,program:l.program||a,groupOrder:s,renderOrder:i.renderOrder,z:P,group:G},t[n]=K):(K.id=i.id,K.object=i,K.geometry=r,K.material=o,K.program=l.program||a,K.groupOrder=s,K.renderOrder=i.renderOrder,K.z=P,K.group=G),n++,K}return{opaque:i,transparent:r,init:function(){n=0,i.length=0,r.length=0},push:function(e,t,n,a,s,P){const G=o(e,t,n,a,s,P);(!0===n.transparent?r:i).push(G)},unshift:function(e,t,n,a,s,P){const G=o(e,t,n,a,s,P);(!0===n.transparent?r:i).unshift(G)},finish:function(){for(let e=n,i=t.length;e<i;e++){const n=t[e];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(e,t){i.length>1&&i.sort(e||Oi),r.length>1&&r.sort(t||Ui)}}}function Vi(e){let t=new WeakMap;return{get:function(n,i){let r;return!1===t.has(n)?(r=new Wi(e),t.set(n,[r])):i>=t.get(n).length?(r=new Wi(e),t.get(n).push(r)):r=t.get(n)[i],r},dispose:function(){t=new WeakMap}}}function Qi(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new M,color:new et};break;case"SpotLight":n={position:new M,direction:new M,color:new et,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new M,color:new et,distance:0,decay:0};break;case"HemisphereLight":n={direction:new M,skyColor:new et,groundColor:new et};break;case"RectAreaLight":n={color:new et,position:new M,halfWidth:new M,halfHeight:new M}}return e[t.id]=n,n}}}let ji=0;function qi(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Xi(e,t){const n=new Qi,i=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new J};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new J,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)r.probe.push(new M);const a=new M,o=new ae,s=new ae;return{setup:function(a){let o=0,s=0,P=0;for(let e=0;e<9;e++)r.probe[e].set(0,0,0);let G=0,K=0,l=0,c=0,h=0,u=0,d=0,N=0;a.sort(qi);for(let e=0,t=a.length;e<t;e++){const t=a[e],p=t.color,J=t.intensity,f=t.distance,m=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)o+=p.r*J,s+=p.g*J,P+=p.b*J;else if(t.isLightProbe)for(let e=0;e<9;e++)r.probe[e].addScaledVector(t.sh.coefficients[e],J);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,r.directionalShadow[G]=n,r.directionalShadowMap[G]=m,r.directionalShadowMatrix[G]=t.shadow.matrix,u++}r.directional[G]=e,G++}else if(t.isSpotLight){const e=n.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(p).multiplyScalar(J),e.distance=f,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,r.spotShadow[l]=n,r.spotShadowMap[l]=m,r.spotShadowMatrix[l]=t.shadow.matrix,N++}r.spot[l]=e,l++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(p).multiplyScalar(J),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),r.rectArea[c]=e,c++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,r.pointShadow[K]=n,r.pointShadowMap[K]=m,r.pointShadowMatrix[K]=t.shadow.matrix,d++}r.point[K]=e,K++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(J),e.groundColor.copy(t.groundColor).multiplyScalar(J),r.hemi[h]=e,h++}}c>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(r.rectAreaLTC1=en.LTC_FLOAT_1,r.rectAreaLTC2=en.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=en.LTC_HALF_1,r.rectAreaLTC2=en.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=o,r.ambient[1]=s,r.ambient[2]=P;const p=r.hash;p.directionalLength===G&&p.pointLength===K&&p.spotLength===l&&p.rectAreaLength===c&&p.hemiLength===h&&p.numDirectionalShadows===u&&p.numPointShadows===d&&p.numSpotShadows===N||(r.directional.length=G,r.spot.length=l,r.rectArea.length=c,r.point.length=K,r.hemi.length=h,r.directionalShadow.length=u,r.directionalShadowMap.length=u,r.pointShadow.length=d,r.pointShadowMap.length=d,r.spotShadow.length=N,r.spotShadowMap.length=N,r.directionalShadowMatrix.length=u,r.pointShadowMatrix.length=d,r.spotShadowMatrix.length=N,p.directionalLength=G,p.pointLength=K,p.spotLength=l,p.rectAreaLength=c,p.hemiLength=h,p.numDirectionalShadows=u,p.numPointShadows=d,p.numSpotShadows=N,r.version=ji++)},setupView:function(e,t){let n=0,i=0,P=0,G=0,K=0;const l=t.matrixWorldInverse;for(let t=0,c=e.length;t<c;t++){const c=e[t];if(c.isDirectionalLight){const e=r.directional[n];e.direction.setFromMatrixPosition(c.matrixWorld),a.setFromMatrixPosition(c.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(l),n++}else if(c.isSpotLight){const e=r.spot[P];e.position.setFromMatrixPosition(c.matrixWorld),e.position.applyMatrix4(l),e.direction.setFromMatrixPosition(c.matrixWorld),a.setFromMatrixPosition(c.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(l),P++}else if(c.isRectAreaLight){const e=r.rectArea[G];e.position.setFromMatrixPosition(c.matrixWorld),e.position.applyMatrix4(l),s.identity(),o.copy(c.matrixWorld),o.premultiply(l),s.extractRotation(o),e.halfWidth.set(.5*c.width,0,0),e.halfHeight.set(0,.5*c.height,0),e.halfWidth.applyMatrix4(s),e.halfHeight.applyMatrix4(s),G++}else if(c.isPointLight){const e=r.point[i];e.position.setFromMatrixPosition(c.matrixWorld),e.position.applyMatrix4(l),i++}else if(c.isHemisphereLight){const e=r.hemi[K];e.direction.setFromMatrixPosition(c.matrixWorld),e.direction.transformDirection(l),e.direction.normalize(),K++}}},state:r}}function Yi(e,t){const n=new Xi(e,t),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(){n.setup(i)},setupLightsView:function(e){n.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){r.push(e)}}}function Zi(e,t){let n=new WeakMap;return{get:function(i,r=0){let a;return!1===n.has(i)?(a=new Yi(e,t),n.set(i,[a])):r>=n.get(i).length?(a=new Yi(e,t),n.get(i).push(a)):a=n.get(i)[r],a},dispose:function(){n=new WeakMap}}}class $i extends Qe{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}$i.prototype.isMeshDepthMaterial=!0;class er extends Qe{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new M,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}er.prototype.isMeshDistanceMaterial=!0;function tr(e,t,n){let i=new qt;const r=new J,a=new J,o=new _,s=[],P=[],G={},K=n.maxTextureSize,l={0:1,1:0,2:2},c=new zt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new J},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),h=c.clone();h.defines.HORIZONTAL_PASS=1;const u=new Nt;u.setAttribute("position",new rt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const d=new Rt(u,c),N=this;function p(n,i){const r=t.update(d);c.uniforms.shadow_pass.value=n.map.texture,c.uniforms.resolution.value=n.mapSize,c.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(i,null,r,c,d,null),h.uniforms.shadow_pass.value=n.mapPass.texture,h.uniforms.resolution.value=n.mapSize,h.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(i,null,r,h,d,null)}function f(e,t,n){const i=e<<0|t<<1|n<<2;let r=s[i];return void 0===r&&(r=new $i({depthPacking:3201,morphTargets:e,skinning:t}),s[i]=r),r}function m(e,t,n){const i=e<<0|t<<1|n<<2;let r=P[i];return void 0===r&&(r=new er({morphTargets:e,skinning:t}),P[i]=r),r}function g(t,n,i,r,a,o,s){let P=null,K=f,c=t.customDepthMaterial;if(!0===r.isPointLight&&(K=m,c=t.customDistanceMaterial),void 0===c){let e=!1;!0===i.morphTargets&&(e=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let r=!1;!0===t.isSkinnedMesh&&(!0===i.skinning?r=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t));P=K(e,r,!0===t.isInstancedMesh)}else P=c;if(e.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){const e=P.uuid,t=i.uuid;let n=G[e];void 0===n&&(n={},G[e]=n);let r=n[t];void 0===r&&(r=P.clone(),n[t]=r),P=r}return P.visible=i.visible,P.wireframe=i.wireframe,P.side=3===s?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:l[i.side],P.clipShadows=i.clipShadows,P.clippingPlanes=i.clippingPlanes,P.clipIntersection=i.clipIntersection,P.wireframeLinewidth=i.wireframeLinewidth,P.linewidth=i.linewidth,!0===r.isPointLight&&!0===P.isMeshDistanceMaterial&&(P.referencePosition.setFromMatrixPosition(r.matrixWorld),P.nearDistance=a,P.farDistance=o),P}function v(n,r,a,o,s){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===s)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=t.update(n),r=n.material;if(Array.isArray(r)){const t=i.groups;for(let P=0,G=t.length;P<G;P++){const G=t[P],K=r[G.materialIndex];if(K&&K.visible){const t=g(n,i,K,o,a.near,a.far,s);e.renderBufferDirect(a,null,i,t,n,G)}}}else if(r.visible){const t=g(n,i,r,o,a.near,a.far,s);e.renderBufferDirect(a,null,i,t,n,null)}}const P=n.children;for(let e=0,t=P.length;e<t;e++)v(P[e],r,a,o,s)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,n,s){if(!1===N.enabled)return;if(!1===N.autoUpdate&&!1===N.needsUpdate)return;if(0===t.length)return;const P=e.getRenderTarget(),G=e.getActiveCubeFace(),l=e.getActiveMipmapLevel(),c=e.state;c.setBlending(0),c.buffers.color.setClear(1,1,1,1),c.buffers.depth.setTest(!0),c.setScissorTest(!1);for(let P=0,G=t.length;P<G;P++){const G=t[P],l=G.shadow;if(void 0===l){console.warn("THREE.WebGLShadowMap:",G,"has no shadow.");continue}if(!1===l.autoUpdate&&!1===l.needsUpdate)continue;r.copy(l.mapSize);const h=l.getFrameExtents();if(r.multiply(h),a.copy(l.mapSize),(r.x>K||r.y>K)&&(r.x>K&&(a.x=Math.floor(K/h.x),r.x=a.x*h.x,l.mapSize.x=a.x),r.y>K&&(a.y=Math.floor(K/h.y),r.y=a.y*h.y,l.mapSize.y=a.y)),null===l.map&&!l.isPointLightShadow&&3===this.type){const e={minFilter:1006,magFilter:1006,format:1023};l.map=new b(r.x,r.y,e),l.map.texture.name=G.name+".shadowMap",l.mapPass=new b(r.x,r.y,e),l.camera.updateProjectionMatrix()}if(null===l.map){const e={minFilter:1003,magFilter:1003,format:1023};l.map=new b(r.x,r.y,e),l.map.texture.name=G.name+".shadowMap",l.camera.updateProjectionMatrix()}e.setRenderTarget(l.map),e.clear();const u=l.getViewportCount();for(let e=0;e<u;e++){const t=l.getViewport(e);o.set(a.x*t.x,a.y*t.y,a.x*t.z,a.y*t.w),c.viewport(o),l.updateMatrices(G,e),i=l.getFrustum(),v(n,s,l.camera,G,this.type)}l.isPointLightShadow||3!==this.type||p(l,s),l.needsUpdate=!1}N.needsUpdate=!1,e.setRenderTarget(P,G,l)}}function nr(e,t,n){const i=n.isWebGL2;const r=new function(){let t=!1;const n=new _;let i=null;const r=new _(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,a,o,s){!0===s&&(t*=o,i*=o,a*=o),n.set(t,i,a,o),!1===r.equals(n)&&(e.clearColor(t,i,a,o),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},a=new function(){let t=!1,n=null,i=null,r=null;return{setTest:function(e){e?D(2929):F(2929)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);i=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,n=null,i=null,r=null}}},o=new function(){let t=!1,n=null,i=null,r=null,a=null,o=null,s=null,P=null,G=null;return{setTest:function(e){t||(e?D(2960):F(2960))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,o){i===t&&r===n&&a===o||(e.stencilFunc(t,n,o),i=t,r=n,a=o)},setOp:function(t,n,i){o===t&&s===n&&P===i||(e.stencilOp(t,n,i),o=t,s=n,P=i)},setLocked:function(e){t=e},setClear:function(t){G!==t&&(e.clearStencil(t),G=t)},reset:function(){t=!1,n=null,i=null,r=null,a=null,o=null,s=null,P=null,G=null}}};let s={},P=null,G={},K=null,l=!1,c=null,h=null,u=null,d=null,N=null,p=null,J=null,f=!1,m=null,g=null,v=null,x=null,y=null;const b=e.getParameter(35661);let w=!1,M=0;const S=e.getParameter(7938);-1!==S.indexOf("WebGL")?(M=parseFloat(/^WebGL (\d)/.exec(S)[1]),w=M>=1):-1!==S.indexOf("OpenGL ES")&&(M=parseFloat(/^OpenGL ES (\d)/.exec(S)[1]),w=M>=2);let T=null,E={};const L=new _(0,0,e.canvas.width,e.canvas.height),A=new _(0,0,e.canvas.width,e.canvas.height);function R(t,n,i){const r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<i;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,r);return a}const C={};function D(t){!0!==s[t]&&(e.enable(t),s[t]=!0)}function F(t){!1!==s[t]&&(e.disable(t),s[t]=!1)}C[3553]=R(3553,3553,1),C[34067]=R(34067,34069,6),r.setClear(0,0,0,1),a.setClear(1),o.setClear(0),D(2929),a.setFunc(3),I(!1),k(1),D(2884),z(0);const H={100:32774,101:32778,102:32779};if(i)H[103]=32775,H[104]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(H[103]=e.MIN_EXT,H[104]=e.MAX_EXT)}const B={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function z(t,n,i,r,a,o,s,P){if(0!==t){if(!1===l&&(D(3042),l=!0),5===t)a=a||n,o=o||i,s=s||r,n===h&&a===N||(e.blendEquationSeparate(H[n],H[a]),h=n,N=a),i===u&&r===d&&o===p&&s===J||(e.blendFuncSeparate(B[i],B[r],B[o],B[s]),u=i,d=r,p=o,J=s),c=t,f=null;else if(t!==c||P!==f){if(100===h&&100===N||(e.blendEquation(32774),h=100,N=100),P)switch(t){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,0,769,771);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFunc(0,769);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}u=null,d=null,p=null,J=null,c=t,f=P}}else!0===l&&(F(3042),l=!1)}function I(t){m!==t&&(t?e.frontFace(2304):e.frontFace(2305),m=t)}function k(t){0!==t?(D(2884),t!==g&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):F(2884),g=t}function O(t,n,i){t?(D(32823),x===n&&y===i||(e.polygonOffset(n,i),x=n,y=i)):F(32823)}function U(t){void 0===t&&(t=33984+b-1),T!==t&&(e.activeTexture(t),T=t)}return{buffers:{color:r,depth:a,stencil:o},enable:D,disable:F,bindFramebuffer:function(t,n){null===n&&null!==P&&(n=P),G[t]!==n&&(e.bindFramebuffer(t,n),G[t]=n,i&&(36009===t&&(G[36160]=n),36160===t&&(G[36009]=n)))},bindXRFramebuffer:function(t){t!==P&&(e.bindFramebuffer(36160,t),P=t)},useProgram:function(t){return K!==t&&(e.useProgram(t),K=t,!0)},setBlending:z,setMaterial:function(e,t){2===e.side?F(2884):D(2884);let n=1===e.side;t&&(n=!n),I(n),1===e.blending&&!1===e.transparent?z(0):z(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),r.setMask(e.colorWrite);const i=e.stencilWrite;o.setTest(i),i&&(o.setMask(e.stencilWriteMask),o.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),o.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),O(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?D(32926):F(32926)},setFlipSided:I,setCullFace:k,setLineWidth:function(t){t!==v&&(w&&e.lineWidth(t),v=t)},setPolygonOffset:O,setScissorTest:function(e){e?D(3089):F(3089)},activeTexture:U,bindTexture:function(t,n){null===T&&U();let i=E[T];void 0===i&&(i={type:void 0,texture:void 0},E[T]=i),i.type===t&&i.texture===n||(e.bindTexture(t,n||C[t]),i.type=t,i.texture=n)},unbindTexture:function(){const t=E[T];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===L.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),L.copy(t))},viewport:function(t){!1===A.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),A.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===i&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),s={},T=null,E={},P=null,G={},K=null,l=!1,c=null,h=null,u=null,d=null,N=null,p=null,J=null,f=!1,m=null,g=null,v=null,x=null,y=null,L.set(0,0,e.canvas.width,e.canvas.height),A.set(0,0,e.canvas.width,e.canvas.height),r.reset(),a.reset(),o.reset()}}}function ir(e,t,n,i,r,a,o){const s=r.isWebGL2,P=r.maxTextures,G=r.maxCubemapSize,K=r.maxTextureSize,l=r.maxSamples,c=new WeakMap;let h,u=!1;try{u="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function d(e,t){return u?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function J(e,t,n,i){let r=1;if((e.width>i||e.height>i)&&(r=i/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const i=t?p:Math.floor,a=i(r*e.width),o=i(r*e.height);void 0===h&&(h=d(a,o));const s=n?d(a,o):h;s.width=a,s.height=o;return s.getContext("2d").drawImage(e,0,0,a,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+o+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function f(e){return N(e.width)&&N(e.height)}function m(e,t){return e.generateMipmaps&&t&&1003!==e.minFilter&&1006!==e.minFilter}function g(t,n,r,a){e.generateMipmap(t);i.get(n).__maxMipLevel=Math.log2(Math.max(r,a))}function v(n,i,r){if(!1===s)return i;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let a=i;return 6403===i&&(5126===r&&(a=33326),5131===r&&(a=33325),5121===r&&(a=33321)),6407===i&&(5126===r&&(a=34837),5131===r&&(a=34843),5121===r&&(a=32849)),6408===i&&(5126===r&&(a=34836),5131===r&&(a=34842),5121===r&&(a=32856)),33325!==a&&33326!==a&&34842!==a&&34836!==a||t.get("EXT_color_buffer_float"),a}function x(e){return 1003===e||1004===e||1005===e?9728:9729}function y(t){const n=t.target;n.removeEventListener("dispose",y),function(t){const n=i.get(t);if(void 0===n.__webglInit)return;e.deleteTexture(n.__webglTexture),i.remove(t)}(n),n.isVideoTexture&&c.delete(n),o.memory.textures--}function _(t){const n=t.target;n.removeEventListener("dispose",_),function(t){const n=t.texture,r=i.get(t),a=i.get(n);if(!t)return;void 0!==a.__webglTexture&&e.deleteTexture(a.__webglTexture);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(r.__webglFramebuffer[t]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[t]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&e.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer);i.remove(n),i.remove(t)}(n),o.memory.textures--}let b=0;function w(e,t){const r=i.get(e);if(e.isVideoTexture&&function(e){const t=o.render.frame;c.get(e)!==t&&(c.set(e,t),e.update())}(e),e.version>0&&r.__version!==e.version){const n=e.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void A(r,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+t),n.bindTexture(3553,r.__webglTexture)}function M(t,r){const o=i.get(t);t.version>0&&o.__version!==t.version?function(t,i,r){if(6!==i.image.length)return;L(t,i),n.activeTexture(33984+r),n.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,i.flipY),e.pixelStorei(37441,i.premultiplyAlpha),e.pixelStorei(3317,i.unpackAlignment),e.pixelStorei(37443,0);const o=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),P=i.image[0]&&i.image[0].isDataTexture,K=[];for(let e=0;e<6;e++)K[e]=o||P?P?i.image[e].image:i.image[e]:J(i.image[e],!1,!0,G);const l=K[0],c=f(l)||s,h=a.convert(i.format),u=a.convert(i.type),d=v(i.internalFormat,h,u);let N;if(E(34067,i,c),o){for(let e=0;e<6;e++){N=K[e].mipmaps;for(let t=0;t<N.length;t++){const r=N[t];1023!==i.format&&1022!==i.format?null!==h?n.compressedTexImage2D(34069+e,t,d,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+e,t,d,r.width,r.height,0,h,u,r.data)}}t.__maxMipLevel=N.length-1}else{N=i.mipmaps;for(let e=0;e<6;e++)if(P){n.texImage2D(34069+e,0,d,K[e].width,K[e].height,0,h,u,K[e].data);for(let t=0;t<N.length;t++){const i=N[t].image[e].image;n.texImage2D(34069+e,t+1,d,i.width,i.height,0,h,u,i.data)}}else{n.texImage2D(34069+e,0,d,h,u,K[e]);for(let t=0;t<N.length;t++){const i=N[t];n.texImage2D(34069+e,t+1,d,h,u,i.image[e])}}t.__maxMipLevel=N.length}m(i,c)&&g(34067,i,l.width,l.height);t.__version=i.version,i.onUpdate&&i.onUpdate(i)}(o,t,r):(n.activeTexture(33984+r),n.bindTexture(34067,o.__webglTexture))}const S={1e3:10497,1001:33071,1002:33648},T={1003:9728,1004:9984,1005:9986,1006:9729,1007:9985,1008:9987};function E(n,a,o){if(o?(e.texParameteri(n,10242,S[a.wrapS]),e.texParameteri(n,10243,S[a.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,S[a.wrapR]),e.texParameteri(n,10240,T[a.magFilter]),e.texParameteri(n,10241,T[a.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),1001===a.wrapS&&1001===a.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,x(a.magFilter)),e.texParameteri(n,10241,x(a.minFilter)),1003!==a.minFilter&&1006!==a.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){const o=t.get("EXT_texture_filter_anisotropic");if(1015===a.type&&!1===t.has("OES_texture_float_linear"))return;if(!1===s&&1016===a.type&&!1===t.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(e.texParameterf(n,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}}function L(t,n){void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",y),t.__webglTexture=e.createTexture(),o.memory.textures++)}function A(t,i,r){let o=3553;i.isDataTexture2DArray&&(o=35866),i.isDataTexture3D&&(o=32879),L(t,i),n.activeTexture(33984+r),n.bindTexture(o,t.__webglTexture),e.pixelStorei(37440,i.flipY),e.pixelStorei(37441,i.premultiplyAlpha),e.pixelStorei(3317,i.unpackAlignment),e.pixelStorei(37443,0);const P=function(e){return!s&&(1001!==e.wrapS||1001!==e.wrapT||1003!==e.minFilter&&1006!==e.minFilter)}(i)&&!1===f(i.image),G=J(i.image,P,!1,K),l=f(G)||s,c=a.convert(i.format);let h,u=a.convert(i.type),d=v(i.internalFormat,c,u);E(o,i,l);const N=i.mipmaps;if(i.isDepthTexture)d=6402,s?d=1015===i.type?36012:1014===i.type?33190:1020===i.type?35056:33189:1015===i.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===i.format&&6402===d&&1012!==i.type&&1014!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=1012,u=a.convert(i.type)),1027===i.format&&6402===d&&(d=34041,1020!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=1020,u=a.convert(i.type))),n.texImage2D(3553,0,d,G.width,G.height,0,c,u,null);else if(i.isDataTexture)if(N.length>0&&l){for(let e=0,t=N.length;e<t;e++)h=N[e],n.texImage2D(3553,e,d,h.width,h.height,0,c,u,h.data);i.generateMipmaps=!1,t.__maxMipLevel=N.length-1}else n.texImage2D(3553,0,d,G.width,G.height,0,c,u,G.data),t.__maxMipLevel=0;else if(i.isCompressedTexture){for(let e=0,t=N.length;e<t;e++)h=N[e],1023!==i.format&&1022!==i.format?null!==c?n.compressedTexImage2D(3553,e,d,h.width,h.height,0,h.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,e,d,h.width,h.height,0,c,u,h.data);t.__maxMipLevel=N.length-1}else if(i.isDataTexture2DArray)n.texImage3D(35866,0,d,G.width,G.height,G.depth,0,c,u,G.data),t.__maxMipLevel=0;else if(i.isDataTexture3D)n.texImage3D(32879,0,d,G.width,G.height,G.depth,0,c,u,G.data),t.__maxMipLevel=0;else if(N.length>0&&l){for(let e=0,t=N.length;e<t;e++)h=N[e],n.texImage2D(3553,e,d,c,u,h);i.generateMipmaps=!1,t.__maxMipLevel=N.length-1}else n.texImage2D(3553,0,d,c,u,G),t.__maxMipLevel=0;m(i,l)&&g(o,i,G.width,G.height),t.__version=i.version,i.onUpdate&&i.onUpdate(i)}function R(t,r,o,s){const P=r.texture,G=a.convert(P.format),K=a.convert(P.type),l=v(P.internalFormat,G,K);32879===s||35866===s?n.texImage3D(s,0,l,r.width,r.height,r.depth,0,G,K,null):n.texImage2D(s,0,l,r.width,r.height,0,G,K,null),n.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,s,i.get(P).__webglTexture,0),n.bindFramebuffer(36160,null)}function C(t,n,i){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let r=33189;if(i){const t=n.depthTexture;t&&t.isDepthTexture&&(1015===t.type?r=36012:1014===t.type&&(r=33190));const i=F(n);e.renderbufferStorageMultisample(36161,i,r,n.width,n.height)}else e.renderbufferStorage(36161,r,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const t=F(n);e.renderbufferStorageMultisample(36161,t,35056,n.width,n.height)}else e.renderbufferStorage(36161,34041,n.width,n.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=n.texture,r=a.convert(t.format),o=a.convert(t.type),s=v(t.internalFormat,r,o);if(i){const t=F(n);e.renderbufferStorageMultisample(36161,t,s,n.width,n.height)}else e.renderbufferStorage(36161,s,n.width,n.height)}e.bindRenderbuffer(36161,null)}function D(t){const r=i.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),w(r.depthTexture,0);const a=i.get(r.depthTexture).__webglTexture;if(1026===r.depthTexture.format)e.framebufferTexture2D(36160,36096,3553,a,0);else{if(1027!==r.depthTexture.format)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,a,0)}}(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(36160,r.__webglFramebuffer[i]),r.__webglDepthbuffer[i]=e.createRenderbuffer(),C(r.__webglDepthbuffer[i],t,!1)}else n.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),C(r.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)}function F(e){return s&&e.isWebGLMultisampleRenderTarget?Math.min(l,e.samples):0}let H=!1,B=!1;this.allocateTextureUnit=function(){const e=b;return e>=P&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+P),b+=1,e},this.resetTextureUnits=function(){b=0},this.setTexture2D=w,this.setTexture2DArray=function(e,t){const r=i.get(e);e.version>0&&r.__version!==e.version?A(r,e,t):(n.activeTexture(33984+t),n.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(e,t){const r=i.get(e);e.version>0&&r.__version!==e.version?A(r,e,t):(n.activeTexture(33984+t),n.bindTexture(32879,r.__webglTexture))},this.setTextureCube=M,this.setupRenderTarget=function(t){const r=t.texture,P=i.get(t),G=i.get(r);t.addEventListener("dispose",_),G.__webglTexture=e.createTexture(),G.__version=r.version,o.memory.textures++;const K=!0===t.isWebGLCubeRenderTarget,l=!0===t.isWebGLMultisampleRenderTarget,c=r.isDataTexture3D||r.isDataTexture2DArray,h=f(t)||s;if(!s||1022!==r.format||1015!==r.type&&1016!==r.type||(r.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),K){P.__webglFramebuffer=[];for(let t=0;t<6;t++)P.__webglFramebuffer[t]=e.createFramebuffer()}else if(P.__webglFramebuffer=e.createFramebuffer(),l)if(s){P.__webglMultisampledFramebuffer=e.createFramebuffer(),P.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,P.__webglColorRenderbuffer);const i=a.convert(r.format),o=a.convert(r.type),s=v(r.internalFormat,i,o),G=F(t);e.renderbufferStorageMultisample(36161,G,s,t.width,t.height),n.bindFramebuffer(36160,P.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,P.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(P.__webglDepthRenderbuffer=e.createRenderbuffer(),C(P.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(K){n.bindTexture(34067,G.__webglTexture),E(34067,r,h);for(let e=0;e<6;e++)R(P.__webglFramebuffer[e],t,36064,34069+e);m(r,h)&&g(34067,r,t.width,t.height),n.bindTexture(34067,null)}else{let e=3553;if(c)if(s){e=r.isDataTexture3D?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");n.bindTexture(e,G.__webglTexture),E(e,r,h),R(P.__webglFramebuffer,t,36064,e),m(r,h)&&g(3553,r,t.width,t.height),n.bindTexture(3553,null)}t.depthBuffer&&D(t)},this.updateRenderTargetMipmap=function(e){const t=e.texture;if(m(t,f(e)||s)){const r=e.isWebGLCubeRenderTarget?34067:3553,a=i.get(t).__webglTexture;n.bindTexture(r,a),g(r,t,e.width,e.height),n.bindTexture(r,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(s){const r=t.width,a=t.height;let o=16384;t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024);const s=i.get(t);n.bindFramebuffer(36008,s.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,s.__webglFramebuffer),e.blitFramebuffer(0,0,r,a,0,0,r,a,o,9728),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,s.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===H&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),H=!0),e=e.texture),w(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===B&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),B=!0),e=e.texture),M(e,t)}}function rr(e,t,n){const i=n.isWebGL2;return{convert:function(e){let n;if(1009===e)return 5121;if(1017===e)return 32819;if(1018===e)return 32820;if(1019===e)return 33635;if(1010===e)return 5120;if(1011===e)return 5122;if(1012===e)return 5123;if(1013===e)return 5124;if(1014===e)return 5125;if(1015===e)return 5126;if(1016===e)return i?5131:(n=t.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(1021===e)return 6406;if(1022===e)return 6407;if(1023===e)return 6408;if(1024===e)return 6409;if(1025===e)return 6410;if(1026===e)return 6402;if(1027===e)return 34041;if(1028===e)return 6403;if(1029===e)return 36244;if(1030===e)return 33319;if(1031===e)return 33320;if(1032===e)return 36248;if(1033===e)return 36249;if(33776===e||33777===e||33778===e||33779===e){if(n=t.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(33776===e)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===e)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===e)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===e)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===e||35841===e||35842===e||35843===e){if(n=t.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(35840===e)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===e)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===e)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===e)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===e)return n=t.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===e||37496===e)&&(n=t.get("WEBGL_compressed_texture_etc"),null!==n)){if(37492===e)return n.COMPRESSED_RGB8_ETC2;if(37496===e)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===e||37809===e||37810===e||37811===e||37812===e||37813===e||37814===e||37815===e||37816===e||37817===e||37818===e||37819===e||37820===e||37821===e||37840===e||37841===e||37842===e||37843===e||37844===e||37845===e||37846===e||37847===e||37848===e||37849===e||37850===e||37851===e||37852===e||37853===e?(n=t.get("WEBGL_compressed_texture_astc"),null!==n?e:null):36492===e?(n=t.get("EXT_texture_compression_bptc"),null!==n?e:null):1020===e?i?34042:(n=t.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class ar extends kt{constructor(e=[]){super(),this.cameras=e}}ar.prototype.isArrayCamera=!0;class or extends Te{constructor(){super(),this.type="Group"}}or.prototype.isGroup=!0;const sr={type:"move"};class Pr{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new or,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new or,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new M,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new M),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new or,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new M,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new M),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const o=this._targetRay,s=this._grip,P=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==o&&(i=t.getPose(e.targetRaySpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(sr))),P&&e.hand){a=!0;for(const i of e.hand.values()){const e=t.getJointPose(i,n);if(void 0===P.joints[i.jointName]){const e=new or;e.matrixAutoUpdate=!1,e.visible=!1,P.joints[i.jointName]=e,P.add(e)}const r=P.joints[i.jointName];null!==e&&(r.matrix.fromArray(e.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=e.radius),r.visible=null!==e}const i=P.joints["index-finger-tip"],r=P.joints["thumb-tip"],o=i.position.distanceTo(r.position),s=.02,G=.005;P.inputState.pinching&&o>s+G?(P.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!P.inputState.pinching&&o<=s-G&&(P.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==s&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1));return null!==o&&(o.visible=null!==i),null!==s&&(s.visible=null!==r),null!==P&&(P.visible=null!==a),this}}class Gr extends G{constructor(e,t){super();const n=this,i=e.state;let r=null,a=1,o=null,s="local-floor",P=null;const G=[],K=new Map,l=new kt;l.layers.enable(1),l.viewport=new _;const c=new kt;c.layers.enable(2),c.viewport=new _;const h=[l,c],u=new ar;u.layers.enable(1),u.layers.enable(2);let d=null,N=null;function p(e){const t=K.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function J(){K.forEach((function(e,t){e.disconnect(t)})),K.clear(),d=null,N=null,i.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),y.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function f(e){const t=r.inputSources;for(let e=0;e<G.length;e++)K.set(t[e],G[e]);for(let t=0;t<e.removed.length;t++){const n=e.removed[t],i=K.get(n);i&&(i.dispatchEvent({type:"disconnected",data:n}),K.delete(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t],i=K.get(n);i&&i.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=G[e];return void 0===t&&(t=new Pr,G[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=G[e];return void 0===t&&(t=new Pr,G[e]=t),t.getGripSpace()},this.getHand=function(e){let t=G[e];return void 0===t&&(t=new Pr,G[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){a=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return r},this.setSession=async function(e){if(r=e,null!==r){r.addEventListener("select",p),r.addEventListener("selectstart",p),r.addEventListener("selectend",p),r.addEventListener("squeeze",p),r.addEventListener("squeezestart",p),r.addEventListener("squeezeend",p),r.addEventListener("end",J),r.addEventListener("inputsourceschange",f);const e=t.getContextAttributes();!0!==e.xrCompatible&&await t.makeXRCompatible();const i={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:a},P=new XRWebGLLayer(r,t,i);r.updateRenderState({baseLayer:P}),o=await r.requestReferenceSpace(s),y.setContext(r),y.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const m=new M,g=new M;function v(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.getCamera=function(e){u.near=c.near=l.near=e.near,u.far=c.far=l.far=e.far,d===u.near&&N===u.far||(r.updateRenderState({depthNear:u.near,depthFar:u.far}),d=u.near,N=u.far);const t=e.parent,n=u.cameras;v(u,t);for(let e=0;e<n.length;e++)v(n[e],t);e.matrixWorld.copy(u.matrixWorld),e.matrix.copy(u.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);const i=e.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(!0);return 2===n.length?function(e,t,n){m.setFromMatrixPosition(t.matrixWorld),g.setFromMatrixPosition(n.matrixWorld);const i=m.distanceTo(g),r=t.projectionMatrix.elements,a=n.projectionMatrix.elements,o=r[14]/(r[10]-1),s=r[14]/(r[10]+1),P=(r[9]+1)/r[5],G=(r[9]-1)/r[5],K=(r[8]-1)/r[0],l=(a[8]+1)/a[0],c=o*K,h=o*l,u=i/(-K+l),d=u*-K;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(d),e.translateZ(u),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const N=o+u,p=s+u,J=c-d,f=h+(i-d),v=P*s/p*N,x=G*s/p*N;e.projectionMatrix.makePerspective(J,f,v,x,N,p)}(u,l,c):u.projectionMatrix.copy(l.projectionMatrix),u};let x=null;const y=new Xt;y.setAnimationLoop((function(e,t){if(P=t.getViewerPose(o),null!==P){const e=P.views,t=r.renderState.baseLayer;i.bindXRFramebuffer(t.framebuffer);let n=!1;e.length!==u.cameras.length&&(u.cameras.length=0,n=!0);for(let i=0;i<e.length;i++){const r=e[i],a=t.getViewport(r),o=h[i];o.matrix.fromArray(r.transform.matrix),o.projectionMatrix.fromArray(r.projectionMatrix),o.viewport.set(a.x,a.y,a.width,a.height),0===i&&u.matrix.copy(o.matrix),!0===n&&u.cameras.push(o)}}const n=r.inputSources;for(let e=0;e<G.length;e++){const i=G[e],r=n[e];i.update(r,t,o)}x&&x(e,t)})),this.setAnimationLoop=function(e){x=e},this.dispose=function(){}}}function Kr(e){function t(t,n){t.opacity.value=n.opacity,n.color&&t.diffuse.value.copy(n.color),n.emissive&&t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(t.map.value=n.map),n.alphaMap&&(t.alphaMap.value=n.alphaMap),n.specularMap&&(t.specularMap.value=n.specularMap);const i=e.get(n).envMap;if(i){t.envMap.value=i,t.flipEnvMap.value=i.isCubeTexture&&i._needsFlipEnvMap?-1:1,t.reflectivity.value=n.reflectivity,t.refractionRatio.value=n.refractionRatio;const r=e.get(i).__maxMipLevel;void 0!==r&&(t.maxMipLevel.value=r)}let r,a;n.lightMap&&(t.lightMap.value=n.lightMap,t.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(t.aoMap.value=n.aoMap,t.aoMapIntensity.value=n.aoMapIntensity),n.map?r=n.map:n.specularMap?r=n.specularMap:n.displacementMap?r=n.displacementMap:n.normalMap?r=n.normalMap:n.bumpMap?r=n.bumpMap:n.roughnessMap?r=n.roughnessMap:n.metalnessMap?r=n.metalnessMap:n.alphaMap?r=n.alphaMap:n.emissiveMap?r=n.emissiveMap:n.clearcoatMap?r=n.clearcoatMap:n.clearcoatNormalMap?r=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(r=n.clearcoatRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix)),n.aoMap?a=n.aoMap:n.lightMap&&(a=n.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),t.uv2Transform.value.copy(a.matrix))}function n(t,n){t.roughness.value=n.roughness,t.metalness.value=n.metalness,n.roughnessMap&&(t.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(t.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(t.emissiveMap.value=n.emissiveMap),n.bumpMap&&(t.bumpMap.value=n.bumpMap,t.bumpScale.value=n.bumpScale,1===n.side&&(t.bumpScale.value*=-1)),n.normalMap&&(t.normalMap.value=n.normalMap,t.normalScale.value.copy(n.normalScale),1===n.side&&t.normalScale.value.negate()),n.displacementMap&&(t.displacementMap.value=n.displacementMap,t.displacementScale.value=n.displacementScale,t.displacementBias.value=n.displacementBias);e.get(n).envMap&&(t.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,i,r,a){i.isMeshBasicMaterial?t(e,i):i.isMeshLambertMaterial?(t(e,i),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,i)):i.isMeshToonMaterial?(t(e,i),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isMeshPhongMaterial?(t(e,i),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isMeshStandardMaterial?(t(e,i),i.isMeshPhysicalMaterial?function(e,t){n(e,t),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen);t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap);t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap);t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate());e.transmission.value=t.transmission,t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap)}(e,i):n(e,i)):i.isMeshMatcapMaterial?(t(e,i),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isMeshDepthMaterial?(t(e,i),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isMeshDistanceMaterial?(t(e,i),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,i)):i.isMeshNormalMaterial?(t(e,i),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,i),i.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,i)):i.isPointsMaterial?function(e,t,n,i){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*i,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}(e,i,r,a):i.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let n;t.map?n=t.map:t.alphaMap&&(n=t.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,i):i.isShadowMaterial?(e.color.value.copy(i.color),e.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function lr(e){const t=void 0!==(e=e||{}).canvas?e.canvas:function(){const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}(),n=void 0!==e.context?e.context:null,i=void 0!==e.alpha&&e.alpha,r=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,o=void 0!==e.antialias&&e.antialias,s=void 0===e.premultipliedAlpha||e.premultipliedAlpha,P=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,G=void 0!==e.powerPreference?e.powerPreference:"default",K=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let l=null,c=null;const h=[],u=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const d=this;let N=!1,p=0,f=0,m=null,g=-1,v=null;const x=new _,y=new _;let b=null,w=t.width,S=t.height,T=1,E=null,L=null;const A=new _(0,0,w,S),R=new _(0,0,w,S);let C=!1;const D=new qt;let F=!1,H=!1;const B=new ae,z=new M,I={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function k(){return null===m?T:1}let O,U,W,V,Q,j,q,X,Y,Z,$,ee,te,ne,ie,re,oe,se,Pe,Ge,Ke,le,ce=n;function he(e,n){for(let i=0;i<e.length;i++){const r=e[i],a=t.getContext(r,n);if(null!==a)return a}return null}try{const e={alpha:i,depth:r,stencil:a,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:P,powerPreference:G,failIfMajorPerformanceCaveat:K};if(t.addEventListener("webglcontextlost",Ne,!1),t.addEventListener("webglcontextrestored",pe,!1),null===ce){const t=["webgl2","webgl","experimental-webgl"];if(!0===d.isWebGL1Renderer&&t.shift(),ce=he(t,e),null===ce)throw he(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ce.getShaderPrecisionFormat&&(ce.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function ue(){O=new Gn(ce),U=new on(ce,O,e),O.init(U),Ke=new rr(ce,O,U),W=new nr(ce,O,U),V=new cn(ce),Q=new ki,j=new ir(ce,O,W,Q,U,Ke,V),q=new Pn(d),X=new Yt(ce,U),le=new rn(ce,O,X,U),Y=new Kn(ce,X,V,le),Z=new Nn(ce,Y,X,V),se=new dn(ce),ie=new sn(Q),$=new Ii(d,q,O,U,le,ie),ee=new Kr(Q),te=new Vi(Q),ne=new Zi(O,U),oe=new nn(d,q,W,Z,s),re=new tr(d,Z,U),Pe=new an(ce,O,V,U),Ge=new ln(ce,O,V,U),V.programs=$.programs,d.capabilities=U,d.extensions=O,d.properties=Q,d.renderLists=te,d.shadowMap=re,d.state=W,d.info=V}ue();const de=new Gr(d,ce);function Ne(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),N=!0}function pe(){console.log("THREE.WebGLRenderer: Context Restored."),N=!1;const e=V.autoReset,t=re.enabled,n=re.autoUpdate,i=re.needsUpdate,r=re.type;ue(),V.autoReset=e,re.enabled=t,re.autoUpdate=n,re.needsUpdate=i,re.type=r}function Je(e){const t=e.target;t.removeEventListener("dispose",Je),function(e){(function(e){const t=Q.get(e).programs;void 0!==t&&t.forEach((function(e){$.releaseProgram(e)}))})(e),Q.remove(e)}(t)}this.xr=de,this.getContext=function(){return ce},this.getContextAttributes=function(){return ce.getContextAttributes()},this.forceContextLoss=function(){const e=O.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=O.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return T},this.setPixelRatio=function(e){void 0!==e&&(T=e,this.setSize(w,S,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new J),e.set(w,S)},this.setSize=function(e,n,i){de.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(w=e,S=n,t.width=Math.floor(e*T),t.height=Math.floor(n*T),!1!==i&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new J),e.set(w*T,S*T).floor()},this.setDrawingBufferSize=function(e,n,i){w=e,S=n,T=i,t.width=Math.floor(e*i),t.height=Math.floor(n*i),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new _),e.copy(x)},this.getViewport=function(e){return e.copy(A)},this.setViewport=function(e,t,n,i){e.isVector4?A.set(e.x,e.y,e.z,e.w):A.set(e,t,n,i),W.viewport(x.copy(A).multiplyScalar(T).floor())},this.getScissor=function(e){return e.copy(R)},this.setScissor=function(e,t,n,i){e.isVector4?R.set(e.x,e.y,e.z,e.w):R.set(e,t,n,i),W.scissor(y.copy(R).multiplyScalar(T).floor())},this.getScissorTest=function(){return C},this.setScissorTest=function(e){W.setScissorTest(C=e)},this.setOpaqueSort=function(e){E=e},this.setTransparentSort=function(e){L=e},this.getClearColor=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),e=new et),e.copy(oe.getClearColor())},this.setClearColor=function(){oe.setClearColor.apply(oe,arguments)},this.getClearAlpha=function(){return oe.getClearAlpha()},this.setClearAlpha=function(){oe.setClearAlpha.apply(oe,arguments)},this.clear=function(e,t,n){let i=0;(void 0===e||e)&&(i|=16384),(void 0===t||t)&&(i|=256),(void 0===n||n)&&(i|=1024),ce.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ne,!1),t.removeEventListener("webglcontextrestored",pe,!1),te.dispose(),ne.dispose(),Q.dispose(),q.dispose(),Z.dispose(),le.dispose(),de.dispose(),de.removeEventListener("sessionstart",me),de.removeEventListener("sessionend",ge),ve.stop()},this.renderBufferImmediate=function(e,t){le.initAttributes();const n=Q.get(e);e.hasPositions&&!n.position&&(n.position=ce.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=ce.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=ce.createBuffer()),e.hasColors&&!n.color&&(n.color=ce.createBuffer());const i=t.getAttributes();e.hasPositions&&(ce.bindBuffer(34962,n.position),ce.bufferData(34962,e.positionArray,35048),le.enableAttribute(i.position),ce.vertexAttribPointer(i.position,3,5126,!1,0,0)),e.hasNormals&&(ce.bindBuffer(34962,n.normal),ce.bufferData(34962,e.normalArray,35048),le.enableAttribute(i.normal),ce.vertexAttribPointer(i.normal,3,5126,!1,0,0)),e.hasUvs&&(ce.bindBuffer(34962,n.uv),ce.bufferData(34962,e.uvArray,35048),le.enableAttribute(i.uv),ce.vertexAttribPointer(i.uv,2,5126,!1,0,0)),e.hasColors&&(ce.bindBuffer(34962,n.color),ce.bufferData(34962,e.colorArray,35048),le.enableAttribute(i.color),ce.vertexAttribPointer(i.color,3,5126,!1,0,0)),le.disableUnusedAttributes(),ce.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,i,r,a){null===t&&(t=I);const o=r.isMesh&&r.matrixWorld.determinant()<0,s=Me(e,t,i,r);W.setMaterial(i,o);let P=n.index;const G=n.attributes.position;if(null===P){if(void 0===G||0===G.count)return}else if(0===P.count)return;let K,l=1;!0===i.wireframe&&(P=Y.getWireframeAttribute(n),l=2),(i.morphTargets||i.morphNormals)&&se.update(r,n,i,s),le.setup(r,i,s,n,P);let c=Pe;null!==P&&(K=X.get(P),c=Ge,c.setIndex(K));const h=null!==P?P.count:G.count,u=n.drawRange.start*l,d=n.drawRange.count*l,N=null!==a?a.start*l:0,p=null!==a?a.count*l:1/0,J=Math.max(u,N),f=Math.min(h,u+d,N+p)-1,m=Math.max(0,f-J+1);if(0!==m){if(r.isMesh)!0===i.wireframe?(W.setLineWidth(i.wireframeLinewidth*k()),c.setMode(1)):c.setMode(4);else if(r.isLine){let e=i.linewidth;void 0===e&&(e=1),W.setLineWidth(e*k()),r.isLineSegments?c.setMode(1):r.isLineLoop?c.setMode(2):c.setMode(3)}else r.isPoints?c.setMode(0):r.isSprite&&c.setMode(4);if(r.isInstancedMesh)c.renderInstances(J,m,r.count);else if(n.isInstancedBufferGeometry){const e=Math.min(n.instanceCount,n._maxInstanceCount);c.renderInstances(J,m,e)}else c.render(J,m)}},this.compile=function(e,t){c=ne.get(e),c.init(),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(c.pushLight(e),e.castShadow&&c.pushShadow(e))})),c.setupLights(),e.traverse((function(t){const n=t.material;if(n)if(Array.isArray(n))for(let i=0;i<n.length;i++){be(n[i],e,t)}else be(n,e,t)}))};let fe=null;function me(){ve.stop()}function ge(){ve.start()}const ve=new Xt;function xe(e,t,n,i){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)c.pushLight(e),e.castShadow&&c.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||D.intersectsSprite(e)){i&&z.setFromMatrixPosition(e.matrixWorld).applyMatrix4(B);const t=Z.update(e),r=e.material;r.visible&&l.push(e,t,r,n,z.z,null)}}else if(e.isImmediateRenderObject)i&&z.setFromMatrixPosition(e.matrixWorld).applyMatrix4(B),l.push(e,null,e.material,n,z.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==V.render.frame&&(e.skeleton.update(),e.skeleton.frame=V.render.frame),!e.frustumCulled||D.intersectsObject(e))){i&&z.setFromMatrixPosition(e.matrixWorld).applyMatrix4(B);const t=Z.update(e),r=e.material;if(Array.isArray(r)){const i=t.groups;for(let a=0,o=i.length;a<o;a++){const o=i[a],s=r[o.materialIndex];s&&s.visible&&l.push(e,t,s,n,z.z,o)}}else r.visible&&l.push(e,t,r,n,z.z,null)}const r=e.children;for(let e=0,a=r.length;e<a;e++)xe(r[e],t,n,i)}function ye(e,t,n){const i=!0===t.isScene?t.overrideMaterial:null;for(let r=0,a=e.length;r<a;r++){const a=e[r],o=a.object,s=a.geometry,P=null===i?a.material:i,G=a.group;if(n.isArrayCamera){const e=n.cameras;for(let n=0,i=e.length;n<i;n++){const i=e[n];o.layers.test(i.layers)&&(W.viewport(x.copy(i.viewport)),c.setupLightsView(i),_e(o,t,i,s,P,G))}}else _e(o,t,n,s,P,G)}}function _e(e,t,n,i,r,a){if(e.onBeforeRender(d,t,n,i,r,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const i=Me(n,t,r,e);W.setMaterial(r),le.reset(),function(e,t){e.render((function(e){d.renderBufferImmediate(e,t)}))}(e,i)}else d.renderBufferDirect(n,t,i,r,e,a);e.onAfterRender(d,t,n,i,r,a)}function be(e,t,n){!0!==t.isScene&&(t=I);const i=Q.get(e),r=c.state.lights,a=c.state.shadowsArray,o=r.state.version,s=$.getParameters(e,r.state,a,t,n),P=$.getProgramCacheKey(s);let G=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=q.get(e.envMap||i.environment),void 0===G&&(e.addEventListener("dispose",Je),G=new Map,i.programs=G);let K=G.get(P);if(void 0!==K){if(i.currentProgram===K&&i.lightsStateVersion===o)return we(e,s),K}else s.uniforms=$.getUniforms(e),e.onBuild(s,d),e.onBeforeCompile(s,d),K=$.acquireProgram(s,P),G.set(P,K),i.uniforms=s.uniforms;const l=i.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(l.clippingPlanes=ie.uniform),we(e,s),i.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),i.lightsStateVersion=o,i.needsLights&&(l.ambientLightColor.value=r.state.ambient,l.lightProbe.value=r.state.probe,l.directionalLights.value=r.state.directional,l.directionalLightShadows.value=r.state.directionalShadow,l.spotLights.value=r.state.spot,l.spotLightShadows.value=r.state.spotShadow,l.rectAreaLights.value=r.state.rectArea,l.ltc_1.value=r.state.rectAreaLTC1,l.ltc_2.value=r.state.rectAreaLTC2,l.pointLights.value=r.state.point,l.pointLightShadows.value=r.state.pointShadow,l.hemisphereLights.value=r.state.hemi,l.directionalShadowMap.value=r.state.directionalShadowMap,l.directionalShadowMatrix.value=r.state.directionalShadowMatrix,l.spotShadowMap.value=r.state.spotShadowMap,l.spotShadowMatrix.value=r.state.spotShadowMatrix,l.pointShadowMap.value=r.state.pointShadowMap,l.pointShadowMatrix.value=r.state.pointShadowMatrix);const h=K.getUniforms(),u=mi.seqWithValue(h.seq,l);return i.currentProgram=K,i.uniformsList=u,K}function we(e,t){const n=Q.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas}function Me(e,t,n,i){!0!==t.isScene&&(t=I),j.resetTextureUnits();const r=t.fog,a=n.isMeshStandardMaterial?t.environment:null,o=null===m?d.outputEncoding:m.texture.encoding,s=q.get(n.envMap||a),P=!0===n.vertexColors&&i.geometry&&i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,G=Q.get(n),K=c.state.lights;if(!0===F&&(!0===H||e!==v)){const t=e===v&&n.id===g;ie.setState(n,e,t)}let l=!1;n.version===G.__version?G.needsLights&&G.lightsStateVersion!==K.state.version||G.outputEncoding!==o||i.isInstancedMesh&&!1===G.instancing?l=!0:i.isInstancedMesh||!0!==G.instancing?G.envMap!==s||n.fog&&G.fog!==r?l=!0:void 0===G.numClippingPlanes||G.numClippingPlanes===ie.numPlanes&&G.numIntersection===ie.numIntersection?G.vertexAlphas!==P&&(l=!0):l=!0:l=!0:(l=!0,G.__version=n.version);let h=G.currentProgram;!0===l&&(h=be(n,t,i));let u=!1,N=!1,p=!1;const J=h.getUniforms(),f=G.uniforms;if(W.useProgram(h.program)&&(u=!0,N=!0,p=!0),n.id!==g&&(g=n.id,N=!0),u||v!==e){if(J.setValue(ce,"projectionMatrix",e.projectionMatrix),U.logarithmicDepthBuffer&&J.setValue(ce,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),v!==e&&(v=e,N=!0,p=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const t=J.map.cameraPosition;void 0!==t&&t.setValue(ce,z.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&J.setValue(ce,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&J.setValue(ce,"viewMatrix",e.matrixWorldInverse)}if(n.skinning){J.setOptional(ce,i,"bindMatrix"),J.setOptional(ce,i,"bindMatrixInverse");const e=i.skeleton;if(e){const t=e.bones;if(U.floatVertexTextures){if(null===e.boneTexture){let n=Math.sqrt(4*t.length);x=n,n=Math.pow(2,Math.ceil(Math.log(x)/Math.LN2)),n=Math.max(n,4);const i=new Float32Array(n*n*4);i.set(e.boneMatrices);const r=new Vt(i,n,n,1023,1015);e.boneMatrices=i,e.boneTexture=r,e.boneTextureSize=n}J.setValue(ce,"boneTexture",e.boneTexture,j),J.setValue(ce,"boneTextureSize",e.boneTextureSize)}else J.setOptional(ce,e,"boneMatrices")}}var x;return(N||G.receiveShadow!==i.receiveShadow)&&(G.receiveShadow=i.receiveShadow,J.setValue(ce,"receiveShadow",i.receiveShadow)),N&&(J.setValue(ce,"toneMappingExposure",d.toneMappingExposure),G.needsLights&&function(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}(f,p),r&&n.fog&&ee.refreshFogUniforms(f,r),ee.refreshMaterialUniforms(f,n,T,S),mi.upload(ce,G.uniformsList,f,j)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(mi.upload(ce,G.uniformsList,f,j),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&J.setValue(ce,"center",i.center),J.setValue(ce,"modelViewMatrix",i.modelViewMatrix),J.setValue(ce,"normalMatrix",i.normalMatrix),J.setValue(ce,"modelMatrix",i.matrixWorld),h}ve.setAnimationLoop((function(e){fe&&fe(e)})),"undefined"!=typeof window&&ve.setContext(window),this.setAnimationLoop=function(e){fe=e,de.setAnimationLoop(e),null===e?ve.stop():ve.start()},de.addEventListener("sessionstart",me),de.addEventListener("sessionend",ge),this.render=function(e,t){let n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===N)return;!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===de.enabled&&!0===de.isPresenting&&(t=de.getCamera(t)),!0===e.isScene&&e.onBeforeRender(d,e,t,n||m),c=ne.get(e,u.length),c.init(),u.push(c),B.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),D.setFromProjectionMatrix(B),H=this.localClippingEnabled,F=ie.init(this.clippingPlanes,H,t),l=te.get(e,h.length),l.init(),h.push(l),xe(e,t,0,d.sortObjects),l.finish(),!0===d.sortObjects&&l.sort(E,L),!0===F&&ie.beginShadows();const r=c.state.shadowsArray;re.render(r,e,t),c.setupLights(),c.setupLightsView(t),!0===F&&ie.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),oe.render(l,e,t,i);const a=l.opaque,o=l.transparent;a.length>0&&ye(a,e,t),o.length>0&&ye(o,e,t),null!==m&&(j.updateRenderTargetMipmap(m),j.updateMultisampleRenderTarget(m)),!0===e.isScene&&e.onAfterRender(d,e,t),W.buffers.depth.setTest(!0),W.buffers.depth.setMask(!0),W.buffers.color.setMask(!0),W.setPolygonOffset(!1),le.resetDefaultState(),g=-1,v=null,u.pop(),c=u.length>0?u[u.length-1]:null,h.pop(),l=h.length>0?h[h.length-1]:null},this.getActiveCubeFace=function(){return p},this.getActiveMipmapLevel=function(){return f},this.getRenderTarget=function(){return m},this.setRenderTarget=function(e,t=0,n=0){m=e,p=t,f=n,e&&void 0===Q.get(e).__webglFramebuffer&&j.setupRenderTarget(e);let i=null,r=!1,a=!1;if(e){const n=e.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(a=!0);const o=Q.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(i=o[t],r=!0):i=e.isWebGLMultisampleRenderTarget?Q.get(e).__webglMultisampledFramebuffer:o,x.copy(e.viewport),y.copy(e.scissor),b=e.scissorTest}else x.copy(A).multiplyScalar(T).floor(),y.copy(R).multiplyScalar(T).floor(),b=C;if(W.bindFramebuffer(36160,i),W.viewport(x),W.scissor(y),W.setScissorTest(b),r){const i=Q.get(e.texture);ce.framebufferTexture2D(36160,36064,34069+t,i.__webglTexture,n)}else if(a){const i=Q.get(e.texture),r=t||0;ce.framebufferTextureLayer(36160,36064,i.__webglTexture,n||0,r)}},this.readRenderTargetPixels=function(e,t,n,i,r,a,o){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=Q.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){W.bindFramebuffer(36160,s);try{const o=e.texture,s=o.format,P=o.type;if(1023!==s&&Ke.convert(s)!==ce.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const G=1016===P&&(O.has("EXT_color_buffer_half_float")||U.isWebGL2&&O.has("EXT_color_buffer_float"));if(!(1009===P||Ke.convert(P)===ce.getParameter(35738)||1015===P&&(U.isWebGL2||O.has("OES_texture_float")||O.has("WEBGL_color_buffer_float"))||G))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ce.checkFramebufferStatus(36160)?t>=0&&t<=e.width-i&&n>=0&&n<=e.height-r&&ce.readPixels(t,n,i,r,Ke.convert(s),Ke.convert(P),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const e=null!==m?Q.get(m).__webglFramebuffer:null;W.bindFramebuffer(36160,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){const i=Math.pow(2,-n),r=Math.floor(t.image.width*i),a=Math.floor(t.image.height*i),o=Ke.convert(t.format);j.setTexture2D(t,0),ce.copyTexImage2D(3553,n,o,e.x,e.y,r,a,0),W.unbindTexture()},this.copyTextureToTexture=function(e,t,n,i=0){const r=t.image.width,a=t.image.height,o=Ke.convert(n.format),s=Ke.convert(n.type);j.setTexture2D(n,0),ce.pixelStorei(37440,n.flipY),ce.pixelStorei(37441,n.premultiplyAlpha),ce.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?ce.texSubImage2D(3553,i,e.x,e.y,r,a,o,s,t.image.data):t.isCompressedTexture?ce.compressedTexSubImage2D(3553,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):ce.texSubImage2D(3553,i,e.x,e.y,o,s,t.image),0===i&&n.generateMipmaps&&ce.generateMipmap(3553),W.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,i,r=0){if(d.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:a,height:o,data:s}=n.image,P=Ke.convert(i.format),G=Ke.convert(i.type);let K;if(i.isDataTexture3D)j.setTexture3D(i,0),K=32879;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");j.setTexture2DArray(i,0),K=35866}ce.pixelStorei(37440,i.flipY),ce.pixelStorei(37441,i.premultiplyAlpha),ce.pixelStorei(3317,i.unpackAlignment);const l=ce.getParameter(3314),c=ce.getParameter(32878),h=ce.getParameter(3316),u=ce.getParameter(3315),N=ce.getParameter(32877);ce.pixelStorei(3314,a),ce.pixelStorei(32878,o),ce.pixelStorei(3316,e.min.x),ce.pixelStorei(3315,e.min.y),ce.pixelStorei(32877,e.min.z),ce.texSubImage3D(K,r,t.x,t.y,t.z,e.max.x-e.min.x+1,e.max.y-e.min.y+1,e.max.z-e.min.z+1,P,G,s),ce.pixelStorei(3314,l),ce.pixelStorei(32878,c),ce.pixelStorei(3316,h),ce.pixelStorei(3315,u),ce.pixelStorei(32877,N),0===r&&i.generateMipmaps&&ce.generateMipmap(K),W.unbindTexture()},this.initTexture=function(e){j.setTexture2D(e,0),W.unbindTexture()},this.resetState=function(){p=0,f=0,m=null,W.reset(),le.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class cr extends Te{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}cr.prototype.isScene=!0;class hr extends Qe{constructor(e){super(),this.type="LineBasicMaterial",this.color=new et(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this}}hr.prototype.isLineBasicMaterial=!0;const ur=new M,dr=new M,Nr=new ae,pr=new re,Jr=new X;class fr extends Te{constructor(e=new Nt,t=new hr){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,i=t.count;e<i;e++)ur.fromBufferAttribute(t,e-1),dr.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=ur.distanceTo(dr);e.setAttribute("lineDistance",new st(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Jr.copy(n.boundingSphere),Jr.applyMatrix4(i),Jr.radius+=r,!1===e.ray.intersectsSphere(Jr))return;Nr.copy(i).invert(),pr.copy(e.ray).applyMatrix4(Nr);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,P=new M,G=new M,K=new M,l=new M,c=this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,r=n.attributes.position;if(null!==i){for(let n=Math.max(0,a.start),o=Math.min(i.count,a.start+a.count)-1;n<o;n+=c){const a=i.getX(n),o=i.getX(n+1);P.fromBufferAttribute(r,a),G.fromBufferAttribute(r,o);if(pr.distanceSqToSegment(P,G,l,K)>s)continue;l.applyMatrix4(this.matrixWorld);const c=e.ray.origin.distanceTo(l);c<e.near||c>e.far||t.push({distance:c,point:K.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else{for(let n=Math.max(0,a.start),i=Math.min(r.count,a.start+a.count)-1;n<i;n+=c){P.fromBufferAttribute(r,n),G.fromBufferAttribute(r,n+1);if(pr.distanceSqToSegment(P,G,l,K)>s)continue;l.applyMatrix4(this.matrixWorld);const i=e.ray.origin.distanceTo(l);i<e.near||i>e.far||t.push({distance:i,point:K.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}fr.prototype.isLine=!0;const mr=new M,gr=new M;class vr extends fr{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,i=t.count;e<i;e+=2)mr.fromBufferAttribute(t,e),gr.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+mr.distanceTo(gr);e.setAttribute("lineDistance",new st(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}vr.prototype.isLineSegments=!0;class xr extends Qe{constructor(e){super(),this.type="PointsMaterial",this.color=new et(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this}}xr.prototype.isPointsMaterial=!0;const yr=new ae,_r=new re,br=new X,wr=new M;class Mr extends Te{constructor(e=new Nt,t=new xr){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),br.copy(n.boundingSphere),br.applyMatrix4(i),br.radius+=r,!1===e.ray.intersectsSphere(br))return;yr.copy(i).invert(),_r.copy(e.ray).applyMatrix4(yr);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o;if(n.isBufferGeometry){const r=n.index,o=n.attributes.position;if(null!==r){for(let n=Math.max(0,a.start),P=Math.min(r.count,a.start+a.count);n<P;n++){const a=r.getX(n);wr.fromBufferAttribute(o,a),Sr(wr,a,s,i,e,t,this)}}else{for(let n=Math.max(0,a.start),r=Math.min(o.count,a.start+a.count);n<r;n++)wr.fromBufferAttribute(o,n),Sr(wr,n,s,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function Sr(e,t,n,i,r,a,o){const s=_r.distanceSqToPoint(e);if(s<n){const n=new M;_r.closestPointToPoint(e,n),n.applyMatrix4(i);const P=r.ray.origin.distanceTo(n);if(P<r.near||P>r.far)return;a.push({distance:P,distanceToRay:Math.sqrt(s),point:n,index:t,face:null,object:o})}}Mr.prototype.isPoints=!0;class Tr extends zt{constructor(e){super(e),this.type="RawShaderMaterial"}}Tr.prototype.isRawShaderMaterial=!0;class Er extends Qe{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new et(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new et(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new J(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this.vertexTangents=e.vertexTangents,this}}Er.prototype.isMeshStandardMaterial=!0;class Lr extends Er{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new J(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=u(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new et).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this}}Lr.prototype.isMeshPhysicalMaterial=!0;class Ar extends Qe{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new et(16777215),this.specular=new et(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new et(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new J(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}Ar.prototype.isMeshPhongMaterial=!0;const Rr={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class Cr{constructor(e,t,n){const i=this;let r=!1,a=0,o=0,s=void 0;const P=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===r&&void 0!==i.onStart&&i.onStart(e,a,o),r=!0},this.itemEnd=function(e){a++,void 0!==i.onProgress&&i.onProgress(e,a,o),a===o&&(r=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(e){void 0!==i.onError&&i.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return P.push(e,t),this},this.removeHandler=function(e){const t=P.indexOf(e);return-1!==t&&P.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=P.length;t<n;t+=2){const n=P[t],i=P[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return i}return null}}}const Dr=new Cr;class Fr{constructor(e){this.manager=void 0!==e?e:Dr,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise((function(i,r){n.load(e,i,t,r)}))}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Hr={};class Br extends Fr{constructor(e){super(e)}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=Rr.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout((function(){t&&t(a),r.manager.itemEnd(e)}),0),a;if(void 0!==Hr[e])return void Hr[e].push({onLoad:t,onProgress:n,onError:i});const o=e.match(/^data:(.*?)(;base64)?,(.*)$/);let s;if(o){const n=o[1],a=!!o[2];let s=o[3];s=decodeURIComponent(s),a&&(s=atob(s));try{let i;const a=(this.responseType||"").toLowerCase();switch(a){case"arraybuffer":case"blob":const e=new Uint8Array(s.length);for(let t=0;t<s.length;t++)e[t]=s.charCodeAt(t);i="blob"===a?new Blob([e.buffer],{type:n}):e.buffer;break;case"document":const t=new DOMParser;i=t.parseFromString(s,n);break;case"json":i=JSON.parse(s);break;default:i=s}setTimeout((function(){t&&t(i),r.manager.itemEnd(e)}),0)}catch(t){setTimeout((function(){i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)}),0)}}else{Hr[e]=[],Hr[e].push({onLoad:t,onProgress:n,onError:i}),s=new XMLHttpRequest,s.open("GET",e,!0),s.addEventListener("load",(function(t){const n=this.response,i=Hr[e];if(delete Hr[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Rr.add(e,n);for(let e=0,t=i.length;e<t;e++){const t=i[e];t.onLoad&&t.onLoad(n)}r.manager.itemEnd(e)}else{for(let e=0,n=i.length;e<n;e++){const n=i[e];n.onError&&n.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}}),!1),s.addEventListener("progress",(function(t){const n=Hr[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onProgress&&i.onProgress(t)}}),!1),s.addEventListener("error",(function(t){const n=Hr[e];delete Hr[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onError&&i.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}),!1),s.addEventListener("abort",(function(t){const n=Hr[e];delete Hr[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onError&&i.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}),!1),void 0!==this.responseType&&(s.responseType=this.responseType),void 0!==this.withCredentials&&(s.withCredentials=this.withCredentials),s.overrideMimeType&&s.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const e in this.requestHeader)s.setRequestHeader(e,this.requestHeader[e]);s.send(null)}return r.manager.itemStart(e),s}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class zr extends Fr{constructor(e){super(e)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=Rr.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout((function(){t&&t(a),r.manager.itemEnd(e)}),0),a;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){o.removeEventListener("load",s,!1),o.removeEventListener("error",P,!1),Rr.add(e,this),t&&t(this),r.manager.itemEnd(e)}function P(t){o.removeEventListener("load",s,!1),o.removeEventListener("error",P,!1),i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)}return o.addEventListener("load",s,!1),o.addEventListener("error",P,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}}class Ir extends Fr{constructor(e){super(e)}load(e,t,n,i){const r=new Ut,a=new zr(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function s(n){a.load(e[n],(function(e){r.images[n]=e,o++,6===o&&(r.needsUpdate=!0,t&&t(r))}),void 0,i)}for(let t=0;t<e.length;++t)s(t);return r}}class kr extends Fr{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Vt,o=new Br(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,(function(e){const n=r.parse(e);n&&(void 0!==n.image?a.image=n.image:void 0!==n.data&&(a.image.width=n.width,a.image.height=n.height,a.image.data=n.data),a.wrapS=void 0!==n.wrapS?n.wrapS:1001,a.wrapT=void 0!==n.wrapT?n.wrapT:1001,a.magFilter=void 0!==n.magFilter?n.magFilter:1006,a.minFilter=void 0!==n.minFilter?n.minFilter:1006,a.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(a.encoding=n.encoding),void 0!==n.flipY&&(a.flipY=n.flipY),void 0!==n.format&&(a.format=n.format),void 0!==n.type&&(a.type=n.type),void 0!==n.mipmaps&&(a.mipmaps=n.mipmaps,a.minFilter=1008),1===n.mipmapCount&&(a.minFilter=1006),void 0!==n.generateMipmaps&&(a.generateMipmaps=n.generateMipmaps),a.needsUpdate=!0,t&&t(a,n))}),n,i),a}}class Or extends Fr{constructor(e){super(e)}load(e,t,n,i){const r=new x,a=new zr(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,(function(n){r.image=n;const i=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);r.format=i?1022:1023,r.needsUpdate=!0,void 0!==t&&t(r)}),n,i),r}}class Ur extends Te{constructor(e,t=1){super(),this.type="Light",this.color=new et(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}Ur.prototype.isLight=!0;class Wr extends It{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,o=i+t,s=i-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,a=r+e*this.view.width,o-=t*this.view.offsetY,s=o-t*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,s,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}Wr.prototype.isOrthographicCamera=!0;class Vr extends Ur{constructor(e,t){super(e,t),this.type="AmbientLight"}}Vr.prototype.isAmbientLight=!0;const Qr="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]";/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),/(WCOD+)?/.source.replace("WCOD",Qr),/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]");class jr{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(u(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}const qr=new Float32Array(1),Xr=new Int32Array(qr.buffer);class Yr{static toHalfFloat(e){qr[0]=e;const t=Xr[0];let n=t>>16&32768,i=t>>12&2047;const r=t>>23&255;return r<103?n:r>142?(n|=31744,n|=(255==r?0:1)&&8388607&t,n):r<113?(i|=2048,n|=(i>>114-r)+(i>>113-r&1),n):(n|=r-112<<10|i>>1,n+=1&i,n)}}const Zr=Math.pow(2,8),$r=[.125,.215,.35,.446,.526,.582],ea=5+$r.length,ta={3e3:0,3001:1,3002:2,3004:3,3005:4,3006:5,3007:6},na=new tt({side:1,depthWrite:!1,depthTest:!1}),ia=new Rt(new Dt,na),ra=new Wr,{_lodPlanes:aa,_sizeLods:oa,_sigmas:sa}=da(),Pa=new et;let Ga=null;const Ka=(1+Math.sqrt(5))/2,la=1/Ka,ca=[new M(1,1,1),new M(-1,1,1),new M(1,1,-1),new M(-1,1,-1),new M(0,Ka,la),new M(0,Ka,-la),new M(la,0,Ka),new M(-la,0,Ka),new M(Ka,la,0),new M(-Ka,la,0)];function ha(e){const t=Math.max(e.r,e.g,e.b),n=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);e.multiplyScalar(Math.pow(2,-n));return(n+128)/255}function ua(e){return void 0!==e&&1009===e.type&&(3e3===e.encoding||3001===e.encoding||3007===e.encoding)}function da(){const e=[],t=[],n=[];let i=8;for(let r=0;r<ea;r++){const a=Math.pow(2,i);t.push(a);let o=1/a;r>4?o=$r[r-8+4-1]:0==r&&(o=0),n.push(o);const s=1/(a-1),P=-s/2,G=1+s/2,K=[P,P,G,P,G,G,P,P,G,G,P,G],l=6,c=6,h=3,u=2,d=1,N=new Float32Array(h*c*l),p=new Float32Array(u*c*l),J=new Float32Array(d*c*l);for(let e=0;e<l;e++){const t=e%3*2/3-1,n=e>2?0:-1,i=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];N.set(i,h*c*e),p.set(K,u*c*e);const r=[e,e,e,e,e,e];J.set(r,d*c*e)}const f=new Nt;f.setAttribute("position",new rt(N,h)),f.setAttribute("uv",new rt(p,u)),f.setAttribute("faceIndex",new rt(J,d)),e.push(f),i>4&&i--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}function Na(e){const t=new b(3*Zr,3*Zr,e);return t.texture.mapping=306,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function pa(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function Ja(){const e=new J(1,1);return new Tr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:ta[3e3]},outputEncoding:{value:ta[3e3]}},vertexShader:ma(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${ga()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function fa(){return new Tr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ta[3e3]},outputEncoding:{value:ta[3e3]}},vertexShader:ma(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${ga()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function ma(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function ga(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}Fr.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),class{static decodeText(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(e){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}}.extractUrlBase(e)},Fr.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},E.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},E.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},E.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},E.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},E.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},X.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},qt.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},f.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},f.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},f.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},f.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},f.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},f.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},ae.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},ae.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},ae.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new M).setFromMatrixColumn(this,3)},ae.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},ae.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},ae.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ae.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ae.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},ae.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},ae.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ae.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},ae.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},ae.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},ae.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},ae.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},ae.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ae.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},ae.prototype.makeFrustum=function(e,t,n,i,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,i,n,r,a)},ae.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Re.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},w.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},w.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},re.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},re.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},re.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},We.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},We.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},We.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},We.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},We.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},We.barycoordFromPoint=function(e,t,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),We.getBarycoord(e,t,n,i,r)},We.normal=function(e,t,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),We.getNormal(e,t,n,i)},J.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},J.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},J.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},M.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},M.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},M.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},M.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},M.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},M.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},M.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},M.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},M.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},_.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},_.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Te.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},Te.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Te.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},Te.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Te.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(Te.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Rt.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Rt.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),kt.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Ur.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(rt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),35048===this.usage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(35048)}}}),rt.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?35048:35044),this},rt.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},rt.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Nt.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},Nt.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new rt(arguments[1],arguments[2])))},Nt.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},Nt.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},Nt.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},Nt.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},Nt.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(Nt.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),cr.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Object.defineProperties(Qe.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new et}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(zt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),lr.prototype.clearTarget=function(e,t,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,i)},lr.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},lr.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},lr.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},lr.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},lr.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},lr.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},lr.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},lr.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},lr.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},lr.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},lr.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},lr.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},lr.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},lr.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},lr.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},lr.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},lr.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},lr.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},lr.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},lr.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},lr.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},lr.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},lr.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},lr.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(lr.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?3001:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(tr.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(b.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Ot.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},Ot.prototype.clear=function(e,t,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,i)},g.crossOrigin=void 0,g.loadTexture=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Or;r.setCrossOrigin(this.crossOrigin);const a=r.load(e,n,void 0,i);return t&&(a.mapping=t),a},g.loadTextureCube=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Ir;r.setCrossOrigin(this.crossOrigin);const a=r.load(e,n,void 0,i);return t&&(a.mapping=t),a},g.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},g.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"128"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="128");const va={type:"change"},xa={type:"start"},ya={type:"end"};const _a=/^[og]\s*(.+)?/,ba=/^mtllib /,wa=/^usemtl /,Ma=/^usemap /,Sa=new M,Ta=new M,Ea=new M,La=new M,Aa=new M;function Ra(){const e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);const n=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(e,t){const n=this._finalize(!1);n&&(n.inherited||n.groupCount<=0)&&this.materials.splice(n.index,1);const i={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==n?n.smooth:this.smooth,groupStart:void 0!==n?n.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){const t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(i),i},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){const t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(let e=this.materials.length-1;e>=0;e--)this.materials[e].groupCount<=0&&this.materials.splice(e,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},n&&n.name&&"function"==typeof n.clone){const e=n.clone(0);e.inherited=!0,this.object.materials.push(e)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){const n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseNormalIndex:function(e,t){const n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseUVIndex:function(e,t){const n=parseInt(e,10);return 2*(n>=0?n-1:n+t/2)},addVertex:function(e,t,n){const i=this.vertices,r=this.object.geometry.vertices;r.push(i[e+0],i[e+1],i[e+2]),r.push(i[t+0],i[t+1],i[t+2]),r.push(i[n+0],i[n+1],i[n+2])},addVertexPoint:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,n){const i=this.normals,r=this.object.geometry.normals;r.push(i[e+0],i[e+1],i[e+2]),r.push(i[t+0],i[t+1],i[t+2]),r.push(i[n+0],i[n+1],i[n+2])},addFaceNormal:function(e,t,n){const i=this.vertices,r=this.object.geometry.normals;Sa.fromArray(i,e),Ta.fromArray(i,t),Ea.fromArray(i,n),Aa.subVectors(Ea,Ta),La.subVectors(Sa,Ta),Aa.cross(La),Aa.normalize(),r.push(Aa.x,Aa.y,Aa.z),r.push(Aa.x,Aa.y,Aa.z),r.push(Aa.x,Aa.y,Aa.z)},addColor:function(e,t,n){const i=this.colors,r=this.object.geometry.colors;void 0!==i[e]&&r.push(i[e+0],i[e+1],i[e+2]),void 0!==i[t]&&r.push(i[t+0],i[t+1],i[t+2]),void 0!==i[n]&&r.push(i[n+0],i[n+1],i[n+2])},addUV:function(e,t,n){const i=this.uvs,r=this.object.geometry.uvs;r.push(i[e+0],i[e+1]),r.push(i[t+0],i[t+1]),r.push(i[n+0],i[n+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,n,i,r,a,o,s,P){const G=this.vertices.length;let K=this.parseVertexIndex(e,G),l=this.parseVertexIndex(t,G),c=this.parseVertexIndex(n,G);if(this.addVertex(K,l,c),this.addColor(K,l,c),void 0!==o&&""!==o){const e=this.normals.length;K=this.parseNormalIndex(o,e),l=this.parseNormalIndex(s,e),c=this.parseNormalIndex(P,e),this.addNormal(K,l,c)}else this.addFaceNormal(K,l,c);if(void 0!==i&&""!==i){const e=this.uvs.length;K=this.parseUVIndex(i,e),l=this.parseUVIndex(r,e),c=this.parseUVIndex(a,e),this.addUV(K,l,c),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const t=this.vertices.length;for(let n=0,i=e.length;n<i;n++){const i=this.parseVertexIndex(e[n],t);this.addVertexPoint(i),this.addColor(i)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";const n=this.vertices.length,i=this.uvs.length;for(let t=0,i=e.length;t<i;t++)this.addVertexLine(this.parseVertexIndex(e[t],n));for(let e=0,n=t.length;e<n;e++)this.addUVLine(this.parseUVIndex(t[e],i))}};return e.startObject("",!1),e}class Ca extends Fr{constructor(e){super(e),this.materials=null}load(e,t,n,i){const r=this,a=new Br(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(n){try{t(r.parse(n))}catch(t){i?i(t):console.error(t),r.manager.itemError(e)}}),n,i)}setMaterials(e){return this.materials=e,this}parse(e){const t=new Ra;-1!==e.indexOf("\r\n")&&(e=e.replace(/\r\n/g,"\n")),-1!==e.indexOf("\\\n")&&(e=e.replace(/\\\n/g,""));const n=e.split("\n");let i="",r="",a=0,o=[];const s="function"==typeof"".trimLeft;for(let e=0,P=n.length;e<P;e++)if(i=n[e],i=s?i.trimLeft():i.trim(),a=i.length,0!==a&&(r=i.charAt(0),"#"!==r))if("v"===r){const e=i.split(/\s+/);switch(e[0]){case"v":t.vertices.push(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3])),e.length>=7?t.colors.push(parseFloat(e[4]),parseFloat(e[5]),parseFloat(e[6])):t.colors.push(void 0,void 0,void 0);break;case"vn":t.normals.push(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3]));break;case"vt":t.uvs.push(parseFloat(e[1]),parseFloat(e[2]))}}else if("f"===r){const e=i.substr(1).trim().split(/\s+/),n=[];for(let t=0,i=e.length;t<i;t++){const i=e[t];if(i.length>0){const e=i.split("/");n.push(e)}}const r=n[0];for(let e=1,i=n.length-1;e<i;e++){const i=n[e],a=n[e+1];t.addFace(r[0],i[0],a[0],r[1],i[1],a[1],r[2],i[2],a[2])}}else if("l"===r){const e=i.substring(1).trim().split(" ");let n=[];const r=[];if(-1===i.indexOf("/"))n=e;else for(let t=0,i=e.length;t<i;t++){const i=e[t].split("/");""!==i[0]&&n.push(i[0]),""!==i[1]&&r.push(i[1])}t.addLineGeometry(n,r)}else if("p"===r){const e=i.substr(1).trim().split(" ");t.addPointGeometry(e)}else if(null!==(o=_a.exec(i))){const e=(" "+o[0].substr(1).trim()).substr(1);t.startObject(e)}else if(wa.test(i))t.object.startMaterial(i.substring(7).trim(),t.materialLibraries);else if(ba.test(i))t.materialLibraries.push(i.substring(7).trim());else if(Ma.test(i))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===r){if(o=i.split(" "),o.length>1){const e=o[1].trim().toLowerCase();t.object.smooth="0"!==e&&"off"!==e}else t.object.smooth=!0;const e=t.object.currentMaterial();e&&(e.smooth=t.object.smooth)}else{if("\0"===i)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+i+'"')}t.finalize();const P=new or;P.materialLibraries=[].concat(t.materialLibraries);if(!0===!(1===t.objects.length&&0===t.objects[0].geometry.vertices.length))for(let e=0,n=t.objects.length;e<n;e++){const n=t.objects[e],i=n.geometry,r=n.materials,a="Line"===i.type,o="Points"===i.type;let s=!1;if(0===i.vertices.length)continue;const G=new Nt;G.setAttribute("position",new st(i.vertices,3)),i.normals.length>0&&G.setAttribute("normal",new st(i.normals,3)),i.colors.length>0&&(s=!0,G.setAttribute("color",new st(i.colors,3))),!0===i.hasUVIndices&&G.setAttribute("uv",new st(i.uvs,2));const K=[];for(let e=0,n=r.length;e<n;e++){const n=r[e],i=n.name+"_"+n.smooth+"_"+s;let P=t.materials[i];if(null!==this.materials)if(P=this.materials.create(n.name),!a||!P||P instanceof hr){if(o&&P&&!(P instanceof xr)){const e=new xr({size:10,sizeAttenuation:!1});Qe.prototype.copy.call(e,P),e.color.copy(P.color),e.map=P.map,P=e}}else{const e=new hr;Qe.prototype.copy.call(e,P),e.color.copy(P.color),P=e}void 0===P&&(P=a?new hr:o?new xr({size:1,sizeAttenuation:!1}):new Ar,P.name=n.name,P.flatShading=!n.smooth,P.vertexColors=s,t.materials[i]=P),K.push(P)}let l;if(K.length>1){for(let e=0,t=r.length;e<t;e++){const t=r[e];G.addGroup(t.groupStart,t.groupCount,e)}l=a?new vr(G,K):o?new Mr(G,K):new Rt(G,K)}else l=a?new vr(G,K[0]):o?new Mr(G,K[0]):new Rt(G,K[0]);l.name=n.name,P.add(l)}else if(t.vertices.length>0){const e=new xr({size:1,sizeAttenuation:!1}),n=new Nt;n.setAttribute("position",new st(t.vertices,3)),t.colors.length>0&&void 0!==t.colors[0]&&(n.setAttribute("color",new st(t.colors,3)),e.vertexColors=!0);const i=new Mr(n,e);P.add(i)}return P}}class Da{constructor(e){this.materials=e?e.trim().split("\n").map(e=>e.split(",")):void 0,this.materials&&this.materials.forEach(e=>e[e.length-1]=e[e.length-1].split("|"))}resolveMaterialLink(e,t=!0){if(!this.materials)return null;const n=t?"png":"jpg";let i=this.materials.find(t=>t[0]===e);if(!i)return null;let r=i[1],a=i[2];if(a=a.filter(e=>e.toLowerCase().endsWith(n)),a.length<1)return null;let o=a[0];return"https://acg-download.struffelproductions.com/file/ambientCG-Web/download/"+e+"_"+r+"/"+e+"_"+o+".zip"}findMaterials(e){return this.materials?(e=e&&e.toLowerCase(),this.materials.filter(t=>!e||t[0].toLowerCase().includes(e)).map(e=>({name:e[0],id:e[1],res:e[2]})).sort((t,n)=>!e||t.name.toLowerCase().indexOf(e)-n.name.toLowerCase().indexOf(e))):[]}static async getMaterialMaps(e){let t=!e.toLowerCase().includes("jpg"),n=t?"png":"jpg",i=e;if("string"!=typeof i)return null;let r=await Da.getBlobsFromLink(i,n),a={};for(const[e,t]of Object.entries(r)){let i=URL.createObjectURL(t),r=e.replace("."+n,""),o=Da.getMapWithName(r);o&&(a[o]=i)}let o=new Or;for(const e of Object.keys(a)){let t=a[e];a[e]=o.load(t,e=>{URL.revokeObjectURL(t)})}return[a,t]}static async getBlobsFromLink(e,t){const n=await(await fetch(e)).blob();return Da.unzipBlobFFlate(n,"image/"+t)}static async unzipBlobFFlate(e,t){const n=await Promise.resolve().then((function(){return GP}));let i=await e.arrayBuffer().then(e=>n.unzipSync(new Uint8Array(e))),r={};for(let[e,n]of Object.entries(i)){let i=new Blob([n],{type:t});e&&(r[e]=i)}return r}static getMapWithName(e){return e&&"string"==typeof e?e.endsWith("_Normal")||e.endsWith("_NormalGL")?"normalMap":e.endsWith("_Displacement")?"displacementMap":e.endsWith("_AmbientOcclusion")?"aoMap":e.endsWith("_Roughness")?"roughnessMap":e.endsWith("_Metalness")?"metalnessMap":e.endsWith("_Color")?"map":(console.warn("unknown",e),null):null}static getPreviewLink(e,t="128-JPG-FFFFFF"){return"https://acg-media.struffelproductions.com/file/ambientCG-Web/media/thumbnail/"+t+"/"+e+".jpg"}}var Fa=document.getElementById("helperText"),Ha=document.getElementById("canvasContainer");document.body.appendChild(Ha);var Ba=new lr;Ba.setPixelRatio(window.devicePixelRatio),Ba.setSize(window.innerWidth,window.innerHeight),Ha.appendChild(Ba.domElement);var za=new cr,Ia=window.innerWidth/window.innerHeight,ka=new kt(45,Ia,500,3e3);ka.position.z=1500,za.add(ka);var Oa=new class extends G{constructor(e,t){super(),void 0===t&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.enabled=!0,this.target=new M,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:n,MIDDLE:i,RIGHT:r},this.touches={ONE:a,TWO:s},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return h.phi},this.getAzimuthalAngle=function(){return h.theta},this.listenToKeyEvents=function(e){e.addEventListener("keydown",X),this._domElementKeyEvents=e},this.saveState=function(){G.target0.copy(G.target),G.position0.copy(G.object.position),G.zoom0=G.object.zoom},this.reset=function(){G.target.copy(G.target0),G.object.position.copy(G.position0),G.object.zoom=G.zoom0,G.object.updateProjectionMatrix(),G.dispatchEvent(va),G.update(),l=K.NONE},this.update=function(){const t=new M,n=(new w).setFromUnitVectors(e.up,new M(0,1,0)),i=n.clone().invert(),r=new M,a=new w,o=2*Math.PI;return function(){const e=G.object.position;t.copy(e).sub(G.target),t.applyQuaternion(n),h.setFromVector3(t),G.autoRotate&&l===K.NONE&&E(2*Math.PI/60/60*G.autoRotateSpeed),G.enableDamping?(h.theta+=u.theta*G.dampingFactor,h.phi+=u.phi*G.dampingFactor):(h.theta+=u.theta,h.phi+=u.phi);let s=G.minAzimuthAngle,P=G.maxAzimuthAngle;return isFinite(s)&&isFinite(P)&&(s<-Math.PI?s+=o:s>Math.PI&&(s-=o),P<-Math.PI?P+=o:P>Math.PI&&(P-=o),h.theta=s<=P?Math.max(s,Math.min(P,h.theta)):h.theta>(s+P)/2?Math.max(s,h.theta):Math.min(P,h.theta)),h.phi=Math.max(G.minPolarAngle,Math.min(G.maxPolarAngle,h.phi)),h.makeSafe(),h.radius*=d,h.radius=Math.max(G.minDistance,Math.min(G.maxDistance,h.radius)),!0===G.enableDamping?G.target.addScaledVector(N,G.dampingFactor):G.target.add(N),t.setFromSpherical(h),t.applyQuaternion(i),e.copy(G.target).add(t),G.object.lookAt(G.target),!0===G.enableDamping?(u.theta*=1-G.dampingFactor,u.phi*=1-G.dampingFactor,N.multiplyScalar(1-G.dampingFactor)):(u.set(0,0,0),N.set(0,0,0)),d=1,!!(p||r.distanceToSquared(G.object.position)>c||8*(1-a.dot(G.object.quaternion))>c)&&(G.dispatchEvent(va),r.copy(G.object.position),a.copy(G.object.quaternion),p=!1,!0)}}(),this.dispose=function(){G.domElement.removeEventListener("contextmenu",ee),G.domElement.removeEventListener("pointerdown",V),G.domElement.removeEventListener("wheel",q),G.domElement.removeEventListener("touchstart",Y),G.domElement.removeEventListener("touchend",$),G.domElement.removeEventListener("touchmove",Z),G.domElement.ownerDocument.removeEventListener("pointermove",Q),G.domElement.ownerDocument.removeEventListener("pointerup",j),null!==G._domElementKeyEvents&&G._domElementKeyEvents.removeEventListener("keydown",X)};const G=this,K={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let l=K.NONE;const c=1e-6,h=new jr,u=new jr;let d=1;const N=new M;let p=!1;const f=new J,m=new J,g=new J,v=new J,x=new J,y=new J,_=new J,b=new J,S=new J;function T(){return Math.pow(.95,G.zoomSpeed)}function E(e){u.theta-=e}function L(e){u.phi-=e}const A=function(){const e=new M;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),N.add(e)}}(),R=function(){const e=new M;return function(t,n){!0===G.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(G.object.up,e)),e.multiplyScalar(t),N.add(e)}}(),C=function(){const e=new M;return function(t,n){const i=G.domElement;if(G.object.isPerspectiveCamera){const r=G.object.position;e.copy(r).sub(G.target);let a=e.length();a*=Math.tan(G.object.fov/2*Math.PI/180),A(2*t*a/i.clientHeight,G.object.matrix),R(2*n*a/i.clientHeight,G.object.matrix)}else G.object.isOrthographicCamera?(A(t*(G.object.right-G.object.left)/G.object.zoom/i.clientWidth,G.object.matrix),R(n*(G.object.top-G.object.bottom)/G.object.zoom/i.clientHeight,G.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),G.enablePan=!1)}}();function D(e){G.object.isPerspectiveCamera?d/=e:G.object.isOrthographicCamera?(G.object.zoom=Math.max(G.minZoom,Math.min(G.maxZoom,G.object.zoom*e)),G.object.updateProjectionMatrix(),p=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),G.enableZoom=!1)}function F(e){G.object.isPerspectiveCamera?d*=e:G.object.isOrthographicCamera?(G.object.zoom=Math.max(G.minZoom,Math.min(G.maxZoom,G.object.zoom/e)),G.object.updateProjectionMatrix(),p=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),G.enableZoom=!1)}function H(e){f.set(e.clientX,e.clientY)}function B(e){v.set(e.clientX,e.clientY)}function z(e){if(1==e.touches.length)f.set(e.touches[0].pageX,e.touches[0].pageY);else{const t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);f.set(t,n)}}function I(e){if(1==e.touches.length)v.set(e.touches[0].pageX,e.touches[0].pageY);else{const t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);v.set(t,n)}}function k(e){const t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,i=Math.sqrt(t*t+n*n);_.set(0,i)}function O(e){if(1==e.touches.length)m.set(e.touches[0].pageX,e.touches[0].pageY);else{const t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);m.set(t,n)}g.subVectors(m,f).multiplyScalar(G.rotateSpeed);const t=G.domElement;E(2*Math.PI*g.x/t.clientHeight),L(2*Math.PI*g.y/t.clientHeight),f.copy(m)}function U(e){if(1==e.touches.length)x.set(e.touches[0].pageX,e.touches[0].pageY);else{const t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);x.set(t,n)}y.subVectors(x,v).multiplyScalar(G.panSpeed),C(y.x,y.y),v.copy(x)}function W(e){const t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,i=Math.sqrt(t*t+n*n);b.set(0,i),S.set(0,Math.pow(b.y/_.y,G.zoomSpeed)),D(S.y),_.copy(b)}function V(e){if(!1!==G.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){let t;switch(e.preventDefault(),G.domElement.focus?G.domElement.focus():window.focus(),e.button){case 0:t=G.mouseButtons.LEFT;break;case 1:t=G.mouseButtons.MIDDLE;break;case 2:t=G.mouseButtons.RIGHT;break;default:t=-1}switch(t){case i:if(!1===G.enableZoom)return;!function(e){_.set(e.clientX,e.clientY)}(e),l=K.DOLLY;break;case n:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===G.enablePan)return;B(e),l=K.PAN}else{if(!1===G.enableRotate)return;H(e),l=K.ROTATE}break;case r:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===G.enableRotate)return;H(e),l=K.ROTATE}else{if(!1===G.enablePan)return;B(e),l=K.PAN}break;default:l=K.NONE}l!==K.NONE&&(G.domElement.ownerDocument.addEventListener("pointermove",Q),G.domElement.ownerDocument.addEventListener("pointerup",j),G.dispatchEvent(xa))}(e)}}function Q(e){if(!1!==G.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){if(!1===G.enabled)return;switch(e.preventDefault(),l){case K.ROTATE:if(!1===G.enableRotate)return;!function(e){m.set(e.clientX,e.clientY),g.subVectors(m,f).multiplyScalar(G.rotateSpeed);const t=G.domElement;E(2*Math.PI*g.x/t.clientHeight),L(2*Math.PI*g.y/t.clientHeight),f.copy(m),G.update()}(e);break;case K.DOLLY:if(!1===G.enableZoom)return;!function(e){b.set(e.clientX,e.clientY),S.subVectors(b,_),S.y>0?D(T()):S.y<0&&F(T()),_.copy(b),G.update()}(e);break;case K.PAN:if(!1===G.enablePan)return;!function(e){x.set(e.clientX,e.clientY),y.subVectors(x,v).multiplyScalar(G.panSpeed),C(y.x,y.y),v.copy(x),G.update()}(e)}}(e)}}function j(e){switch(e.pointerType){case"mouse":case"pen":!function(e){if(G.domElement.ownerDocument.removeEventListener("pointermove",Q),G.domElement.ownerDocument.removeEventListener("pointerup",j),!1===G.enabled)return;G.dispatchEvent(ya),l=K.NONE}()}}function q(e){!1===G.enabled||!1===G.enableZoom||l!==K.NONE&&l!==K.ROTATE||(e.preventDefault(),G.dispatchEvent(xa),function(e){e.deltaY<0?F(T()):e.deltaY>0&&D(T()),G.update()}(e),G.dispatchEvent(ya))}function X(e){!1!==G.enabled&&!1!==G.enablePan&&function(e){let t=!1;switch(e.code){case G.keys.UP:C(0,G.keyPanSpeed),t=!0;break;case G.keys.BOTTOM:C(0,-G.keyPanSpeed),t=!0;break;case G.keys.LEFT:C(G.keyPanSpeed,0),t=!0;break;case G.keys.RIGHT:C(-G.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),G.update())}(e)}function Y(e){if(!1!==G.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(G.touches.ONE){case a:if(!1===G.enableRotate)return;z(e),l=K.TOUCH_ROTATE;break;case o:if(!1===G.enablePan)return;I(e),l=K.TOUCH_PAN;break;default:l=K.NONE}break;case 2:switch(G.touches.TWO){case s:if(!1===G.enableZoom&&!1===G.enablePan)return;!function(e){G.enableZoom&&k(e),G.enablePan&&I(e)}(e),l=K.TOUCH_DOLLY_PAN;break;case P:if(!1===G.enableZoom&&!1===G.enableRotate)return;!function(e){G.enableZoom&&k(e),G.enableRotate&&z(e)}(e),l=K.TOUCH_DOLLY_ROTATE;break;default:l=K.NONE}break;default:l=K.NONE}l!==K.NONE&&G.dispatchEvent(xa)}}function Z(e){if(!1!==G.enabled)switch(e.preventDefault(),l){case K.TOUCH_ROTATE:if(!1===G.enableRotate)return;O(e),G.update();break;case K.TOUCH_PAN:if(!1===G.enablePan)return;U(e),G.update();break;case K.TOUCH_DOLLY_PAN:if(!1===G.enableZoom&&!1===G.enablePan)return;!function(e){G.enableZoom&&W(e),G.enablePan&&U(e)}(e),G.update();break;case K.TOUCH_DOLLY_ROTATE:if(!1===G.enableZoom&&!1===G.enableRotate)return;!function(e){G.enableZoom&&W(e),G.enableRotate&&O(e)}(e),G.update();break;default:l=K.NONE}}function $(e){!1!==G.enabled&&(G.dispatchEvent(ya),l=K.NONE)}function ee(e){!1!==G.enabled&&e.preventDefault()}G.domElement.addEventListener("contextmenu",ee),G.domElement.addEventListener("pointerdown",V),G.domElement.addEventListener("wheel",q,{passive:!1}),G.domElement.addEventListener("touchstart",Y,{passive:!1}),G.domElement.addEventListener("touchend",$),G.domElement.addEventListener("touchmove",Z,{passive:!1}),this.update()}}(ka,Ba.domElement);Oa.enablePan=!0,Oa.enableDamping=!0,Oa.screenSpacePanning=!0;var Ua=new class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=function(e){const t=new Float32Array(e),n=new M(0,1,0);return new Tr({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:ta[3e3]},outputEncoding:{value:ta[3e3]}},vertexShader:ma(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${ga()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Ga=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=fa(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Ja(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<aa.length;e++)aa[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Ga),e.scissorTest=!1,pa(e,0,0,e.width,e.height)}_fromTexture(e){Ga=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:1003,minFilter:1003,generateMipmaps:!1,type:1009,format:1023,encoding:ua(e)?e.encoding:3002,depthBuffer:!1},n=Na(t);return n.depthBuffer=!e,this._pingPongRenderTarget=Na(t),n}_compileMaterial(e){const t=new Rt(aa[0],e);this._renderer.compile(t,ra)}_sceneToCubeUV(e,t,n,i){const r=new kt(90,1,t,n),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],s=this._renderer,P=s.autoClear,G=s.outputEncoding,K=s.toneMapping;s.getClearColor(Pa),s.toneMapping=0,s.outputEncoding=3e3,s.autoClear=!1;let l=!1;const c=e.background;if(c){if(c.isColor){na.color.copy(c).convertSRGBToLinear(),e.background=null;const t=ha(na.color);na.opacity=t,l=!0}}else{na.color.copy(Pa).convertSRGBToLinear();const e=ha(na.color);na.opacity=e,l=!0}for(let t=0;t<6;t++){const n=t%3;0==n?(r.up.set(0,a[t],0),r.lookAt(o[t],0,0)):1==n?(r.up.set(0,0,a[t]),r.lookAt(0,o[t],0)):(r.up.set(0,a[t],0),r.lookAt(0,0,o[t])),pa(i,n*Zr,t>2?Zr:0,Zr,Zr),s.setRenderTarget(i),l&&s.render(ia,r),s.render(e,r)}s.toneMapping=K,s.outputEncoding=G,s.autoClear=P}_textureToCubeUV(e,t){const n=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=fa()):null==this._equirectShader&&(this._equirectShader=Ja());const i=e.isCubeTexture?this._cubemapShader:this._equirectShader,r=new Rt(aa[0],i),a=i.uniforms;a.envMap.value=e,e.isCubeTexture||a.texelSize.value.set(1/e.image.width,1/e.image.height),a.inputEncoding.value=ta[e.encoding],a.outputEncoding.value=ta[t.texture.encoding],pa(t,0,0,3*Zr,2*Zr),n.setRenderTarget(t),n.render(r,ra)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<ea;t++){const n=Math.sqrt(sa[t]*sa[t]-sa[t-1]*sa[t-1]),i=ca[(t-1)%ca.length];this._blur(e,t-1,t,n,i)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,o){const s=this._renderer,P=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const G=new Rt(aa[i],P),K=P.uniforms,l=oa[n]-1,c=isFinite(r)?Math.PI/(2*l):2*Math.PI/39,h=r/c,u=isFinite(r)?1+Math.floor(3*h):20;u>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${u} samples when the maximum is set to 20`);const d=[];let N=0;for(let e=0;e<20;++e){const t=e/h,n=Math.exp(-t*t/2);d.push(n),0==e?N+=n:e<u&&(N+=2*n)}for(let e=0;e<d.length;e++)d[e]=d[e]/N;K.envMap.value=e.texture,K.samples.value=u,K.weights.value=d,K.latitudinal.value="latitudinal"===a,o&&(K.poleAxis.value=o),K.dTheta.value=c,K.mipInt.value=8-n,K.inputEncoding.value=ta[e.texture.encoding],K.outputEncoding.value=ta[e.texture.encoding];const p=oa[i];pa(t,3*Math.max(0,Zr-2*p),(0===i?0:2*Zr)+2*p*(i>4?i-8+4:0),3*p,2*p),s.setRenderTarget(t),s.render(G,ra)}}(Ba);Ua.compileEquirectangularShader();var Wa=new class extends Fr{constructor(e,t){super(e),this.helper=new Da(t)}getPreviewLink(e,t="128-JPG-FFFFFF"){return Da.getPreviewLink(e,t)}findMaterials(e){return this.helper.findMaterials(e)}findAndLoad(e,t,n,i=(()=>{}),r=(()=>{})){let a=this.findMaterials(e);if(a.length<1)return void r(new Error("No such material exists"));let o=a[0],s=this.helper.resolveMaterialLink(o.name,t);return this.load(s,n,i,r)}load(e,t,n,i){Da.getMaterialMaps(e).then(([e,n])=>{t({...e,roughness:1,metalness:1,color:"#ffffff",transparent:n})})}}(new Cr,"Bricks092,gp3i5UJf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood092,rsQP24AV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones138,PiG1L9te,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks093,2fGmYCRc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks091,QXh2tzKU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBark014,EGP4wVso,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine009,pNQneZJD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet016,dnZavRoU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor051,jClsRFWK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal046B,DowWeqrC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround068,c5MREyAu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete042A,YJF48PWM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks090,cBxQoWFs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRubber004,9uLMWQBw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine005,FixALZNz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood051,V8GxOuBK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones139,1CtbDYPM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGrass001,lmIxuoR7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks085,hYgnmGRZ,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks089,DxJkpsC9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood066,rcTJ0iNR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker013,mSak1pGC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGrass004,8f7ZrdgN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete034,jUQtDlJO,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround054,5jRbQ1OF,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood049,sJ2V5ZlI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround037,MosY1mCU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock051,RnGPi4x0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble012,uZys50mU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal041A,cU1j4pql,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster017,kZF8yCTI,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles013A,CEP8Qdev,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles014A,3s9mPeFu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoil002,VXNajh4t,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks075A,U2bV7PnI,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks037A,N31dzKex,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic013A,qNe4isv1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood058,VOtqJ3DH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks039,Nc6eGXz8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles107,g2v4Tz5w,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlaster001,SLyYfa9J,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood008C,V2tPBUz1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor043,2xbnOC1a,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble016,7ZKE2x3V,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal046A,iETd6QjZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal032,3bfDWlSa,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround048,JGyYoD4h,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood067,fVZMvFDa,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks086,Uf39aVqB,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine004,HQSibwWY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood060,R3tPxd0p,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble006,NrAwvB2j,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric061,E39ePXlD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones136,LZqTwS9d,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble021,ieK3XGU2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal042A,7EMhGofw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones128,dxb7DQYZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood090A,KQ1ml0q6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood048,OZqjXdJD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric066,RqLsIgGw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow010A,JTmSIZXs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWallpaper001A,CHLV0YET,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor041,5b24lHmJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine013,RKLnOXiG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete031,uz5SVKf3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround067,RmtEq6YO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete045,NeEzQjRD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor040,VETFv53l,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones131,moEU5O4J,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete044D,rjcEGbqN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal038,27fAeJTu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt025C,mRFprHy7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete030,e17iVOy5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood089,n2OBdTQW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles130,kKh5DrlZ,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric079,BryEgsPT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine003,rOh1JHXg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock035,yYLHTR7D,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoad007,O6RKSwgu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood050,eakbMEiB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround072,K9cJzunf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks059,wULl0Ou1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal034,Kn28jRDr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks060,39b2iMRa,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood026,FTV3HLhs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal047B,My7Ktrej,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood062,TISxqEuJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones140,jUP6ROaW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric030,Pu23GKtr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nNet002A,lO7sgwHi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather037,4mWfZc5P,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt023S,fkoz1QUn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock050,b8TJ5ijs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood027,6zi4tfPW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric036,conBCXhd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks084,96Plb8QL,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble020,KY76XiPe,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal035,Hg2bnjQr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles012A,1LwHXf3D,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic012A,PwMWQgqr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks033B,9cQq5PN2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic010,QfC5MzA7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble014,Xqn3wdfc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks066,5kcY1Aer,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBamboo001C,E4u0TSiR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt026C,trYUqV53,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric062,mGlcOHdL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoil003,NLIn1Zr2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGrass003,ACR6OrV9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround074,MK0iAb8Q,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMoss002,RZqc9Gk4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood052,dOunkeLj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete036,7wLvUkHW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock020,YxrSkLtz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones122,CPhK31HE,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine002,GOVz5j0L,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate008C,LBs0dVER,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal036,pcFAbk0Y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood059,bYwOfXcG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal041B,wuzlVDTi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood007C,RyOsao2g,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPorcelain001,764rbzOj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood009C,WwOeMK2t,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRubber001,5kbgWDR4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood084A,QaXUxhPq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine001,olPgXfq4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal007,y67bckUG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPlastic006,SAl3kI2T,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlaster002,Kzg7l8CO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks074,3RZleIM1,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel023,8nHSJFiN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock030,qL2Hjn36,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nNet004A,iPSaNVBh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles129B,XMbl97hA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor044,0mZ9I7Rb,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround071,8I1D4vu5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles078,7BKeNYA8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks023A,yfphiDEV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood068,EFRWlHyr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles074,IbpcsdCS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood061,aovRhPrS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor052,OqpnlKvL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones125A,32BmsD1A,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones070,rcHX4DAB,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones127,iubtX0sw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric077,1yep4uQD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks037B,WtK9zRvq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt027C,PQFA7SLX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic015A,DnfkRT1F,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles014B,cbT0wIQn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones137,zo8QDwOv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates006,RzVulJpA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround062S,3ybMCWAN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric019,w6BnNVMD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles093,kMpjbqFo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood081,SuRI7cMN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine014,Y8JvqHXo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor057,FH90CQ2Y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBark012,QvMcRb6t,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles012B,YvXfIjrt,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks088,FMLu09Sf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete032,oG8tdnKM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood028,e7OoazXR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete040,NXpKV8TA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete044C,VhpmY5OX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock053,kdO10Ebo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal009,YvADakOS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal044A,yFoK6iQf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones135,KSBNErTU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal027,p0GZtgiM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles040,clNIBUoY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric060,v6pQ2xeI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble019,6zKGZyNs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor039,Yp2xwJog,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones130,qTtXnQ4E,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood047,Km94niGz,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaper006,UCkdGIX7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal047A,IFzscka1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric048,LE6ns8j2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor007,HaNWmA3K,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nMetal030,C3Pw69aA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine007,xB3p4XMF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric063,mCsW4Kg5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal029,qGg3CeOj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric045,tgQDV4rv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood030,BGZfd1ka,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones126A,LApP0iHl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt030,bIgrVcKL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt024A,azFdIDwT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGrass002,kygRVjM3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock029,VTg5fIWL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks051,YkWxd56u,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal011,LREPzVwv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal012,Bwzi0dmn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble007,OML6mRcf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones134,eogzsVfr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood091B,gMyXW3ir,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones111,NqTI2DVS,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood021,KYEwC5mG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles013B,4M1ALT6c,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood007B,hjA408ZI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel007A,Fvdny1BK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood088,nHku4gfe,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles105,mG1vyDBd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks036B,7oJcBLQN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic018B,6SzY8UvR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nNet003A,lRaK9YLD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles075,R1m9wF3e,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles052,TXOrjbiJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine010,3XgtYZaJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal041C,pbIcKeow,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete044B,GqTJdXuy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal044B,TNqgfcpK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRubber002,qZusedbg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal003,pI8GMQA2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nScatteredLeaves008,JXK5aulq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks076A,qlTZQJ8s,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather030,T3MaiWb1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood035,QBtV8FsR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood090B,3ijqVmYA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood083A,T3U9m6rl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet012,HDXJPN5f,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete042C,At73O2oI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoliage001,maRw6cAk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nRoofingTiles011A,WNOUQ2lF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble023,FSLO4hUk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks075B,PQDMuEnB,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChipboard004,YHq5p6At,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlaster003,Vb1DXcRS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks087,ISjmygwH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor034,XsgISpbn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround073,Yk90cJ8U,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks058,e5YQh3BC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles036,qUVo067m,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble025,3mQiDZUP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather034C,4tmc5TUL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles006,ifmGzUFM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrain005,a8cvrpy6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble024,EL4AzDhq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric023,RLHcYQvS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks025,EIjZ5O93,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble009,ivcTsBhx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric032,f2I8m57n,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGravel039,IE5Axpwr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal028,XEQAzi5I,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal031,ZSJxXMPL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles098,lCDc9N6y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble015,Jv4rFLdj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks021,yegAs7bi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood087,ZTNWJuoL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet015,3UuPomds,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks082A,ZhIj1lCy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine011,w5fQkL7H,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood034,5gSrCXYH,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric028,MFUoNwPc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround070,8VOyGltd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones129,ZIWmnMV4,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic017A,l3LHPDYO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaper005,FB2A8dJV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt019,E2pTaqxH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate006C,YmyQCd3h,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric026,dVQDK8IO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel038,jNIM8QKq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete025,kejCSV0B,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete044A,X4DZLF3y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nOfficeCeiling001,FJ5mdfgH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoil001,zRLWmK1Y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock041,Igs6yGXF,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections017,DU3Yr1M9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPlaster004,IlBEv2YA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood076,3tu1Fk6n,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock028,L2K0Ptax,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather026,Mz5Jbq7X,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic012B,DhwKYxaj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones133,KN3GmPU2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete033,aFO2VdUj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks054,MpXxyqEs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles015A,SZ3lDwFy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks035B,f8SYvKh3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles108,sOVEgvz3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric039,Ij2n5uHb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine008,x6ZD9a7y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DMango001,qXPuHOJp,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nMetalPlates013,2SPlCeab,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks022,NmeA7VW8,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble008,Gei0Ny9Z,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt029B,WGS0rFDl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood063,BedMSRLQ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic011,lOixzbmV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal008,6xtKwcCn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nConcrete039,Y5jd9VJg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood084B,KZqQjy1I,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrain004,qi8fjr6y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor046,mxGeUvP8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround055S,NaoJTWlL,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete023,vt2cQXR1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal043A,Go4KVqaZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround033,S45Zh9Yi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor035,HXrZibmT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet029,GYvj8io3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic013B,M75dsOcX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic014A,0wQSmiYV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble017,s52Bp8vR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks011,t3RT2zsw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather027,7P2mTdIS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal010,jBNvVcIX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround063,HjCPdIs5,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete028,xpSjXHZb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks083,zhUybLlx,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric022,ubzdJ7qK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic008,lGtQIL3J,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood006,hN3K1MJd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nNet001A,giqOEDf3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock048,UMyX9Qe4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles086,hwC9TfKP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood082B,Co5QV30P,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles045,ZY89QsNK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal042B,mI3LhDWP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones109,y8MYmz39,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet001,zGbPxoZg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble018,loDzKubv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones114,yrCkP4Qg,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt020L,lWo0KQ2f,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic016A,bx09qaR8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPorcelain002,oxQaEA2w,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather035D,LFjn6qPZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble005,KUzLqVlx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel022,lbrCBowT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround047,Zj2yuXhB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker010A,WR3gyJrx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks020,KfCDrqoi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament013,fh5lC4WK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones099,iozCet6c,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrain001,7okvgz2l,2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric076,DK7PnZqp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic018A,7peaHNCM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete019,lzSKdjbJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal033,vd2yGOwz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood091A,8pYGjXPS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal021,YTVp0Lex,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood025,jLiGbn1R,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete024,d2AWJZT5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates008,xHzSeN52,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSheetMetal001,imbl4kFq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble011,8ojyDzxW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks023B,idru0QjJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric031,e5QVaRFO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nMarble002,zsRLgdUO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric069,0paCciFo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather033A,c482aiAX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal022,k7L1c3YB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood029,PXQCNai8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt025B,h5P8tmO3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRubber003,Ojt2Vhmb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock031,IvnUg7uK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFence007A,VJhfMBEL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround062L,oG7H4zbF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine006,GlaYIsOk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete035,RGN4QiBc,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal024,YFAqCyrz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster016,3JSNGhs8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric040,5X9MDU3j,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles084,OypcG8AU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBark001,6wO8LpWh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles120,vpHG950s,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks076C,fG2CH0yb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks029S,XDGckrKJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood077,7mVeEWoc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks061,tADpZrYN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood006C,6whJILTz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles012C,YiBcX7DG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood041,uGFwsYQl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood073,iSGnB2Ob,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble010,hJysQeVj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric035,SVi7n3mG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood023,YaBsWGHu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones105,OKwdCN7Y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock037,kzBiJ9UR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoodCrossSectionSet005,OHZiqSYf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete041A,l4OwJVf6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock026,WhA0Ba4C,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones081,6HRaS0Zn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel037,dAgaLExl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble013,9nMWljd2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround061,tgbrvnok,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles071,BWKaewvg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLogs001,SCgbh5Uz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet014,h9MzfPJU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround003,31vMTlHm,8K-JPG\nPaintedWood007A,zir4eqjE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles015B,NV6tgRFh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks077,yb2E1jOK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather032,fjMk74F8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDoor001,dvFmDGAC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster010,r80qt5Ez,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete016,OhRyufDx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles089,UEDc3eBV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood046,IcpgMLkw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks078,PXo6QLJh,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones053,3F2DQvxi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks038,qor27pmG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete008,M9Be2Tq4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlaster006,IVaJZdAK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood069,14nSKYoI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood005,qGkYj3uX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather033C,qgzwMjSa,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel026,r08C23Fb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor048,Zn0wJ472,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround058,A2rZ7JGT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel007B,ld6n3IBV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic007,CZtypg8A,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood036,0PnFE613,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood042,c91x3gJL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor036,8MIygSqB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood056,YuP0zbcU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo013,JDeWmVpM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoad006,71jBSU3M,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles081,YO4k0JHz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel032,J63hBuQ8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster015,aIXnjEbG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt010,CdTxGr2v,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nMetalPlates014,4lXo2yis,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWallpaper002A,GTj0hxci,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles002,E8z2GJK3,1K-JPG|2K-JPG|4K-JPG\nPavingStones132,l0pW6byX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBark013,4hayNT9s,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood022,vgGI8oxu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones092,GIQ5eg8b,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks038,fnm91Ncz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCardboardSet001,UlgOzoYr,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood008B,yUSn59Ku,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric018,ircsUFJL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal025,y65JeZ8r,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel035,okd5wrUz,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete017,zFbMsHQP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks012,bhM0rEWF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric071,QiYaLdDj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel024,8RrgcW4U,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround036,VlgzX5Nr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones054,50Xw8Jcn,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGranite002A,8gQ1AzHx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks030A,WxXjyLKt,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks071,lmKQBZHr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock022,Npzsxbk2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow008A,gV8MUBpQ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks034B,TH1RgcXI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles032,vNrdEzKu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood032,oSLVU9fr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo018,9rjtvMSL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt023L,LZvYrOGo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones036,g85a3D0H,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround052,vtHzbyPY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles079,HA3luZwU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete020,Z8WGAKBy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble001,g2jK90sb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections020,JoGMiVRW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nWood054,5mOkuobv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt021,OY5PeoI2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade018A,k2SPLeIh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles014D,6C7UAuFD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks029L,M9NbQKh3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nIvory002A,uwAL6kNZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround027,7k96mNdf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodSiding008,UqFth4y8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor056,SNBdeHKu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround039,9pFqBrZo,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles118,Q2JZaCo6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMoss001,xTYfOUeE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock049,ZMSQ2zpr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete042B,2yCU1L5Z,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood045,s780dTwc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor042,Dw8qlcvY,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles124,iV0Ytwur,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles128A,omaf74hR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor054,v9Pw0FaZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles014C,LY1VdQcR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCork002,U9wi76Z0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather034D,9sUjQEef,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric049,Pm4pAufH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles013C,wn9ZtPcy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic015B,1YjOgdp7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel020,tNwjQRZT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaper001,JizQPMoh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nWood003,kjlwDYeN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFabric055,dyJ5LkMo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor053,8u5SLoc1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood039,RfxFelGE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSheetMetal002,r4bhcSUs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks006,aoEO7Lnc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles076,Foe08AuX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric034,fxWY3Srb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrain003,a7fdou1g,2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete026,0A6yZRcf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood086,Pn6pHNEb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones075,BQcaA8zf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles013D,MW50diAY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble026,pjtig9JS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock034,GAXfB4O1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodSiding005,FYBUJwfM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament014,QrcGnwAR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones119,82bHMNxT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt015,EybiADcF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic017B,24SFNlxe,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood078,eDVucIKn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric070,zWu5XNjS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones121,0opai621,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles043,C06KoljA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather031,LXvVDf6q,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nNet002B,7qpxDQ45,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster014,2314Vpul,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks036A,UCSXsIgF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt026A,9CW1nrAF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPorcelain003,9w0bW1Di,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFence008A,WMIJk5Yq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood044,7gBuNzZ1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood013,uo7AxdzU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections015,bWvlip32,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTravertine012,x4ezVJsB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric068,7rKLIcCY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather028,U0RdQ6Hy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates004,yxBA16aV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete037,otfMQP8X,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble003,1VdWyBSh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround049A,X1jqT8N9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaint004,NytJxieb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood008A,Oh7jCBu2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles035,jYkpDUaB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles101,NV0CKHje,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles054,sDjGCpt3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood005,jEleTbJO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPlanks031A,QE1J9oWc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRope001,nsIRUlEP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood033,JtRaGkTS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles015C,KGfR89Xy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles110,v1nYqQ2t,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster006,GwOsLMli,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal045B,fBz2TFtv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament015,qfHokLWC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks023,vZ6L0J92,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround029,bilYKtXu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround023,mNn1ul5h,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones112,Eho87vKB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor047,iVfQuJOy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor037,ZQd3SLgA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood071,if4pUFjd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel033,M6Hkbfml,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTatami004,IY9VjuXA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet024,69pAdGax,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete029,qNZnP7Ok,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones108,dgNUIAi7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles038,IM1gjZ7K,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric054,OsGoLEl6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles051,iJYsyKwq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones067,ezSy4nFN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles011C,7jZ8mqU2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAcousticFoam003,F36M49e1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlaster005,nLD0P5wS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric025,vml9Y0a2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood043,2PjQvmGW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles011B,EPgRvi4o,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock046S,XAgDjqmi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric029,4yOXcsL0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete012,slZgJEu5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWallpaper001B,VXKD7y2N,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal004,kByIs2KW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPlastic016B,B7scAYtU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles072,409XkYIL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow006,xDjUECmB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGranite002B,trEaU4Kn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles095,xSZ5TKE9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates017A,5jIwJSpC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo005,Df38cQbh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nNet004B,n1Itl8MQ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodSiding009,4K1kUsNE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood017,3BRTZ7sq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks019,gv6ST58a,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood009A,CW6uZUe3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones046,XgZOk7I3,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow009A,DN4tvCXZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood083B,YnWRev2b,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic009,pQlEHxhZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric041,uG3KQRvS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate008B,PyXQbEsH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble004,m4EO7Qwf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete041B,IHmeDQFp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround066,CdzI8g4S,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones107,ByM9LNg3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks053,1qoUDAzy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo011,BlC57LXR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather033B,HXEyZ93r,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather014,m2781ZqB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock032,KcAovlIR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMoss003,5cAYhSP7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather025,UEfjOkvH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks068,m3CMsnoq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete014,xrN2QXWq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones102,FwmovtPB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks023,OBoH7Szp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections018,snDdlXPm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nRock033,VCPwyZ5d,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic014B,LHaRWIxe,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChip001,m3KjXAoG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nRoofingTiles008,mx0uzPJs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedBricks004,tUykmI1p,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet027,FRcy6QxC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel007C,ks6C8fiR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal006,MiqZWAa6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow007A,Qf3x7d9F,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal019,9MnwprJH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock052,qSF1lCsb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround042,d9zZKjkw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric064,xoTUiAKB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMarble022,tuC45ofE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal045A,zwI4Vcl7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks033A,hXRrFNbO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock023,dHwDl0fh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt029A,by3lpkIr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather036D,SO3uDBG0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal043B,8A1aWOgM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt026B,2A6lnHqL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones069,eF8Pug1q,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather024,MQw98ViI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nThatchedRoof001A,r7gSkdJR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather029,DvnFMhZg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood040,93ATnCDd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround051,QuetzELo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones117,THe3VEtc,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks042,zl3SCI8a,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFingerprints009,uQRN6Ovb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks007,HTP3jsk4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel005,9ARS08tW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks034A,eZpKShmu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather011,S4YwWxTU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade017,vxpHUF2P,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones057,w5Mg8obX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt020S,TN7SL6z0,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks001,KlvswknN,8K-JPG\nConcrete010,7b6AEvMC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks052,eAus6ldp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock045,Y4kvDJzB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMoss004,9EkNn6zb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nClay001,wL9N8qTO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWallpaper001C,gYi6ZlCw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete042D,asdSPktE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones110,1CGJr2I5,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nOfficeCeiling002,iGXIsV2R,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nNet001B,lZr14kWm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles007,HUCXSRKx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor008,2KVRy0b7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFabric037,jf5Fs9SE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo004,g7wcQABv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles020,JUAkrNcB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric001,lfFtjGMV,8K-JPG\nBamboo001B,7kurZIEq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal017,OTIYNwEn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood079,mlIKaLVS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric042,39e5QOu2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles010,8W4RsFij,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGround049C,2lgska34,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles106,OvaD8CVd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood014,hKY9VaXT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles087,Wyuo4qjJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates009,ruztMyJf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt022,ZN9qyK4g,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround069,AeYPJ1tf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones123,XMYVNUOk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor024,Bd5Qtybi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround026,h0yDpBE4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel006A,zgJIjDhd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround038,8eFZDniu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal001,sL5DQNmq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nMetal002,Xix7YZQN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\n3DTreeStump001,ZKwAifBd,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nPlanks035A,Ws0Tvn74,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks014,bXDiV1H6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks011,I8Wn7Jso,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete007,jtEwAy1b,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones037,mvnat3wC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodSiding013,f1GbNYv7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles001,nUxmRMsc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DBread011,ctAkSdjY,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nMetal037,8ZAdMw5F,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor025,QVvh49jF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoad003,4bFLXDok,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel036S,a6zsYPdH,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete015,HzDkM5Ct,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic001,qGY9rxEC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGround053,tkrVf1hK,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet013,rExIQg4s,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nIvory002B,IC5nWTJq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSolarPanel003,IBTilVA8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles073,rLcHAY7q,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood009B,Vo2umJ8g,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround022,vpAZzcju,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DMelon001,2rCINBWG,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nMetalPlates011,hvagGbOP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTatami003,vZNSwAGI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood055,bsNFIdEw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade001,1P6Hpmh9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nLeafSet028,cJovLayZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround055L,EiyrIZhG,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles003,WEFOfNio,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks019,XVsj6IQP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaper003,w24W3qvV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor032,7AXug3IN,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood072,5aTNvtUq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo012,4NXYRlZJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo019L,Ia8K1HeZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBackdrop009,mexfp4rc,16K-JPG|16K-PNG|1K-JPG|1K-PNG|24K-JPG|24K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nNet003B,Tw90lm72,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones126B,dF9XQmJp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks056,vyGanNQf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood024,zlZ3aCjh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather012,9QAbNy1f,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather023,tmXgEy4z,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood082A,cyES1Rph,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones125B,orkLsqU5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood009,8wLM0Yfa,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nWood007,f7POjuCo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFabric075,SWAuUeIz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete041C,BjTDCsHR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles009,pbklmxhs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt027A,bD8oQugt,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLava004,QwUXvo0J,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo001,uCvTlHkp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks022,ZX4Pq9Fo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks008,K31ArEse,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones098,IjACE4D5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChipboard005,UedpX2rC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles121,T39LkxNX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete027,3MLyIAJO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood057,NjfxBLI0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet003,S7H3OnhF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks082C,lndCQ7Sc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones115B,vUJAXNOb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks072,uU9Xzysm,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles126,ICq6lxar,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles049,la3SKHxi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel028,W812p345,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaper004,esAZq9Kt,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks050,Nihax9vC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood006B,1b8FmiUV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoad005,s8Wg37ET,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet019,8Z2omnEk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood018,MiIrk1fB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBamboo001A,5KiGIFhb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles125,2AZqeYfB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround041,VM7vzp5J,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoodCrossSectionSet004,OeBAdaUo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles129A,bJfQ4qVi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTatami001,Fj968yxi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround065,3nOoPEbR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal014,X5yi9rKz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks002,Mch8XCnP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCardboard002,hHVk1RlD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate007D,We3iysk2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles027,KgE3nrt5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet011,mb1eM2I4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt027B,LgcT8Nh9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor005,nZT5Dwox,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nRock036,C2FWqkUl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather022,vlBso9a3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles127,svdxTlBL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBark006,Ef7gMI42,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood037,eSNKDnXo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker007B,0lrJRiv6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround064,ZOXcjaPY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DStick001,Y6tf0kHT,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nDiamondPlate008D,rn2tWQgG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones083,ZUSu2woy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks034,aIwGgTOK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal006,06FzJBs1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nAsphalt016,q54hK8eB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete043B,5vif7WJp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles012,0SgOcFGm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker008A,NbCDZGsS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodSiding007,e7rGolOM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nIce003,Axd7gp1T,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPaintedPlaster013,law0hJRf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor014,XC25ebuV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates005,8Xws4iPc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks027A,3ypmiuNL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete006,TVBFsl5i,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DLemon001,Dl9uQMsf,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nGround057,oLtXa5d9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles122,NV2wmKaI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones084,f0LNK1dP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrain002,409aap48,2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTactilePaving004,h8FMSjk3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood080,xC24QDnO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal005,tJfkuZ8r,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles085,m89KVcZy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones116,NcvORUtd,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodChips002,6LjXOriM,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoliage006,B03tOjMc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal026,JAQcNmrf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal016,EwfRoyqm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections019,dtrx7v6N,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles090,C39IkBzc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles111,Ot932JoT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks064,xAtW2JCI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet006,95csz4pV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles115,DFselEUi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles082,PcsMJj0W,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks037,cm3zUQr0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalWalkway013,OAJ8D6Bz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks008,Ymj5ECp8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingEdge002,iH1mkrQS,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles028,zHS3gwX0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather035C,8HlVauzJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates012,NtF3Pvel,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nThatchedRoof002A,TjGxoPhJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric051,hlkWae5y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate008A,7SZabVJB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo015,hWlktdqA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks001,56AHFDdR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric065,v0VZEGYk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTreeEnd005,ujoXpWFd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFence003,YQEUd1tf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoad001,sSm8PT0Z,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones071,qQkxD6O0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles053,eBORClEM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt025A,uCGj2iqA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood065,EHh61YOL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks016,TWIL72bR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor060,17A5a8RH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock018,cBydM3UV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric016,ODV63nlK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones118,FeM6CE2m,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric059,sJWUnNQz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks031,AKed0JQp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric017,iTuQhZDr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood020,bqDZk3m8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles083,EOhHKYGy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks028,su1cpCqB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTactilePaving002,NbnrUspF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow005,dYpe0DXO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGlazedTerracotta002,eBb2tSXE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks009,KAoBNtCn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric008,IzPklsR1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nLeather021,NXY1jHPk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal020,pK3UdSGJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster007,FVXcL3WY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo009,muwT87HD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRope002,mNfBtkh5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt028A,OqvoCyV5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock039,ERufI73K,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks016,45HOmR3S,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates010,SUY0gqNB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor055,gMW7jEo1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround034,rKFHyxg0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTatami006,gH7V1PGm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic003,panWkdXy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nBricks028,Zk6tKgzi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood002,gmhl5Aq4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround049B,b9TGMY02,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DApple001,osEYNxn5,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nGround050,N3vWy4jY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks057,L6Eqal4S,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic004,2mKXMnSf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\n3DBread007,aZleuLgb,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nRock025,JnjNFsoA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles055,7cyOpdZT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones065,ORYouKnG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric038,zPON9In0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric020,i9N5mK3r,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather008,EIRv6KzU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nChipboard007,ZMVxDLqG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBamboo002C,Pmc1MRnV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks030,brDOwKdP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks063,YGZrAVEp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal039,fe5TuXaO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChainmail004,QbmznaqY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones055,cD1gpjZW,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather009,u1vRf65W,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSponge001,9cmAF5zo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel036L,SHiEb7za,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal013,Ogx52ole,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nClay002,GVpPDoEZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric078,CQI6qpyc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate005C,wEdrGF8T,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood019,POHgm0cx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates007,cOXKjRdW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood006A,EbQonFqe,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet002,29wEbYcU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock038,wWhZN0zT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock027,7y8H3m1A,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker004,QIubgT6i,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPipe002,nxFBv5jz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood075,qd1ergFE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker010B,SNeRvtoF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic005,Yf0PZKdF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles123,WrxPzlyO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood008,mjM3PhIH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nWoodFloor011,y6imcjOY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nBricks026,atjwOI0f,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones038,IYytZVfH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock047,3dFY04Q1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete013,REy5AGni,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChipboard008,4cvUpQe8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphaltDamageSet001,h93D1YVC,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles077,9JxWGgj1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood053,iQvLxquo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster008,N20ptxz6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles029,M8ZN5XWn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles058,fxGgBV2U,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal004,sf4tmpi1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nRock012,6paLdw5Q,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DBread005,wAbQTioX,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\n3DCookie002,K5OPoUIn,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nPlanks013,rNKxdF1J,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks076B,Vb3O6cAN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nIvory001A,xDkmX6MI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround025,6IoEDeKR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood038,2ZAIfRXH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTatami002,iAKjJMVQ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones035,JueoZxgn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor049,GDW5joPt,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks079,pGI8dEmA,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric067,Ahxnm96F,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood001,0b2DagEP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates015B,C4Ut7WP5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGranite001A,uyYIwUas,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood016,L2HjYnPf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor016,V1W9ycmT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete043C,9EYHeSQB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt014,WYATtS6V,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround035,B8Y4z0f6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo003,CatBMJHb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAcousticFoam001,gP27UMEn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate006D,LYXe3fRS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt018,DhrlLnaz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster012,U2VTsJC4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete043A,3ds5yHPk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel006C,cA15BbpM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones078,MSIC6LN9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric050,jhfrvNUm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones080,GACsV6xE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections014,YKrCwmkA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster001,wPr4ji5a,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock044,5KJMwkR7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather034B,X3fhj5bg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles070,1WYwXqeP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel031,oLz4mDg6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround031,GYIVKx20,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround030,zwKi2q4T,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalWalkway011,sjlJ9TXG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow004,13IsVDmw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric027,ncm7Xef2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks022,jyEor4GD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks015,PcKWj1Md,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks025,8BFsxGjw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones077,rvpDKF1t,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates001,iZkQHCac,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPavingStones087,mlLFe095,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGlazedTerracotta001,tUMPljGb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks070,qxpVOAWn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo019M,PR5hkLd7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock024,0SeNuRdZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles128B,OVNHvWRz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks067,2gvb6kpK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow008C,jg5fRWsS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround040,wzB0qjR1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal023,drAjZu20,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor050,e0NXlGW9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBamboo002B,qz2XfevB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric004,0JU7LSgT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGranite003A,cS5VDTOz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBackdrop007,uo701pzc,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks065,aGKkpoS4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones058,LEUtRkfH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate001,sj2SNlto,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nAsphalt024C,5LV3COQB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones051,eA5gwhTf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock016,IG76waEV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles117,ixROH9fh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones029,LTtRVfrF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles030,ehSPFkMO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTatami005,sqy28MKR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChip005,SQBVHq7j,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nWoodFloor045,uWdrn08s,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet026,lkxBqdPu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor010,MeK0Dzy3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles050,IkihqsNF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks026A,RM0kpr5B,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood070,dx2bNRzj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nThatchedRoof001B,Twa4FsQ8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGranite005B,ZE8YKak6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor033,BFpkOP8q,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nManholeCover009,7WRbpwz9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood003,MF5ZSUGB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections016,uiveOpJy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks005,lJqk4BOy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo016,qjvoBKLb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt017,8dQfn3W9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles008,Z6rWAaHj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\n3DBread010,SLKDPXyj,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nGranite005A,Bez8yMEN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric002,PEztNKgH,4K-JPG\nBark007,nDdWkKiA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow010C,0usUCgqk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor015,8DNVyR6d,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel030,0QoRJOWu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nIce002,CxUSojOZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nWood085A,ZNRGEYaF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal011,3wWmC4ax,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric007,K5ul0jXP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPaintedPlaster018,gb08QhPR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow007C,AuThBlOJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo019S,ETVn9AYC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaper002,5SCI7aHr,4K-JPG\nWoodSiding006,kmU3G8sA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones042,wOAmnFGY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal017,QiPLr6aE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScrewSet001,2pTNzLjh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPavingStones104,AyRr6ZkV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DBread006,4KHmwkVa,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nDiamondPlate005D,02iKsy8G,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles062,0TEmzQx9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones072,EXpnfZOl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal013,XAfSwMlu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet023,gHEdSwb8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles088,6VRvqxbZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood011,xIgqBb3V,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade020B,5CjYkupX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks043,JDwP5vq6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric056,cF9tX0ar,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks035,Gnphw9af,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock019,4zm9RLyK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal018,uzpTdnmF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal015,7cMKozPg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather004,MLoktmHA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\n3DPastry001,8Pa5Dtjb,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nPlanks017,ofEgSw1z,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFingerprints008,qcLjTGfO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks018,eJwfxAN7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles007,ReTluvXO,1K-JPG|2K-JPG|4K-JPG|8K-JPG\nBricks048,YUOrPW43,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal040,gjT1ztia,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles080,sjdcb8yz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGranite001B,0L634CIn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet022,BHKmW2M7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChipboard006,JwzkKA9l,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel011,ru0H5Ojz,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric012,N5mh76S9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker009A,HAqL5Ptp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric053,BsWOJ2X9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks069,oKE02nN4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood031,z60lTMY3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks032,wKkYedsX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles103,bGNkERS0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks024,GWBQnOok,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric058,TzUFBAQO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodSiding001,dwILuV3K,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete022,71eVuc0G,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles044,0zhmxEul,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones101,8pSIGnEg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor004,9NtRglkM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\n3DBread003,keRCXO97,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nSurfaceImperfections003,c8pKO9Ea,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGravel025,MZI4cznU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles114,y8qJhjaz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles060,7NnRdWOk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt009,LI4RcsnX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFabric074,THsVgzOX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones045,Rkcylz14,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor012,DPbG5huM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks007,cKr1DhuL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood015,6EP9YH5B,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWallpaper002C,uT8SgM6A,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster009,XO5vAM7b,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks047,htpg47vy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt024B,WEK3qjpA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks032,VACG9Tzw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles039,dO1DuL9p,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections013,N9RGfzAh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nWoodFloor020,2cml3oAy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScratches005,OQ3miwZz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPavingStones056,VHEFps7Z,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric044,m5UdPGXa,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric047,2zE6gNfD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks008,N1PkOtnL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete002,pbfaTBZ9,4K-JPG\nGround020,ay16AuI5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker005,DYdTHf20,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo017,CyxmUzsj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles109,vkRmKgDS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel008A,nwxSUYAV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood010,moAgFpz3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles100,GsjbnLx8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround046,1cs3NLzk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCork001,mgqlcrfC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nThatchedRoof002B,2FyjUzS5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal009,TgnjbEJ1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones041,zZTSxurF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric052,Bmn9xuFq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles104,0UhRKbv9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones113,M9lLR0xE,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles001,w5o0vQIm,1K-JPG|2K-JPG|4K-JPG|8K-JPG\nCarpet008,G1tNnXKg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround044,nMVYvB2T,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DBread001,Rf78hKOI,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nMetalWalkway010,3YOMW1QH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodSiding011,nwq1Lr6i,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPathway002,kKfJ9j1s,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DCucumber001,J1g7EkbG,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nWicker006,UiromDC7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones040,tBzuTJRq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones076,A5T0uUNh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal014,UqigGRo2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade013,42wrOSxu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeaking009,PxA6Jdla,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoliage008,roTw6kuj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nChainmail001,ycA18m2u,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood085B,S5eC1moX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal001,reyRiOQG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles057,ltv6k7qj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate006B,QABSW9xP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather034A,nVrI0wNl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal012,6iTgpOKl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles002,t9SH3DcU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete041D,o6IFfGzR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel014,P0yKDqJh,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric005,vUpfSRDu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPavingStones124,gQpAqtUB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTactilePaving006,rW7n49YZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedBricks001,8Um1KHTd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet017,mAYekBtz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock014,SFsjJk3f,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow008B,jYdgDtUh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet015,w4sQWabi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade009,LM9zGid1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete043D,LC2lmI7E,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nClay004,yLGpxu2T,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks082B,QA0I2rmE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones115A,E3jtyxza,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete021,kdcpEs96,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTireTracks001,FaPK1Vl8,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks023C,G0uV8K7D,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric006,FSNgR1cd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPlanks024A,tgbFvUew,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood004,pz5wnJDV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles099,1VXAZqRl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow009C,HEbG8uOo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor023,zq1jmw0n,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood064,M5i4dN8V,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRust006,yoDuT8F5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DPear004,fMdoEm8I,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nTerrazzo010,kLUelwus,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DKiwi001,Rvn0kNVF,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nBricks055,Pl6Njwsc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock013,rCTGqjct,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedBricks003,vo2hb8za,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBark008,XoRQsylH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo014,bs6qj8gL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric003,e2Zgui09,4K-JPG\nTiles112,ZTdrK5pc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates015A,aR6zsc3G,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock017,BH52NbVe,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaint002,qxDoScQ6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker011A,eXaCBvY1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles119,iuS6QFlr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DPastry002,9pVHhujK,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nFingerprints006,6nsIWz7O,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSmear008,uSLBUEkw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker001,59eDnyiw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DPear002,dPnz6BN9,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\n3DBread002,Z867wCvr,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nWoodFloor038,wayLhDVq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles097,dJt6gvAe,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric073,chW1p6JG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DPastry003,TwiSK4sI,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nTerrazzo006,uE38y6nG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones052,0Wg5u9To,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGranite006A,nU4PYbjM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks046,sd1ynRQj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric072,3OBC0JIT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate007C,fugB4Ixc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks027B,Rkw40a7C,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones068,gxLS8Jn0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones047,gEV5odBY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround032,cnLzTPki,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather013,hfcHzmRw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones120,LpuitKgW,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate007A,7X8Pawmz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround059,3z4srvTx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade006,9JgiSI1O,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPathway001,mTpotJDw,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather002,eYVj0D7O,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGravel015,Se1d7GU8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWallpaper002B,XoMcK0lP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock043L,iprGZ5JR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate006A,rG4y1CJK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones079,4PtVy0KT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGranite003B,G4LhwyxS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DCake001,GbZ0ktOd,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nRock042L,HB6TYqmF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones062,iXkAhEIx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles022,scd3PFCO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGlazedTerracotta003,1fd7yJSQ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks004,ymYSwHgu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet018,07BC1TX9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel006B,LH502qV3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles010,xdGRrobH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks018,SUA5nRtE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nIvory001B,8Iwe4rJx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPipe003,HXthiUVM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DBread009,YtQyJFhv,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nWoodFloor058,70irXOlY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles069,u3MBOsCK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones085,jpBK17Y8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow010B,mc16oQfX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks033,wDfgW9hV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones090,hezHr3yT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeaking010C,wfSaQjVn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather035B,uDP4jHKN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones049,ndzp03Wi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodSiding012,m8h1ZsTp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles014,fXr0QnKh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric033,gaj91No3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks025C,5fJFK9Gg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround001,iM6jCxza,12K-JPG\nWoodFloor026,Pt5rpNWs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones059,roeE1TIw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRails001,HXPTQIeY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPathway003,mxb8FNKC,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete018,9aNyvB1n,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather005,d1XTpWLf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFabric046,cog1OwXC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround060,vnj2Y86b,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFence007B,2lmC4sqN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet013,jCHKLagv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DPear001,Gkw5Mmid,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nBricks073C,szSEqaKF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor009,ojdCJGUQ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\n3DAvocado001,JuULT73f,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nGround045,vOWk0Tpi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo007,RXnyd4kL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet005,SnpLZhmi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks004,UjLnu2Ys,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric043,rBaDcLhm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel034,c6lua4Fn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles094,w6ogZQ7J,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker007A,j928NngY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel021,HaNepQiz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChipboard003,WuGSJ5Xr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones100,10e2GoF4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFence008B,19c0TqNM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet004,qgTRH5en,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround024,XOvnBiNz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt028C,SVlDYJx4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones063,HZtTRwy6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow009B,fKy9pigG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles046,0BM9Weuw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DBread008,nmtz8C17,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nPavingStones064,sF2k9jWy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles092,mXNKLyc2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather001,4HcevNbF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nColdCutsSet002,6o5BYiTC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood074,V5HWM2Eg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles034,DkhFybLO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks012,Bgs3ihP7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks039,Kgh1ast5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor018,LHxjKCYM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster011,QWefnyHu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSheetMetal004,kVGQtjAI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScatteredLeaves001,IE6vLklQ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoad004,WZBJEf1w,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow007B,p7DfuP8W,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones061,wXALQObi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal008,K0v4DW5e,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetal016,6x51Xjvk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates003,g6RSPD2A,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles041,BVYQ4yLu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster004,U1cPiFap,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoliage007,Y0x5uJws,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt013,wYfxH7qK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nConcrete011,E1RiXLhd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedBricks002,fnLN9y8b,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor030,TADOnwrs,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodSiding003,6nGx2Fvq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles116,4BLSrAGZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCardboard004,yRf1JV6e,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DBread013,VN1HXxJO,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nLeather016,fYei6Nug,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles015,8KvXU19G,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks016,ClncER5K,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones044,LDuwak38,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSolarPanel002,lxLSIHZb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DPear003,IgGBmzXS,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nSnow002,oFDdAKLH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks020,ibZD769B,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks080A,1k8CrEzs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric024,r8oh9MkZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones050,o0uVwX8W,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor003,nXsPwIzi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles026,JNxMo0Is,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles033,TVaMefuE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade018B,MdLvY4ki,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones002,AYLv8CQB,8K-JPG\nFacade019A,nEujfI6z,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaint005,yBDsaz3U,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones026,swA4pQ20,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles011,JmNcP5BD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPaintedMetal007,IFcDKtdv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock042S,bN4MaHLO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones066,UByxJ8Ir,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DCookie001,fl7ognZU,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nPaintedMetal010,BpPiqDJu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock015,CSLnzoYA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nOfficeCeiling003,KxO07dR4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather018,lZUcL1g3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks036,6b0WBcTL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete004,8zJnbPmq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric057,i6Mk1Lwn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoad002,Lu1rzNeO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DBread004,G4wZKb86,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nRocks024S,jI7gqUa4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections008,jmKRipk4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nCorrugatedSteel008C,dL72C0SR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete038,D5cuKgjf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric009,qLevNCGM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nWoodFloor059,RupJer85,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock043S,1TSIoBRk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet021,wXK0xiVU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLava005,F4IXDNL7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles056,qlnrToYF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeaking008,baFnmUfL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock046L,bpuYWxgo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade002,a2qK6xOf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFabric021,uSZqis6m,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones088,EPalFYSs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker009B,bF3yP7dm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles047,1zwBKZIU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks009,2PQJTqL5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFingerprints002,mG9nSqQB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPavingStones093,ZXeTc1H2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel008B,AInVdscT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones097,Gud2UlcH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks040,t6pUrzfc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLava001,mXhKEcgx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel010,pZuCIElH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet010,znPaO7eo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather035A,DwgI7p8U,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBackdrop008,iuqwsb43,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks003,L5aij6Wm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nRock009,DOG3UjQq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWood012,V8HKyoZF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones091,pk0XtfrA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade005,6bcEevtR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPipe004,7hBAnd05,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker012B,uoTrsLx6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGranite007A,TxNRsz32,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones028,CfhAoU2W,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal002,WFRdDhmJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nLeaf001,X1NWbDzx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles042,LMSfnhQK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphaltDamage001,7YJbZ5sV,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks049,Bor6iT81,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks062,PXB5qth9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt007,RadpDClB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBamboo002A,wSr3aJbj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones073,MOysxHt1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones094,qaQhKtxu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor022,qbSk5D4V,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks012,yo4KNXjR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet025,dF5RC2Pf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor017,pv43obSy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nOfficeCeiling006,pbod2Crw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n3DBread012,gFDsT4Ix,HQ-1K-JPG|HQ-1K-PNG|HQ-2K-JPG|HQ-2K-PNG|HQ-4K-JPG|HQ-4K-PNG|LQ-1K-JPG|LQ-1K-PNG|LQ-2K-JPG|LQ-2K-PNG|LQ-4K-JPG|LQ-4K-PNG|SQ-1K-JPG|SQ-1K-PNG|SQ-2K-JPG|SQ-2K-PNG|SQ-4K-JPG|SQ-4K-PNG\nGravel029,8pj2ASW3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade014,G9mutyQ6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones033,TPepE8W4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nClay003,XrofpaxF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete003,6K0DM4xh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade020A,SlRkzUnF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles024,DsqCtVQK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor031,w4vimA1Z,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScratches003,sylFX8aL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFingerprints003,JBbQL9Tp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nAsphalt028B,lVi2t9Qo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt011,0oRb975Q,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nRust003,jsgb2GWf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFootsteps005,ni9TwLMs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks029,TmrYiWah,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones017,DPGbCfld,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates002,PpNujVgy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nBricks006,2qGSefad,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather036C,ldqy5bzx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines007,6rOCtGe4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAcousticFoam002,iPzdT3Lx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker008B,zT15EwKu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround013,Buo4xski,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeaking011B,cesTRlwY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround021,IadNRynV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock011,0U2Fa6Op,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles037,G65M8vLB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaint001,pL2XkmUO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks073A,AaRDuH21,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate005A,4HBsT31U,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks015,knbTgoFB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScatteredLeaves006,vTkm1aHW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedBricks005,pxiqr2yP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks005,i52Em1ud,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections001,Gka0Dpm3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles066,2ckQsxuC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones082,lMAQPsTr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodSiding010,EarmtApi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones006,omisYcSr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones074,KrjPvbqB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFence006,gZBaoq9d,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nOfficeCeiling004,vxQlDGyW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood001,5x2Anyj0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles013,ImSKJqsL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoliage003,x31ZzEWb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalWalkway006,Enes7o5K,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGranite006B,b9K23WSr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones089,XrIWyoOb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate003,GWNMRtS9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFacade011,YXh4HcUi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor006,zeVAIcZu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nOfficeCeiling005,9geRmohE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel013,XuspCfvP,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock003,3p1oEBaR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nMetalPlates017B,98Wv46do,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones048,cpSOPbyw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal003,CEyHLi3a,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nRock010,hbvU5gVI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRust004,RUNrKmPG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles091,dlr7zKuy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor027,FPh0kpcA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles065,WjJkuytf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks007,Ju7UjxRb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks045,oQsmyMRi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones095,6pxEAnIU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCardboard001,s87uJp9o,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTactilePaving005,irtJhu7m,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate007B,vcx51Cj0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather010,zZAdhR5y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeaking010A,YNQEWBr5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker011B,FvH6NJke,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles102,5EbzdteY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBark004,5zhWaoFH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTerrazzo002,mIvPz3U5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChip006,T6zQox5V,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nBricks021,mFcPwgDu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones025,sV8614fC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt003,7TAvGrwe,8K-JPG\nTerrazzo008,FCjgaS60,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChip002,Wkz9t1IC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFence007C,YCQGUu5F,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles059,YdH3WBLI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones106,F2g039Zv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nDiamondPlate005B,JMvbroy9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles061,7RK5CPjJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSheetMetal003,fVH2C5Q3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet014,RB9qlLNi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBark011,bj6zSqA9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChip004,7UtOmzKk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTape001,xm8oEXiO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoam003,yJSQCgWZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet009,xsn8OY4h,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker002,A6w0iXpl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones001,Wel3ObCE,4K-JPG\nStickSet001,dYkyfJAb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nMetalPlates016A,kFcHnSDi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections007,z4Fy9VDI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nWoodFloor021,92Io0Obz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones103,4hmTW2Nc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBark002,Jx6WRihd,8K-JPG\nRock040,3vm6nKaB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFence008C,5tW1BCnc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGranite004B,tGCZF0IP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks006,cpH8TLGa,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow001,3ZcrPt1w,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBackdrop005,9fm3rj2o,12K-JPG|12K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks030B,iQHKeCxM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodSiding002,SE710I6U,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks027,M6HdrK5h,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock007,sWCSj5PI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones034,9mIanDtv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWicker012A,vO1hzXfm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles017,zFULuGH2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks080C,Jf9mAva7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock004,pl3KSudf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles068,JflY0xoD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks024B,EpKinIoO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather020,hI2ez46y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather036B,ZxdI7jch,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks044,esToAVYi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles113,xzYqgFc0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel027,5a0nuc3S,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFootsteps002,thlkdpVZ,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel009,MhDVpCP2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround043,FzQaf0cr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSponge003,tOiJgnXI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalPlates016B,epLJ9z5t,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalWalkway012,MaRypBCd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles096,eoJ1WGth,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround015,sFdhDG3C,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks017,7IqErhcm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather007,LT1C9tkv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPavingStones060,CSWgGOf2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks026B,KBX8zsq6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGranite004A,2Qwq8vk1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete009,KNcfAQYo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks010,SucLsnCA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones115C,B1WE20ru,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones086,Aabq1694,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks002,68cxWk2C,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTreeEnd003,f9MQZEDz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGranite007B,IorGysA2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor019,XS1wFNAB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFootsteps004,fsdp3XCa,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles004,o9erAaUY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather015,8J5xkmbh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround028,xmw8nu2P,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks002,3ouyH60S,4K-JPG\nIce004,bKIPt2ws,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nRock002,EOAl9sRm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nWicker003,fex3YlyO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel019,Fm4Uyufs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSolarPanel001,yt9qNQWc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks031C,ltJLM28W,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTactilePaving003,9phfBOTV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRust005,74kMHjre,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor028,jsUb4WLX,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock021,LdKCjAxb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel012,j50rzFel,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoliage002,hLPrvM6o,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster002,pRVyKZJ8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather003,v4rxcGmY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nManholeCover007,AanliMPu,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks003,gdLnbkST,8K-JPG\nBackdrop006,97rtuqkj,12K-JPG|12K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks080B,7oPfFQz8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround056,yXFKdY5h,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBark003,CpT5HuwS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScratches004,sJegIwCU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPlanks024C,BaNce05b,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTactilePaving007,hQCkM31s,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaint006,vaGgohmB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeaking011A,oD2SrPen,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCardboard003,yv6HGZ5x,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks025A,XrLW4qNb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedWood004,lRgLuoqZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks081B,9pUMDbuH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor001,Evu0CX36,8K-JPG\nLava003,TbAGr2N1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaint003,XIoqOH2f,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade016,Ohzy1eGq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks041,G95M4eYc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFootsteps006,L2NDYgPT,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles031,lchegNP8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament011,HDZPIJyB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFootsteps003,iR9b2LfV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster003,sfLnH9uB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTreeEnd004,RLDikFrO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScatteredLeaves007,0fvONL52,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal015,28ZSMFti,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPipe001,CJx6VcOY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFingerprints007,nJ0BUKe8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeaking007,RGlevEig,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel018,tI6X8dAE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks015,WnMY8PyC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones032,yEIqLWPC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade018C,JiOBpCEt,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones096,3O6Q2rzJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections012,x6qFnvh0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPlanks031B,6R2tbWN7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections011,li6jGgQZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles009,czlft8ko,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nBark009,9wxSFU3Y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks025B,FjhVG9cu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSnow003,7h6K3Mib,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel002,nyQ1hq09,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChipboard001,RTG4rdUk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade007,qQn0iGJ7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones030,InMtu3Af,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament012,ulHAdsme,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks024L,hQ0n4uVi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround019,s9XJZlPE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor029,YvP4FuCf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet010,c1ZTbIhA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks021,AuKFt6oj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks011,CyXiT2Pc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade008,893jbDEH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament010,4LFRHqQa,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFence001,FgWX2pTN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks019,aMNTgrmB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoam001,zg3dpTmY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks030C,lRCxrfkS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoliage004,IklY1sn5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGravel004,YHIRADhy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather017,juNSZlJW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks081A,JVMDiN2S,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet004,mA2lcryw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles025,j0VzuGMJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlastic002,YXS3Klxf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nChip003,kifW5xHO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles048,1k5dCNEn,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal018,Ldbi7lz0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWrinklesBrush003,nfbk30ta,1K-JPG|2K-JPG|4K-JPG\nLeafSet020,ulg9Q5mc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks014,7fT9xy1H,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock005,OuxPYlKs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel016,p1qkHB8N,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones015,PWKpj1XQ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles067,YHZMTGws,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalWalkway003,69LlrAGH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nAsphalt001,mYSGT9ey,8K-JPG\nTiles063,19vREWbS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nManholeCover008,W3HY9gFt,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nShells001,AuPail2g,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks017,Bm5yroNK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks027C,06ZlqPE2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel008,XLlYVKWr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks010,pRNSJ6bw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFacade019B,ZdF5OC97,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSolarPanel004,PbeOhnIt,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet005,B9v0O6bM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel017,6VQ4whHI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPlanks026C,hwcupnIl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade012,azS6OdQh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks005,OyjXmnIk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete005,hwg8IF5r,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock008,m5T8qzCY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFingerprints001,2ACwjryh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nCandy001,gpx1fTJd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFootsteps001,U1jMpbyY,12K-JPG|12K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel004,Hl6x8YW3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather006,34JISFVe,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nSurfaceImperfections009,UHeJT9Lx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGround012,CLaQ3MF4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks009,XjZqI25H,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles021,bL1Pyeca,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks081C,yq59Kmt2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoofingTiles005,fLnjB6J3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade015,2BeGksg3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChainmail003,0pcVgEJG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTactilePaving001,zPXUdmrx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRope003,y2IWB76u,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles006,VNr5Jn0t,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFacade010,rnlHfmOY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFence002,WLeBQP2R,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLava002,XbkjmHO8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChipboard002,G7oQkpn4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBark010,crFh3dRZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel001,mT9Na3xt,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones016,ZtHgfw3s,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric011,qcFe3dOD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones031,93TQMSZf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock006,R2vczW1I,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament006,SZmqckfd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSponge002,Zlu9zJP3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather036A,PSNzxywe,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones039,G1rHsQ6V,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones018,VOoyziG9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks073B,H1pJaLBG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCarpet007,rqt74c3g,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeather019,Cl8mYPhx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCorrugatedSteel003,KNnd3y4G,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks001,tQdqHVel,8K-JPG\nPavingStones027,BJ1HXDxS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections002,WU3G2Ay9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nDiamondPlate004,wWCGNkaI,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles064,DhmgHVTw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRust002,so7uSLT4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt002,wzSBJMoH,8K-JPG\nFingerprints005,UaqInKjG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScatteredLeaves004,QPuRTFjJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt012,KBZIdFew,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nLeaking004,A9vDyVEx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks018,K1qrhkNg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks013,U6bHDosg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedMetal005,h39G5mWp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nFabric010,R0O5ydKq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBricks010,rG8M49Ua,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeaking011C,lzjk62bo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaintedPlaster005,c0sz32wd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScatteredLeaves003,UEnrB2JK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor013,JiPSW493,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric013,w3HJEk2u,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nConcrete001,1W2wQvDp,2K-JPG\nLeafSet016,5dkRUZH4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodSiding004,lVi8J9ba,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones043,Yl3JT7Pp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChainmail002,TfXMGbti,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoliage005,ltCLEPe3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles018,kycS2mr7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoodCrossSectionSet002,T0Z5KQpo,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones024,S8IvlprD,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric015,hgTQl1mK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoam002,3nLb5dBa,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChip007,ga2molQb,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nDiamondPlate002,jpXRLEd1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nSign009,XGYBkSZc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones010,bp3oTDfE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks003,WibOTvF3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines008,4u3rGURj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTreeEnd002,20ARvFo6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nBark005,gOErvs5J,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines003,K51qrtvV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround018,UoSmNMyw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade020C,FSRBpmu1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks014,m49lXwu1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament008,FMBV4DK7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPavingStones005,eO5HnUIG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nIce001,1MwUzPcC,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPaintedWood002,WLaxt20w,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeaking006,7h5uVoMd,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines013,XpoG7d5M,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones007,wd9etrZk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks013,Wg4aGjMP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt008,7RW2HLDK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBackdrop001,9dh8qcog,16K-JPG|16K-PNG|32K-JPG|32K-PNG|8K-JPG|8K-PNG\nPavingStones011,SuDtn2yq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet012,rdv23NgE,12K-JPG|12K-PNG|16K-JPG|16K-PNG|1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFabric014,zr1fwZy9,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChewingGum001,7MsQ5nZJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones021,5sZvoSAc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround016,mjIgozDJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBackdrop004,rd05s14v,12K-JPG|12K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines010,d7KVPRG4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines014,wHDEBMdV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt006,DHiGh1JF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFence004,nxbF8G7q,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles016,rEd8Wnx1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade003,0gSWnJ5c,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nMetalWalkway007,jvMAPJD0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGround014,2FmfPYvs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nManholeCover005,2J6YkARO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones019,sbF7PRyz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones022,zAtBkWRr,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines009,l2PbXGjZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFacade019C,FofaIGEu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround017,DHVLJby0,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nShellSet001,oz0anGuV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet002,7EzHFnoN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles019,hMGHjbuw,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles005,9ydSAirm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGround010,4coR5TYN,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround007,TJvjkYNW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles023,t9CLq53e,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet011,i28DY7OA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nLeafSet009,LYAsWiRc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRocks020,rpW9FG47,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScatteredLeaves002,OTte7vah,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoodCrossSectionSet001,ZbUC6gpO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones003,O8Wespjb,4K-JPG\nLeaf003,sQrVnTIv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nSign007,Wqvn6f4L,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign003,VXAfSFLi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodChips001,g3EMXvqP,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel007,4g7HncfW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChewingGum002,JP5rmB0Q,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScatteredLeaves005,RlVYwNAv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTiles004,6RCDYdOS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nWrinklesBrush002,5x2r1sv0,1K-JPG|2K-JPG|4K-JPG\nPavingStones013,qlDe3Vkm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines015,xpsXKAoF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalWalkway001,j1FXoL76,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGround009,nEqag1BR,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround002,W8t7Fd6x,8K-JPG\nSurfaceImperfections010,2vg8NIZM,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScratches002,IjCyU4p7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nBricks004,k03QcVDq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament007,QHs6rAhp,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeaking005,OaHAJMvG,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nAsphalt005,OUFtcGTv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament005,h4v27xi6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones009,dwyAFIRz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFingerprints004,dwhxl8Cq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nLeaking010B,gtdW9ziQ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround011,rOViqp6k,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet008,RBimQf2k,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nScratches001,zFrhKNPY,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nAsphalt004,SQgFLXv7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines012,2qpo5idJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFence005,LkbOorwZ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign002,XISbjmif,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines006,iSReWgIV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines018,MeC0LyTS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones008,oTWOgN70,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nSmear007,pCfHUSOK,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nLeaking001,EysAnbPO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSmear005,TqhLm5fa,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGrate001,0ZARsGMz,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones012,Z7O8bgpF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nManholeCover003,FsZYkftS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nBackdrop002,neoh983g,16K-JPG|16K-PNG|24K-JPG|24K-PNG|8K-JPG|8K-PNG\nLeaking002,owC8GlyA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign021,rNZEUmbS,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFlowerSet001,7mbYIOAy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGravel006,eXBM9jq8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel001,pxsvHFj7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPavingStones023,w9BYUpPm,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet007,Rfsim4d1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones020,LO78Qjzh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRust001,SLNv3G8a,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalWalkway002,leJRqyxV,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTiles003,YzomaF8b,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nManholeCover006,LA81IkO4,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWoodFloor002,XYtGO6UV,12K-JPG\nSign004,Uxzolca3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet006,PibAzYrU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines011,Rqr5Lsow,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones014,SlYMTacj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGravel005,DLrS23wU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nFoodCrossSectionSet003,Z1Qi856Y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nSign023,1KmERfQ2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround006,X1lGdUNb,8K-JPG\nSurfaceImperfections006,TZc9Ca1N,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament004,T8VKX91Y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament009,7Z6TQvPA,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nLeaking003,jogm2i0k,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nWrinklesBrush001,4tkm0g2r,1K-JPG|2K-JPG|4K-JPG\nFacade004,R6DfrowU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nManholeCover002,7jIqYHsf,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nManholeCover004,4jb5T1r6,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSmear002,zMTARKP7,1K-JPG|2K-JPG|4K-JPG|8K-JPG\nSign022,uVZRqpnc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign008,dtjOz2Vk,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign025,adwJ3HKs,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPavingStones004,q23mVXoS,8K-JPG\nCandy003,cT93XbUi,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGravel003,NJvw25S1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nCandy002,TUvdpHzh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet003,AVTCcHe1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGrate002,UCKuBYkW,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRock001,CMFa7DrJ,4K-JPG\nPavingEdge001,l3hjFcdU,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalWalkway004,0Yamnk7w,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nTape002,ZRthYSwL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nLeafSet001,bjepCPSF,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines016,yJ1fupeq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign018,Q0FuUHcv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign005,mo7FsHxy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nRoadLines017,wkP2rbAl,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalWalkway009,R2iqNFg1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGravel002,n92eZAMy,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nManholeCover001,aD0TQRmx,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nMetalWalkway008,SWEPoMqc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nRoadLines004,gKO7FnY2,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament001,kfbQcTB7,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSmear006,lVhBHzEv,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections005,TNlAsy6Y,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPainting001,7G219nVg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign026,6bdSLxo5,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTape006,FLegHpAJ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nMetalWalkway005,KqBHjyeQ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nSign017,rNg9nzoc,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign006,LRiUQNgH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSurfaceImperfections004,AhvHwsux,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign016,XjgbonaH,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign011,IcTGAVOh,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign014,vSLQbKt3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTape003,OiXB9Ts3,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nChristmasTreeOrnament003,EvnoN8Fj,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround008,4byC7Ieo,8K-JPG\nTreeEnd001,9wga48K7,4K-JPG\nChristmasTreeOrnament002,zAVHtsZq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPineNeedles001,aTAkPZ8V,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nTape004,9FtEh4UL,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign020,pVyMwDsB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign010,hYcoI051,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign015,2tgvKP1w,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nGround004,1TWouREP,8K-JPG\nSign012,KfF7vGPO,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign013,RaXqYdHg,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSign019,kfOyeUC8,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSmear004,PLoNI7Zc,1K-JPG|2K-JPG|4K-JPG|8K-JPG\nSign024,iKcjpl8a,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaymentCard003,MRzJmkx1,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nPaymentCard002,fmOnGwkQ,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nBackdrop003,fhyaksql,16K-JPG|16K-PNG|24K-JPG|24K-PNG|8K-JPG|8K-PNG\nTape005,Is53ZyQE,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nPaymentCard001,xbjBwimu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nGround005,8ijY5nKu,8K-JPG\nSign001,xVRAQeYq,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nWrinklesBrush004,zq8sbugx,2K-JPG|4K-JPG\nLeaf002,KPopmvBt,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG\nSmear001,ptSQLbuV,1K-JPG|2K-JPG|4K-JPG|8K-JPG\nSmear003,1gHA7Sro,1K-JPG|2K-JPG|4K-JPG\nRoadLines005,eFmVTavu,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nSticker001,16SRTZCp,8K-JPG\nRoadLines002,2bjyoYEB,8K-JPG\nRoadLines001,yIRYeAFB,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\nColdCutsSet001,hY3ye2Ui,1K-JPG|1K-PNG|2K-JPG|2K-PNG|4K-JPG|4K-PNG|8K-JPG|8K-PNG\n");(new class extends kr{constructor(e){super(e),this.type=1009}parse(e){const t=function(e,t){switch(e){case 1:console.error("THREE.RGBELoader Read Error: "+(t||""));break;case 2:console.error("THREE.RGBELoader Write Error: "+(t||""));break;case 3:console.error("THREE.RGBELoader Bad File Format: "+(t||""));break;default:case 4:console.error("THREE.RGBELoader: Error: "+(t||""))}return-1},n=function(e,t,n){t=t||1024;let i=e.pos,r=-1,a=0,o="",s=String.fromCharCode.apply(null,new Uint16Array(e.subarray(i,i+128)));for(;0>(r=s.indexOf("\n"))&&a<t&&i<e.byteLength;)o+=s,a+=s.length,i+=128,s+=String.fromCharCode.apply(null,new Uint16Array(e.subarray(i,i+128)));return-1<r&&(!1!==n&&(e.pos+=a+r+1),o+s.slice(0,r))},i=function(e,t,n,i){const r=e[t+3],a=Math.pow(2,r-128)/255;n[i+0]=e[t+0]*a,n[i+1]=e[t+1]*a,n[i+2]=e[t+2]*a},r=function(e,t,n,i){const r=e[t+3],a=Math.pow(2,r-128)/255;n[i+0]=Yr.toHalfFloat(e[t+0]*a),n[i+1]=Yr.toHalfFloat(e[t+1]*a),n[i+2]=Yr.toHalfFloat(e[t+2]*a)},a=new Uint8Array(e);a.pos=0;const o=function(e){const i=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,r=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,a=/^\s*FORMAT=(\S+)\s*$/,o=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,s={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let P,G;if(e.pos>=e.byteLength||!(P=n(e)))return t(1,"no header found");if(!(G=P.match(/^#\?(\S+)/)))return t(3,"bad initial token");for(s.valid|=1,s.programtype=G[1],s.string+=P+"\n";P=n(e),!1!==P;)if(s.string+=P+"\n","#"!==P.charAt(0)){if((G=P.match(i))&&(s.gamma=parseFloat(G[1],10)),(G=P.match(r))&&(s.exposure=parseFloat(G[1],10)),(G=P.match(a))&&(s.valid|=2,s.format=G[1]),(G=P.match(o))&&(s.valid|=4,s.height=parseInt(G[1],10),s.width=parseInt(G[2],10)),2&s.valid&&4&s.valid)break}else s.comments+=P+"\n";return 2&s.valid?4&s.valid?s:t(3,"missing image size specifier"):t(3,"missing format specifier")}(a);if(-1!==o){const e=o.width,n=o.height,s=function(e,n,i){const r=n;if(r<8||r>32767||2!==e[0]||2!==e[1]||128&e[2])return new Uint8Array(e);if(r!==(e[2]<<8|e[3]))return t(3,"wrong scanline width");const a=new Uint8Array(4*n*i);if(!a.length)return t(4,"unable to allocate buffer space");let o=0,s=0;const P=4*r,G=new Uint8Array(4),K=new Uint8Array(P);let l=i;for(;l>0&&s<e.byteLength;){if(s+4>e.byteLength)return t(1);if(G[0]=e[s++],G[1]=e[s++],G[2]=e[s++],G[3]=e[s++],2!=G[0]||2!=G[1]||(G[2]<<8|G[3])!=r)return t(3,"bad rgbe scanline format");let n,i=0;for(;i<P&&s<e.byteLength;){n=e[s++];const r=n>128;if(r&&(n-=128),0===n||i+n>P)return t(3,"bad scanline data");if(r){const t=e[s++];for(let e=0;e<n;e++)K[i++]=t}else K.set(e.subarray(s,s+n),i),i+=n,s+=n}const c=r;for(let e=0;e<c;e++){let t=0;a[o]=K[e+t],t+=r,a[o+1]=K[e+t],t+=r,a[o+2]=K[e+t],t+=r,a[o+3]=K[e+t],o+=4}l--}return a}(a.subarray(a.pos),e,n);if(-1!==s){let t,a,P,G;switch(this.type){case 1009:t=s,a=1023,P=1009;break;case 1015:G=s.length/4*3;const e=new Float32Array(G);for(let t=0;t<G;t++)i(s,4*t,e,3*t);t=e,a=1022,P=1015;break;case 1016:G=s.length/4*3;const n=new Uint16Array(G);for(let e=0;e<G;e++)r(s,4*e,n,3*e);t=n,a=1022,P=1016;break;default:console.error("THREE.RGBELoader: unsupported type: ",this.type)}return{width:e,height:n,data:t,header:o.string,gamma:o.gamma,exposure:o.exposure,format:a,type:P}}}return null}setDataType(e){return this.type=e,this}load(e,t,n,i){return super.load(e,(function(e,n){switch(e.type){case 1009:e.encoding=3002,e.minFilter=1003,e.magFilter=1003,e.generateMipmaps=!1,e.flipY=!0;break;case 1015:case 1016:e.encoding=3e3,e.minFilter=1006,e.magFilter=1006,e.generateMipmaps=!1,e.flipY=!0}t&&t(e,n)}),n,i)}}).load("https://hdrhaven-proxy-1.repalash.workers.dev/file/ph-assets/HDRIs/hdr/1k/photo_studio_01_1k.hdr",(function(e){var t=Ua.fromEquirectangular(e);za.environment=t.texture,Ua.dispose()}));var Va,Qa=new Vr(16777215,.1);function ja(){var e=window.innerWidth,t=window.innerHeight,n=window.innerWidth/window.innerHeight;ka.aspect=n,ka.updateProjectionMatrix(),Ba.setSize(e,t)}function qa(e){return'<a style="color: #444444" target="_blank" rel="noopener" href=\'https://cc0textures.com/view?id='+e+"'>"+e+"</a>"}za.add(Qa),function(){var e=document.createElement("div");document.body.appendChild(e),(new Ca).load("ninjaHead_Low.obj",(function(e){var t=(Va=e.children[0]).geometry;t.attributes.uv2=t.attributes.uv,t.center(),Va.scale.multiplyScalar(25),za.add(Va)})),window.addEventListener("resize",ja)}(),function e(){requestAnimationFrame(e),Ba.render(za,ka)}(),function(e,n,i,r){var a=document.createElement("div");n.appendChild(a),a.style.display="flex",a.style.flexDirection="row",a.style.flexWrap="wrap",a.style.justifyContent="space-between",a.style.alignItems="flex-start",a.style.alignContent="flex-start";var o=function(e,t){for(;a.firstChild;)a.removeChild(a.firstChild);for(var n=0,o=i(e,"element");n<o.length;n++){var s=o[n],P=r(s);a.appendChild(P)}};t({input:e,emptyMsg:"",minLength:1,showOnFocus:!0,preventSubmit:!0,fetch:function(t,n,r){n(i(t,"tag")),o(e.value)},onSelect:function(t,n){e.value=t.label,o(e.value)},render:function(e,t){var n=document.createElement("div");return n.textContent=e.label,n.classList.add("autocompleteItem"),n},customize:function(e,t,n,i){n.classList.add("autocompleteContainer"),console.log(n)}}),o(e.value)}(document.getElementById("inputText"),document.getElementById("gridContainer"),(function(e,t){var n=[];if("tag"===t){var i=new Set;n=Wa.findMaterials(e).map((function(e){return{label:e.name.replace(/[0-9]/g,"")}})).filter((function(e){return!i.has(e.label)&&(i.add(e.label),!0)}))}else n=Wa.findMaterials(e).slice(0,100).map((function(e){return{label:e.name,img:Wa.getPreviewLink(e.name)}}));return n}),(function(e){var t=document.createElement("div"),n=document.createElement("img");return t.classList.add("gridItem"),n.src=e.img,n.alt=e.label,n.style.width="100%",n.style.height="100%",n.onclick=function(t){var n;Fa.innerHTML="Loading Material: "+qa(e.label),n=e.label,Wa.findAndLoad(n,!0,(function(e){if(e){if(Va.material){var t=Va.material.userData.textures;null==t||t.forEach((function(e){return null==e?void 0:e.dispose()})),Va.material.dispose()}Va.material=new Lr(e),Va.material.userData.textures=Array.from(Object.values(e).filter((function(e){return e.isTexture}))),Fa.innerHTML="Material Loaded: "+qa(n)}}))},t.appendChild(n),t}));var Xa={},Ya=Uint8Array,Za=Uint16Array,$a=Uint32Array,eo=new Ya([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),to=new Ya([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),no=new Ya([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),io=function(e,t){for(var n=new Za(31),i=0;i<31;++i)n[i]=t+=1<<e[i-1];var r=new $a(n[30]);for(i=1;i<30;++i)for(var a=n[i];a<n[i+1];++a)r[a]=a-n[i]<<5|i;return[n,r]},ro=io(eo,2),ao=ro[0],oo=ro[1];ao[28]=258,oo[258]=28;for(var so=io(to,0),Po=so[0],Go=so[1],Ko=new Za(32768),lo=0;lo<32768;++lo){var co=(43690&lo)>>>1|(21845&lo)<<1;co=(61680&(co=(52428&co)>>>2|(13107&co)<<2))>>>4|(3855&co)<<4,Ko[lo]=((65280&co)>>>8|(255&co)<<8)>>>1}var ho=function(e,t,n){for(var i=e.length,r=0,a=new Za(t);r<i;++r)++a[e[r]-1];var o,s=new Za(t);for(r=0;r<t;++r)s[r]=s[r-1]+a[r-1]<<1;if(n){o=new Za(1<<t);var P=15-t;for(r=0;r<i;++r)if(e[r])for(var G=r<<4|e[r],K=t-e[r],l=s[e[r]-1]++<<K,c=l|(1<<K)-1;l<=c;++l)o[Ko[l]>>>P]=G}else for(o=new Za(i),r=0;r<i;++r)e[r]&&(o[r]=Ko[s[e[r]-1]++]>>>15-e[r]);return o},uo=new Ya(288);for(lo=0;lo<144;++lo)uo[lo]=8;for(lo=144;lo<256;++lo)uo[lo]=9;for(lo=256;lo<280;++lo)uo[lo]=7;for(lo=280;lo<288;++lo)uo[lo]=8;var No=new Ya(32);for(lo=0;lo<32;++lo)No[lo]=5;var po=ho(uo,9,0),Jo=ho(uo,9,1),fo=ho(No,5,0),mo=ho(No,5,1),go=function(e){for(var t=e[0],n=1;n<e.length;++n)e[n]>t&&(t=e[n]);return t},vo=function(e,t,n){var i=t/8|0;return(e[i]|e[i+1]<<8)>>(7&t)&n},xo=function(e,t){var n=t/8|0;return(e[n]|e[n+1]<<8|e[n+2]<<16)>>(7&t)},yo=function(e){return(e/8|0)+(7&e&&1)},_o=function(e,t,n){(null==t||t<0)&&(t=0),(null==n||n>e.length)&&(n=e.length);var i=new(e instanceof Za?Za:e instanceof $a?$a:Ya)(n-t);return i.set(e.subarray(t,n)),i},bo=function(e,t,n){var i=e.length;if(!i||n&&!n.l&&i<5)return t||new Ya(0);var r=!t||n,a=!n||n.i;n||(n={}),t||(t=new Ya(3*i));var o=function(e){var n=t.length;if(e>n){var i=new Ya(Math.max(2*n,e));i.set(t),t=i}},s=n.f||0,P=n.p||0,G=n.b||0,K=n.l,l=n.d,c=n.m,h=n.n,u=8*i;do{if(!K){n.f=s=vo(e,P,1);var d=vo(e,P+1,3);if(P+=3,!d){var N=e[(w=yo(P)+4)-4]|e[w-3]<<8,p=w+N;if(p>i){if(a)throw"unexpected EOF";break}r&&o(G+N),t.set(e.subarray(w,p),G),n.b=G+=N,n.p=P=8*p;continue}if(1==d)K=Jo,l=mo,c=9,h=5;else{if(2!=d)throw"invalid block type";var J=vo(e,P,31)+257,f=vo(e,P+10,15)+4,m=J+vo(e,P+5,31)+1;P+=14;for(var g=new Ya(m),v=new Ya(19),x=0;x<f;++x)v[no[x]]=vo(e,P+3*x,7);P+=3*f;var y=go(v),_=(1<<y)-1,b=ho(v,y,1);for(x=0;x<m;){var w,M=b[vo(e,P,_)];if(P+=15&M,(w=M>>>4)<16)g[x++]=w;else{var S=0,T=0;for(16==w?(T=3+vo(e,P,3),P+=2,S=g[x-1]):17==w?(T=3+vo(e,P,7),P+=3):18==w&&(T=11+vo(e,P,127),P+=7);T--;)g[x++]=S}}var E=g.subarray(0,J),L=g.subarray(J);c=go(E),h=go(L),K=ho(E,c,1),l=ho(L,h,1)}if(P>u){if(a)throw"unexpected EOF";break}}r&&o(G+131072);for(var A=(1<<c)-1,R=(1<<h)-1,C=P;;C=P){var D=(S=K[xo(e,P)&A])>>>4;if((P+=15&S)>u){if(a)throw"unexpected EOF";break}if(!S)throw"invalid length/literal";if(D<256)t[G++]=D;else{if(256==D){C=P,K=null;break}var F=D-254;if(D>264){var H=eo[x=D-257];F=vo(e,P,(1<<H)-1)+ao[x],P+=H}var B=l[xo(e,P)&R],z=B>>>4;if(!B)throw"invalid distance";P+=15&B;L=Po[z];if(z>3){H=to[z];L+=xo(e,P)&(1<<H)-1,P+=H}if(P>u){if(a)throw"unexpected EOF";break}r&&o(G+131072);for(var I=G+F;G<I;G+=4)t[G]=t[G-L],t[G+1]=t[G+1-L],t[G+2]=t[G+2-L],t[G+3]=t[G+3-L];G=I}}n.l=K,n.p=C,n.b=G,K&&(s=1,n.m=c,n.d=l,n.n=h)}while(!s);return G==t.length?t:_o(t,0,G)},wo=function(e,t,n){n<<=7&t;var i=t/8|0;e[i]|=n,e[i+1]|=n>>>8},Mo=function(e,t,n){n<<=7&t;var i=t/8|0;e[i]|=n,e[i+1]|=n>>>8,e[i+2]|=n>>>16},So=function(e,t){for(var n=[],i=0;i<e.length;++i)e[i]&&n.push({s:i,f:e[i]});var r=n.length,a=n.slice();if(!r)return[Do,0];if(1==r){var o=new Ya(n[0].s+1);return o[n[0].s]=1,[o,1]}n.sort((function(e,t){return e.f-t.f})),n.push({s:-1,f:25001});var s=n[0],P=n[1],G=0,K=1,l=2;for(n[0]={s:-1,f:s.f+P.f,l:s,r:P};K!=r-1;)s=n[n[G].f<n[l].f?G++:l++],P=n[G!=K&&n[G].f<n[l].f?G++:l++],n[K++]={s:-1,f:s.f+P.f,l:s,r:P};var c=a[0].s;for(i=1;i<r;++i)a[i].s>c&&(c=a[i].s);var h=new Za(c+1),u=To(n[K-1],h,0);if(u>t){i=0;var d=0,N=u-t,p=1<<N;for(a.sort((function(e,t){return h[t.s]-h[e.s]||e.f-t.f}));i<r;++i){var J=a[i].s;if(!(h[J]>t))break;d+=p-(1<<u-h[J]),h[J]=t}for(d>>>=N;d>0;){var f=a[i].s;h[f]<t?d-=1<<t-h[f]++-1:++i}for(;i>=0&&d;--i){var m=a[i].s;h[m]==t&&(--h[m],++d)}u=t}return[new Ya(h),u]},To=function(e,t,n){return-1==e.s?Math.max(To(e.l,t,n+1),To(e.r,t,n+1)):t[e.s]=n},Eo=function(e){for(var t=e.length;t&&!e[--t];);for(var n=new Za(++t),i=0,r=e[0],a=1,o=function(e){n[i++]=e},s=1;s<=t;++s)if(e[s]==r&&s!=t)++a;else{if(!r&&a>2){for(;a>138;a-=138)o(32754);a>2&&(o(a>10?a-11<<5|28690:a-3<<5|12305),a=0)}else if(a>3){for(o(r),--a;a>6;a-=6)o(8304);a>2&&(o(a-3<<5|8208),a=0)}for(;a--;)o(r);a=1,r=e[s]}return[n.subarray(0,i),t]},Lo=function(e,t){for(var n=0,i=0;i<t.length;++i)n+=e[i]*t[i];return n},Ao=function(e,t,n){var i=n.length,r=yo(t+2);e[r]=255&i,e[r+1]=i>>>8,e[r+2]=255^e[r],e[r+3]=255^e[r+1];for(var a=0;a<i;++a)e[r+a+4]=n[a];return 8*(r+4+i)},Ro=function(e,t,n,i,r,a,o,s,P,G,K){wo(t,K++,n),++r[256];for(var l=So(r,15),c=l[0],h=l[1],u=So(a,15),d=u[0],N=u[1],p=Eo(c),J=p[0],f=p[1],m=Eo(d),g=m[0],v=m[1],x=new Za(19),y=0;y<J.length;++y)x[31&J[y]]++;for(y=0;y<g.length;++y)x[31&g[y]]++;for(var _=So(x,7),b=_[0],w=_[1],M=19;M>4&&!b[no[M-1]];--M);var S,T,E,L,A=G+5<<3,R=Lo(r,uo)+Lo(a,No)+o,C=Lo(r,c)+Lo(a,d)+o+14+3*M+Lo(x,b)+(2*x[16]+3*x[17]+7*x[18]);if(A<=R&&A<=C)return Ao(t,K,e.subarray(P,P+G));if(wo(t,K,1+(C<R)),K+=2,C<R){S=ho(c,h,0),T=c,E=ho(d,N,0),L=d;var D=ho(b,w,0);wo(t,K,f-257),wo(t,K+5,v-1),wo(t,K+10,M-4),K+=14;for(y=0;y<M;++y)wo(t,K+3*y,b[no[y]]);K+=3*M;for(var F=[J,g],H=0;H<2;++H){var B=F[H];for(y=0;y<B.length;++y){var z=31&B[y];wo(t,K,D[z]),K+=b[z],z>15&&(wo(t,K,B[y]>>>5&127),K+=B[y]>>>12)}}}else S=po,T=uo,E=fo,L=No;for(y=0;y<s;++y)if(i[y]>255){z=i[y]>>>18&31;Mo(t,K,S[z+257]),K+=T[z+257],z>7&&(wo(t,K,i[y]>>>23&31),K+=eo[z]);var I=31&i[y];Mo(t,K,E[I]),K+=L[I],I>3&&(Mo(t,K,i[y]>>>5&8191),K+=to[I])}else Mo(t,K,S[i[y]]),K+=T[i[y]];return Mo(t,K,S[256]),K+T[256]},Co=new $a([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),Do=new Ya(0),Fo=function(e,t,n,i,r,a){var o=e.length,s=new Ya(i+o+5*(1+Math.ceil(o/7e3))+r),P=s.subarray(i,s.length-r),G=0;if(!t||o<8)for(var K=0;K<=o;K+=65535){var l=K+65535;l<o?G=Ao(P,G,e.subarray(K,l)):(P[K]=a,G=Ao(P,G,e.subarray(K,o)))}else{for(var c=Co[t-1],h=c>>>13,u=8191&c,d=(1<<n)-1,N=new Za(32768),p=new Za(d+1),J=Math.ceil(n/3),f=2*J,m=function(t){return(e[t]^e[t+1]<<J^e[t+2]<<f)&d},g=new $a(25e3),v=new Za(288),x=new Za(32),y=0,_=0,b=(K=0,0),w=0,M=0;K<o;++K){var S=m(K),T=32767&K,E=p[S];if(N[T]=E,p[S]=T,w<=K){var L=o-K;if((y>7e3||b>24576)&&L>423){G=Ro(e,P,0,g,v,x,_,b,M,K-M,G),b=y=_=0,M=K;for(var A=0;A<286;++A)v[A]=0;for(A=0;A<30;++A)x[A]=0}var R=2,C=0,D=u,F=T-E&32767;if(L>2&&S==m(K-F))for(var H=Math.min(h,L)-1,B=Math.min(32767,K),z=Math.min(258,L);F<=B&&--D&&T!=E;){if(e[K+R]==e[K+R-F]){for(var I=0;I<z&&e[K+I]==e[K+I-F];++I);if(I>R){if(R=I,C=F,I>H)break;var k=Math.min(F,I-2),O=0;for(A=0;A<k;++A){var U=K-F+A+32768&32767,W=U-N[U]+32768&32767;W>O&&(O=W,E=U)}}}F+=(T=E)-(E=N[T])+32768&32767}if(C){g[b++]=268435456|oo[R]<<18|Go[C];var V=31&oo[R],Q=31&Go[C];_+=eo[V]+to[Q],++v[257+V],++x[Q],w=K+R,++y}else g[b++]=e[K],++v[e[K]]}}G=Ro(e,P,a,g,v,x,_,b,M,K-M,G),!a&&7&G&&(G=Ao(P,G+1,Do))}return _o(s,0,i+yo(G)+r)},Ho=function(){for(var e=new Int32Array(256),t=0;t<256;++t){for(var n=t,i=9;--i;)n=(1&n&&-306674912)^n>>>1;e[t]=n}return e}(),Bo=function(){var e=-1;return{p:function(t){for(var n=e,i=0;i<t.length;++i)n=Ho[255&n^t[i]]^n>>>8;e=n},d:function(){return~e}}},zo=function(){var e=1,t=0;return{p:function(n){for(var i=e,r=t,a=n.length,o=0;o!=a;){for(var s=Math.min(o+2655,a);o<s;++o)r+=i+=n[o];i=(65535&i)+15*(i>>16),r=(65535&r)+15*(r>>16)}e=i,t=r},d:function(){return(255&(e%=65521))<<24|e>>>8<<16|(255&(t%=65521))<<8|t>>>8}}},Io=function(e,t,n,i,r){return Fo(e,null==t.level?6:t.level,null==t.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(e.length)))):12+t.mem,n,i,!r)},ko=function(e,t){var n={};for(var i in e)n[i]=e[i];for(var i in t)n[i]=t[i];return n},Oo=function(e,t,n){for(var i=e(),r=e.toString(),a=r.slice(r.indexOf("[")+1,r.lastIndexOf("]")).replace(/ /g,"").split(","),o=0;o<i.length;++o){var s=i[o],P=a[o];if("function"==typeof s){t+=";"+P+"=";var G=s.toString();if(s.prototype)if(-1!=G.indexOf("[native code]")){var K=G.indexOf(" ",8)+1;t+=G.slice(K,G.indexOf("(",K))}else for(var l in t+=G,s.prototype)t+=";"+P+".prototype."+l+"="+s.prototype[l].toString();else t+=G}else n[P]=s}return[t,n]},Uo=[],Wo=function(e,t,n,i){var r;if(!Uo[n]){for(var a="",o={},s=e.length-1,P=0;P<s;++P)a=(r=Oo(e[P],a,o))[0],o=r[1];Uo[n]=Oo(e[s],a,o)}var G=ko({},Uo[n][1]);return function(e,t,n,i,r){var a=new Worker(Xa[t]||(Xa[t]=URL.createObjectURL(new Blob([e],{type:"text/javascript"}))));return a.onerror=function(e){return r(e.error,null)},a.onmessage=function(e){return r(null,e.data)},a.postMessage(n,i),a}(Uo[n][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+t.toString()+"}",n,G,function(e){var t=[];for(var n in e)(e[n]instanceof Ya||e[n]instanceof Za||e[n]instanceof $a)&&t.push((e[n]=new e[n].constructor(e[n])).buffer);return t}(G),i)},Vo=function(){return[Ya,Za,$a,eo,to,no,ao,Po,Jo,mo,Ko,ho,go,vo,xo,yo,_o,bo,gs,Zo,$o]},Qo=function(){return[Ya,Za,$a,eo,to,no,oo,Go,po,uo,fo,No,Ko,Co,Do,ho,wo,Mo,So,To,Eo,Lo,Ao,Ro,yo,_o,Fo,Io,ps,Zo]},jo=function(){return[ss,Ks,os,Bo,Ho]},qo=function(){return[Ps,Gs]},Xo=function(){return[ls,os,zo]},Yo=function(){return[cs]},Zo=function(e){return postMessage(e,[e.buffer])},$o=function(e){return e&&e.size&&new Ya(e.size)},es=function(e,t,n,i,r,a){var o=Wo(n,i,r,(function(e,t){o.terminate(),a(e,t)}));return o.postMessage([e,t],t.consume?[e.buffer]:[]),function(){o.terminate()}},ts=function(e){return e.ondata=function(e,t){return postMessage([e,t],[e.buffer])},function(t){return e.push(t.data[0],t.data[1])}},ns=function(e,t,n,i,r){var a,o=Wo(e,i,r,(function(e,n){e?(o.terminate(),t.ondata.call(t,e)):(n[1]&&o.terminate(),t.ondata.call(t,e,n[0],n[1]))}));o.postMessage(n),t.push=function(e,n){if(a)throw"stream finished";if(!t.ondata)throw"no stream handler";o.postMessage([e,a=n],[e.buffer])},t.terminate=function(){o.terminate()}},is=function(e,t){return e[t]|e[t+1]<<8},rs=function(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0},as=function(e,t){return rs(e,t)+4294967296*rs(e,t+4)},os=function(e,t,n){for(;n;++t)e[t]=n,n>>>=8},ss=function(e,t){var n=t.filename;if(e[0]=31,e[1]=139,e[2]=8,e[8]=t.level<2?4:9==t.level?2:0,e[9]=3,0!=t.mtime&&os(e,4,Math.floor(new Date(t.mtime||Date.now())/1e3)),n){e[3]=8;for(var i=0;i<=n.length;++i)e[i+10]=n.charCodeAt(i)}},Ps=function(e){if(31!=e[0]||139!=e[1]||8!=e[2])throw"invalid gzip data";var t=e[3],n=10;4&t&&(n+=e[10]|2+(e[11]<<8));for(var i=(t>>3&1)+(t>>4&1);i>0;i-=!e[n++]);return n+(2&t)},Gs=function(e){var t=e.length;return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0},Ks=function(e){return 10+(e.filename&&e.filename.length+1||0)},ls=function(e,t){var n=t.level,i=0==n?0:n<6?1:9==n?3:2;e[0]=120,e[1]=i<<6|(i?32-2*i:1)},cs=function(e){if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"};function hs(e,t){return t||"function"!=typeof e||(t=e,e={}),this.ondata=t,e}var us=function(){function e(e,t){t||"function"!=typeof e||(t=e,e={}),this.ondata=t,this.o=e||{}}return e.prototype.p=function(e,t){this.ondata(Io(e,this.o,0,0,!t),t)},e.prototype.push=function(e,t){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";this.d=t,this.p(e,t||!1)},e}(),ds=function(){return function(e,t){ns([Qo,function(){return[ts,us]}],this,hs.call(this,e,t),(function(e){var t=new us(e.data);onmessage=ts(t)}),6)}}();function Ns(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return es(e,t,[Qo],(function(e){return Zo(ps(e.data[0],e.data[1]))}),0,n)}function ps(e,t){return Io(e,t||{},0,0)}var Js=function(){function e(e){this.s={},this.p=new Ya(0),this.ondata=e}return e.prototype.e=function(e){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";var t=this.p.length,n=new Ya(t+e.length);n.set(this.p),n.set(e,t),this.p=n},e.prototype.c=function(e){this.d=this.s.i=e||!1;var t=this.s.b,n=bo(this.p,this.o,this.s);this.ondata(_o(n,t,this.s.b),this.d),this.o=_o(n,this.s.b-32768),this.s.b=this.o.length,this.p=_o(this.p,this.s.p/8|0),this.s.p&=7},e.prototype.push=function(e,t){this.e(e),this.c(t)},e}(),fs=function(){return function(e){this.ondata=e,ns([Vo,function(){return[ts,Js]}],this,0,(function(){var e=new Js;onmessage=ts(e)}),7)}}();function ms(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return es(e,t,[Vo],(function(e){return Zo(gs(e.data[0],$o(e.data[1])))}),1,n)}function gs(e,t){return bo(e,t)}var vs=function(){function e(e,t){this.c=Bo(),this.l=0,this.v=1,us.call(this,e,t)}return e.prototype.push=function(e,t){us.prototype.push.call(this,e,t)},e.prototype.p=function(e,t){this.c.p(e),this.l+=e.length;var n=Io(e,this.o,this.v&&Ks(this.o),t&&8,!t);this.v&&(ss(n,this.o),this.v=0),t&&(os(n,n.length-8,this.c.d()),os(n,n.length-4,this.l)),this.ondata(n,t)},e}(),xs=function(){return function(e,t){ns([Qo,jo,function(){return[ts,us,vs]}],this,hs.call(this,e,t),(function(e){var t=new vs(e.data);onmessage=ts(t)}),8)}}();function ys(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return es(e,t,[Qo,jo,function(){return[_s]}],(function(e){return Zo(_s(e.data[0],e.data[1]))}),2,n)}function _s(e,t){t||(t={});var n=Bo(),i=e.length;n.p(e);var r=Io(e,t,Ks(t),8),a=r.length;return ss(r,t),os(r,a-8,n.d()),os(r,a-4,i),r}var bs=function(){function e(e){this.v=1,Js.call(this,e)}return e.prototype.push=function(e,t){if(Js.prototype.e.call(this,e),this.v){var n=this.p.length>3?Ps(this.p):4;if(n>=this.p.length&&!t)return;this.p=this.p.subarray(n),this.v=0}if(t){if(this.p.length<8)throw"invalid gzip stream";this.p=this.p.subarray(0,-8)}Js.prototype.c.call(this,t)},e}(),ws=function(){return function(e){this.ondata=e,ns([Vo,qo,function(){return[ts,Js,bs]}],this,0,(function(){var e=new bs;onmessage=ts(e)}),9)}}();function Ms(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return es(e,t,[Vo,qo,function(){return[Ss]}],(function(e){return Zo(Ss(e.data[0]))}),3,n)}function Ss(e,t){return bo(e.subarray(Ps(e),-8),t||new Ya(Gs(e)))}var Ts=function(){function e(e,t){this.c=zo(),this.v=1,us.call(this,e,t)}return e.prototype.push=function(e,t){us.prototype.push.call(this,e,t)},e.prototype.p=function(e,t){this.c.p(e);var n=Io(e,this.o,this.v&&2,t&&4,!t);this.v&&(ls(n,this.o),this.v=0),t&&os(n,n.length-4,this.c.d()),this.ondata(n,t)},e}(),Es=function(){return function(e,t){ns([Qo,Xo,function(){return[ts,us,Ts]}],this,hs.call(this,e,t),(function(e){var t=new Ts(e.data);onmessage=ts(t)}),10)}}();function Ls(e,t){t||(t={});var n=zo();n.p(e);var i=Io(e,t,2,4);return ls(i,t),os(i,i.length-4,n.d()),i}var As=function(){function e(e){this.v=1,Js.call(this,e)}return e.prototype.push=function(e,t){if(Js.prototype.e.call(this,e),this.v){if(this.p.length<2&&!t)return;this.p=this.p.subarray(2),this.v=0}if(t){if(this.p.length<4)throw"invalid zlib stream";this.p=this.p.subarray(0,-4)}Js.prototype.c.call(this,t)},e}(),Rs=function(){return function(e){this.ondata=e,ns([Vo,Yo,function(){return[ts,Js,As]}],this,0,(function(){var e=new As;onmessage=ts(e)}),11)}}();function Cs(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return es(e,t,[Vo,Yo,function(){return[Ds]}],(function(e){return Zo(Ds(e.data[0],$o(e.data[1])))}),5,n)}function Ds(e,t){return bo((cs(e),e.subarray(2,-4)),t)}var Fs=function(){function e(e){this.G=bs,this.I=Js,this.Z=As,this.ondata=e}return e.prototype.push=function(e,t){if(!this.ondata)throw"no stream handler";if(this.s)this.s.push(e,t);else{if(this.p&&this.p.length){var n=new Ya(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length)}else this.p=e;if(this.p.length>2){var i=this,r=function(){i.ondata.apply(i,arguments)};this.s=31==this.p[0]&&139==this.p[1]&&8==this.p[2]?new this.G(r):8!=(15&this.p[0])||this.p[0]>>4>7||(this.p[0]<<8|this.p[1])%31?new this.I(r):new this.Z(r),this.s.push(this.p,t),this.p=null}}},e}(),Hs=function(){function e(e){this.G=ws,this.I=fs,this.Z=Rs,this.ondata=e}return e.prototype.push=function(e,t){Fs.prototype.push.call(this,e,t)},e}();var Bs=function(e,t,n,i){for(var r in e){var a=e[r],o=t+r;a instanceof Ya?n[o]=[a,i]:Array.isArray(a)?n[o]=[a[0],ko(i,a[1])]:Bs(a,o+"/",n,i)}},zs="undefined"!=typeof TextEncoder&&new TextEncoder,Is="undefined"!=typeof TextDecoder&&new TextDecoder,ks=0;try{Is.decode(Do,{stream:!0}),ks=1}catch(e){}var Os=function(e){for(var t="",n=0;;){var i=e[n++],r=(i>127)+(i>223)+(i>239);if(n+r>e.length)return[t,_o(e,n-1)];r?3==r?(i=((15&i)<<18|(63&e[n++])<<12|(63&e[n++])<<6|63&e[n++])-65536,t+=String.fromCharCode(55296|i>>10,56320|1023&i)):t+=1&r?String.fromCharCode((31&i)<<6|63&e[n++]):String.fromCharCode((15&i)<<12|(63&e[n++])<<6|63&e[n++]):t+=String.fromCharCode(i)}},Us=function(){function e(e){this.ondata=e,ks?this.t=new TextDecoder:this.p=Do}return e.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(t=!!t,this.t){if(this.ondata(this.t.decode(e,{stream:!0}),t),t){if(this.t.decode().length)throw"invalid utf-8 data";this.t=null}}else{if(!this.p)throw"stream finished";var n=new Ya(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length);var i=Os(n),r=i[0],a=i[1];if(t){if(a.length)throw"invalid utf-8 data";this.p=null}else this.p=a;this.ondata(r,t)}},e}(),Ws=function(){function e(e){this.ondata=e}return e.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(this.d)throw"stream finished";this.ondata(Vs(e),this.d=t||!1)},e}();function Vs(e,t){if(t){for(var n=new Ya(e.length),i=0;i<e.length;++i)n[i]=e.charCodeAt(i);return n}if(zs)return zs.encode(e);var r=e.length,a=new Ya(e.length+(e.length>>1)),o=0,s=function(e){a[o++]=e};for(i=0;i<r;++i){if(o+5>a.length){var P=new Ya(o+8+(r-i<<1));P.set(a),a=P}var G=e.charCodeAt(i);G<128||t?s(G):G<2048?(s(192|G>>6),s(128|63&G)):G>55295&&G<57344?(s(240|(G=65536+(1047552&G)|1023&e.charCodeAt(++i))>>18),s(128|G>>12&63),s(128|G>>6&63),s(128|63&G)):(s(224|G>>12),s(128|G>>6&63),s(128|63&G))}return _o(a,0,o)}function Qs(e,t){if(t){for(var n="",i=0;i<e.length;i+=16384)n+=String.fromCharCode.apply(null,e.subarray(i,i+16384));return n}if(Is)return Is.decode(e);var r=Os(e),a=r[0];if(r[1].length)throw"invalid utf-8 data";return a}var js=function(e){return 1==e?3:e<6?2:9==e?1:0},qs=function(e,t){return t+30+is(e,t+26)+is(e,t+28)},Xs=function(e,t,n){var i=is(e,t+28),r=Qs(e.subarray(t+46,t+46+i),!(2048&is(e,t+8))),a=t+46+i,o=rs(e,t+20),s=n&&4294967295==o?Ys(e,a):[o,rs(e,t+24),rs(e,t+42)],P=s[0],G=s[1],K=s[2];return[is(e,t+10),P,G,r,a+is(e,t+30)+is(e,t+32),K]},Ys=function(e,t){for(;1!=is(e,t);t+=4+is(e,t+2));return[as(e,t+12),as(e,t+4),as(e,t+20)]},Zs=function(e){var t=0;if(e)for(var n in e){var i=e[n].length;if(i>65535)throw"extra field too long";t+=i+4}return t},$s=function(e,t,n,i,r,a,o,s){var P=i.length,G=n.extra,K=s&&s.length,l=Zs(G);os(e,t,null!=o?33639248:67324752),t+=4,null!=o&&(e[t++]=20,e[t++]=n.os),e[t]=20,t+=2,e[t++]=n.flag<<1|(null==a&&8),e[t++]=r&&8,e[t++]=255&n.compression,e[t++]=n.compression>>8;var c=new Date(null==n.mtime?Date.now():n.mtime),h=c.getFullYear()-1980;if(h<0||h>119)throw"date not in range 1980-2099";if(os(e,t,h<<25|c.getMonth()+1<<21|c.getDate()<<16|c.getHours()<<11|c.getMinutes()<<5|c.getSeconds()>>>1),t+=4,null!=a&&(os(e,t,n.crc),os(e,t+4,a),os(e,t+8,n.size)),os(e,t+12,P),os(e,t+14,l),t+=16,null!=o&&(os(e,t,K),os(e,t+6,n.attrs),os(e,t+10,o),t+=14),e.set(i,t),t+=P,l)for(var u in G){var d=G[u],N=d.length;os(e,t,+u),os(e,t+2,N),e.set(d,t+4),t+=4+N}return K&&(e.set(s,t),t+=K),t},eP=function(e,t,n,i,r){os(e,t,101010256),os(e,t+8,n),os(e,t+10,n),os(e,t+12,i),os(e,t+16,r)},tP=function(){function e(e){this.filename=e,this.c=Bo(),this.size=0,this.compression=0}return e.prototype.process=function(e,t){this.ondata(null,e,t)},e.prototype.push=function(e,t){if(!this.ondata)throw"no callback - add to ZIP archive before pushing";this.c.p(e),this.size+=e.length,t&&(this.crc=this.c.d()),this.process(e,t||!1)},e}(),nP=function(){function e(e,t){var n=this;t||(t={}),tP.call(this,e),this.d=new us(t,(function(e,t){n.ondata(null,e,t)})),this.compression=8,this.flag=js(t.level)}return e.prototype.process=function(e,t){try{this.d.push(e,t)}catch(e){this.ondata(e,null,t)}},e.prototype.push=function(e,t){tP.prototype.push.call(this,e,t)},e}(),iP=function(){function e(e,t){var n=this;t||(t={}),tP.call(this,e),this.d=new ds(t,(function(e,t,i){n.ondata(e,t,i)})),this.compression=8,this.flag=js(t.level),this.terminate=this.d.terminate}return e.prototype.process=function(e,t){this.d.push(e,t)},e.prototype.push=function(e,t){tP.prototype.push.call(this,e,t)},e}(),rP=function(){function e(e){this.ondata=e,this.u=[],this.d=1}return e.prototype.add=function(e){var t=this;if(2&this.d)throw"stream finished";var n=Vs(e.filename),i=n.length,r=e.comment,a=r&&Vs(r),o=i!=e.filename.length||a&&r.length!=a.length,s=i+Zs(e.extra)+30;if(i>65535)throw"filename too long";var P=new Ya(s);$s(P,0,e,n,o);var G=[P],K=function(){for(var e=0,n=G;e<n.length;e++){var i=n[e];t.ondata(null,i,!1)}G=[]},l=this.d;this.d=0;var c=this.u.length,h=ko(e,{f:n,u:o,o:a,t:function(){e.terminate&&e.terminate()},r:function(){if(K(),l){var e=t.u[c+1];e?e.r():t.d=1}l=1}}),u=0;e.ondata=function(n,i,r){if(n)t.ondata(n,i,r),t.terminate();else if(u+=i.length,G.push(i),r){var a=new Ya(16);os(a,0,134695760),os(a,4,e.crc),os(a,8,u),os(a,12,e.size),G.push(a),h.c=u,h.b=s+u+16,h.crc=e.crc,h.size=e.size,l&&h.r(),l=1}else l&&K()},this.u.push(h)},e.prototype.end=function(){var e=this;if(2&this.d){if(1&this.d)throw"stream finishing";throw"stream finished"}this.d?this.e():this.u.push({r:function(){1&e.d&&(e.u.splice(-1,1),e.e())},t:function(){}}),this.d=3},e.prototype.e=function(){for(var e=0,t=0,n=0,i=0,r=this.u;i<r.length;i++){n+=46+(P=r[i]).f.length+Zs(P.extra)+(P.o?P.o.length:0)}for(var a=new Ya(n+22),o=0,s=this.u;o<s.length;o++){var P=s[o];$s(a,e,P,P.f,P.u,P.c,t,P.o),e+=46+P.f.length+Zs(P.extra)+(P.o?P.o.length:0),t+=P.b}eP(a,e,this.u.length,n,t),this.ondata(null,a,!0),this.d=2},e.prototype.terminate=function(){for(var e=0,t=this.u;e<t.length;e++){t[e].t()}this.d=2},e}();var aP=function(){function e(){}return e.prototype.push=function(e,t){this.ondata(null,e,t)},e.compression=0,e}(),oP=function(){function e(){var e=this;this.i=new Js((function(t,n){e.ondata(null,t,n)}))}return e.prototype.push=function(e,t){try{this.i.push(e,t)}catch(n){this.ondata(n,e,t)}},e.compression=8,e}(),sP=function(){function e(e,t){var n=this;t<32e4?this.i=new Js((function(e,t){n.ondata(null,e,t)})):(this.i=new fs((function(e,t,i){n.ondata(e,t,i)})),this.terminate=this.i.terminate)}return e.prototype.push=function(e,t){this.i.terminate&&(e=_o(e,0)),this.i.push(e,t)},e.compression=8,e}(),PP=function(){function e(e){this.onfile=e,this.k=[],this.o={0:aP},this.p=Do}return e.prototype.push=function(e,t){var n=this;if(!this.onfile)throw"no callback";if(!this.p)throw"stream finished";if(this.c>0){var i=Math.min(this.c,e.length),r=e.subarray(0,i);if(this.c-=i,this.d?this.d.push(r,!this.c):this.k[0].push(r),(e=e.subarray(i)).length)return this.push(e,t)}else{var a=0,o=0,s=void 0,P=void 0;this.p.length?e.length?((P=new Ya(this.p.length+e.length)).set(this.p),P.set(e,this.p.length)):P=this.p:P=e;for(var G=P.length,K=this.c,l=K&&this.d,c=function(){var e,t=rs(P,o);if(67324752==t){a=1,s=o,h.d=null,h.c=0;var i=is(P,o+6),r=is(P,o+8),l=2048&i,c=8&i,u=is(P,o+26),d=is(P,o+28);if(G>o+30+u+d){var N=[];h.k.unshift(N),a=2;var p,J=rs(P,o+18),f=rs(P,o+22),m=Qs(P.subarray(o+30,o+=30+u),!l);4294967295==J?(e=c?[-2]:Ys(P,o),J=e[0],f=e[1]):c&&(J=-1),o+=d,h.c=J;var g={name:m,compression:r,start:function(){if(!g.ondata)throw"no callback";if(J){var e=n.o[r];if(!e)throw"unknown compression type "+r;(p=J<0?new e(m):new e(m,J,f)).ondata=function(e,t,n){g.ondata(e,t,n)};for(var t=0,i=N;t<i.length;t++){var a=i[t];p.push(a,!1)}n.k[0]==N&&n.c?n.d=p:p.push(Do,!0)}else g.ondata(null,Do,!0)},terminate:function(){p&&p.terminate&&p.terminate()}};J>=0&&(g.size=J,g.originalSize=f),h.onfile(g)}return"break"}if(K){if(134695760==t)return s=o+=12+(-2==K&&8),a=3,h.c=0,"break";if(33639248==t)return s=o-=4,a=3,h.c=0,"break"}},h=this;o<G-4;++o){if("break"===c())break}if(this.p=Do,K<0){var u=a?P.subarray(0,s-12-(-2==K&&8)-(134695760==rs(P,s-16)&&4)):P.subarray(0,o);l?l.push(u,!!a):this.k[+(2==a)].push(u)}if(2&a)return this.push(P.subarray(o),t);this.p=P.subarray(o)}if(t){if(this.c)throw"invalid zip file";this.p=null}},e.prototype.register=function(e){this.o[e.compression]=e},e}();var GP=Object.freeze({__proto__:null,Deflate:us,AsyncDeflate:ds,deflate:Ns,deflateSync:ps,Inflate:Js,AsyncInflate:fs,inflate:ms,inflateSync:gs,Gzip:vs,AsyncGzip:xs,gzip:ys,gzipSync:_s,Gunzip:bs,AsyncGunzip:ws,gunzip:Ms,gunzipSync:Ss,Zlib:Ts,AsyncZlib:Es,zlib:function(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return es(e,t,[Qo,Xo,function(){return[Ls]}],(function(e){return Zo(Ls(e.data[0],e.data[1]))}),4,n)},zlibSync:Ls,Unzlib:As,AsyncUnzlib:Rs,unzlib:Cs,unzlibSync:Ds,compress:ys,AsyncCompress:xs,compressSync:_s,Compress:vs,Decompress:Fs,AsyncDecompress:Hs,decompress:function(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";return 31==e[0]&&139==e[1]&&8==e[2]?Ms(e,t,n):8!=(15&e[0])||e[0]>>4>7||(e[0]<<8|e[1])%31?ms(e,t,n):Cs(e,t,n)},decompressSync:function(e,t){return 31==e[0]&&139==e[1]&&8==e[2]?Ss(e,t):8!=(15&e[0])||e[0]>>4>7||(e[0]<<8|e[1])%31?gs(e,t):Ds(e,t)},DecodeUTF8:Us,EncodeUTF8:Ws,strToU8:Vs,strFromU8:Qs,ZipPassThrough:tP,ZipDeflate:nP,AsyncZipDeflate:iP,Zip:rP,zip:function(e,t,n){if(n||(n=t,t={}),"function"!=typeof n)throw"no callback";var i={};Bs(e,"",i,t);var r=Object.keys(i),a=r.length,o=0,s=0,P=a,G=new Array(a),K=[],l=function(){for(var e=0;e<K.length;++e)K[e]()},c=function(){var e=new Ya(s+22),t=o,i=s-o;s=0;for(var r=0;r<P;++r){var a=G[r];try{var K=a.c.length;$s(e,s,a,a.f,a.u,K);var l=30+a.f.length+Zs(a.extra),c=s+l;e.set(a.c,c),$s(e,o,a,a.f,a.u,K,s,a.m),o+=16+l+(a.m?a.m.length:0),s=c+K}catch(e){return n(e,null)}}eP(e,o,G.length,i,t),n(null,e)};a||c();for(var h=function(e){var t=r[e],P=i[t],h=P[0],u=P[1],d=Bo(),N=h.length;d.p(h);var p=Vs(t),J=p.length,f=u.comment,m=f&&Vs(f),g=m&&m.length,v=Zs(u.extra),x=0==u.level?0:8,y=function(i,r){if(i)l(),n(i,null);else{var P=r.length;G[e]=ko(u,{size:N,crc:d.d(),c:r,f:p,m:m,u:J!=t.length||m&&f.length!=g,compression:x}),o+=30+J+v+P,s+=76+2*(J+v)+(g||0)+P,--a||c()}};if(J>65535&&y("filename too long",null),x)if(N<16e4)try{y(null,ps(h,u))}catch(e){y(e,null)}else K.push(Ns(h,u,y));else y(null,h)},u=0;u<P;++u)h(u);return l},zipSync:function(e,t){t||(t={});var n={},i=[];Bs(e,"",n,t);var r=0,a=0;for(var o in n){var s=n[o],P=s[0],G=s[1],K=0==G.level?0:8,l=(x=Vs(o)).length,c=G.comment,h=c&&Vs(c),u=h&&h.length,d=Zs(G.extra);if(l>65535)throw"filename too long";var N=K?ps(P,G):P,p=N.length,J=Bo();J.p(P),i.push(ko(G,{size:P.length,crc:J.d(),c:N,f:x,m:h,u:l!=o.length||h&&c.length!=u,o:r,compression:K})),r+=30+l+d+p,a+=76+2*(l+d)+(u||0)+p}for(var f=new Ya(a+22),m=r,g=a-r,v=0;v<i.length;++v){var x=i[v];$s(f,x.o,x,x.f,x.u,x.c.length);var y=30+x.f.length+Zs(x.extra);f.set(x.c,x.o+y),$s(f,r,x,x.f,x.u,x.c.length,x.o,x.m),r+=16+y+(x.m?x.m.length:0)}return eP(f,r,i.length,g,m),f},UnzipPassThrough:aP,UnzipInflate:oP,AsyncUnzipInflate:sP,Unzip:PP,unzip:function(e,t){if("function"!=typeof t)throw"no callback";for(var n=[],i=function(){for(var e=0;e<n.length;++e)n[e]()},r={},a=e.length-22;101010256!=rs(e,a);--a)if(!a||e.length-a>65558)return void t("invalid zip file",null);var o=is(e,a+8);o||t(null,{});var s=o,P=rs(e,a+16),G=4294967295==P;if(G){if(a=rs(e,a-12),101075792!=rs(e,a))return void t("invalid zip file",null);s=o=rs(e,a+32),P=rs(e,a+48)}for(var K=function(a){var s=Xs(e,P,G),K=s[0],l=s[1],c=s[2],h=s[3],u=s[4],d=s[5],N=qs(e,d);P=u;var p=function(e,n){e?(i(),t(e,null)):(r[h]=n,--o||t(null,r))};if(K)if(8==K){var J=e.subarray(N,N+l);if(l<32e4)try{p(null,gs(J,new Ya(c)))}catch(e){p(e,null)}else n.push(ms(J,{size:c},p))}else p("unknown compression type "+K,null);else p(null,_o(e,N,N+l))},l=0;l<s;++l)K();return i},unzipSync:function(e){for(var t={},n=e.length-22;101010256!=rs(e,n);--n)if(!n||e.length-n>65558)throw"invalid zip file";var i=is(e,n+8);if(!i)return{};var r=rs(e,n+16),a=4294967295==r;if(a){if(n=rs(e,n-12),101075792!=rs(e,n))throw"invalid zip file";i=rs(e,n+32),r=rs(e,n+48)}for(var o=0;o<i;++o){var s=Xs(e,r,a),P=s[0],G=s[1],K=s[2],l=s[3],c=s[4],h=s[5],u=qs(e,h);if(r=c,P){if(8!=P)throw"unknown compression type "+P;t[l]=gs(e.subarray(u,u+G),new Ya(K))}else t[l]=_o(e,u,u+G)}return t}});
//# sourceMappingURL=lib.js.map
